{"entries":[{"timestamp":1744613211920,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":353,"length1":51,"diffs":[[1,"        \"explosionanimation.ts\"\n"]]}]},{"type":"added","filename":"main.py","value":""}]},{"timestamp":1744614300257,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.py","patch":[{"start1":0,"length1":10795,"diffs":[[1,""]]}]}]},{"timestamp":1744614767649,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3160,"length1":24,"diffs":[[1,"info.showScore(false);\n"]]}]}]},{"timestamp":1744627675343,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3160,"length1":23,"diffs":[[1,"info.showScore(fal se);\n"]]}]}]},{"timestamp":1744627676534,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":782,"length1":31,"diffs":[[1,"    \"preferredEditor\": \"tsprj\"\n"]]}]}]},{"timestamp":1744627958547,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":782,"length1":31,"diffs":[[1,"    \"preferredEditor\": \"pyprj\"\n"]]}]}]},{"timestamp":1744637752736,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3218,"length1":20,"diffs":[[1,"countdown.load(60);\n"]]}]}]},{"timestamp":1744637880638,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3218,"length1":20,"diffs":[[1,"countdown.load(80);\n"]]}]}]},{"timestamp":1744638834206,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":8495,"length1":126,"diffs":[[1,"            const colY2 = Math.idiv(ROAD_INIT_Y, POS_FIXED_MATH_ONE) - (SCREEN_HEIGHT - CAR_Y_POS + (carFrame.height >> 1));\n"]]}]}]},{"timestamp":1744639042120,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":8495,"length1":125,"diffs":[[1,"            const gcolY2 = Math.idiv(ROAD_INIT_Y, POS_FIXED_MATH_ONE) - (SCREEN_HEIGHT - CAR_Y_POS + (carFrame.height >> 1));\n"]]}]}]},{"timestamp":1744741796076,"editorVersion":"2.0.48","changes":[{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1744613211919,"editorVersion":"2.0.48","text":{"main.ts":"const CAR_Y_POS = SCREEN_HEIGHT - (CAR_IMG_STRAIGHT.height >> 1) - 6;\nconst BACKDROP_IMG = img`\n    ................................................................................................................................................................\n    .........................................................................6666b..................................................................................\n    ...............................................................6766....6677666b6................................................................................\n    .............................................................6676666..6777666b6b6...............................................................................\n    ...............776786.......................................b67676666677666966b6b...............................................................................\n    ............77777787886b...................................66767666667766696966b6b..............................................................................\n    ...........777776766b6b6b..................66b6b.........666b66666667769696969666666............................................................................\n    ..........77676766766b6b6b................6666b6b6.....666666666666666966696966666666...........................................................................\n    .........7667676769696b6b6b6.............6666b6b6b6b..66b666666666666966b66669666666666.........................................................................\n    .......767766b69696969666b6b6...........666666b6b6b6..6666666666669696966b6666969666666666..........................................................666b6b6.....\n    .....6667696b6b69696966666b6b6b......6666776666b6b6b66666666666969696966b6b66666696666e6e6b66......................................................76766b6b6b...\n    ...6666969666b6669696966666666666..666667767666666b6b66666666696969666666b6b66666696666e666b666666666..........................................7667676666b6b6b..\n    66666696966666b66666969666666666666666667666666666666b666b466969696666666666b666666666666666b6b6b6666666666666............666666666.........677767666e6666b6b6b6\n    666969666666666666666669666666666d666667666666666d6666b66466969666666666646666666666666666666b6b6b6b66666466666666.....6666666b4666666..66666666666646e666666b66\n    6666666666d666666666666666666666666646666666666666666666666666666666666666666666666666664666666666b666666666666646666666666b46666666b466666666666666666666666666\n    6d66666666666666646666666d666b6666b666b66b6b66b666b66666b66b6b6b66b6666b6666b66b6b6b6b6b6b66b666b6666b66b666b6b6b6b6b6b6b666666b6666666666b6b6b66b666b666b666b66\n`\nconst EXPLOSION_MELODY_1 = new music.Melody(\"~11 !60,150 !100,50 !80,100 !60,150 !100,50 !80,100 !60,150 !100,250 !80,150 !60,350 !100,150 !80,150 @0,0,255,200 !60,150\");\nconst EXPLOSION_MELODY_2 = new music.Melody(\"~13 !80,50 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 @0,0,255,200 !80,100\");\nconst EXPLOSION_MELODY_3 = new music.Melody(\"~5 !80,2000\");\n\ninfo.setScore(0);\ninfo.showScore(false);\nconst countdown = new Countdown();\ncountdown.load(60);\n\nlet running = false;\nlet isOver = false;\nlet endReached = false;\nlet crashed = false;\nlet showCar = false;\nlet timeExtended = false;\n\nconst worldRender = new WorldRender();\nconst carPhysics = new CarPhysics();\nconst explosionAnimation = new ExplosionAnimation(40, 10, 2000, CAR_EXPLOSION_FRAMES);\nconst melodyPlayer1 = new music.MelodyPlayer(EXPLOSION_MELODY_1);\nconst melodyPlayer2 = new music.MelodyPlayer(EXPLOSION_MELODY_2);\nconst melodyPlayer3 = new music.MelodyPlayer(EXPLOSION_MELODY_3);\n\nconst doubledFont = image.scaledFont(image.font8, 2);\nconst speedTextLabel = new TextRender(\"SPEED\", 1, 3);\nconst speedTextValue = new TextRender(carPhysics.speed().toString(), 1, 3, doubledFont);\nconst countDownLabel = new TextRender(\"TIME\", 1, 3);\nconst countDownValue = new TextRender(countdown.remainingTime().toString(), 1, 3, doubledFont);\nconst scoreTextLabel = new TextRender(\"SCORE\", 1, 3);\nconst scoreTextValue = new TextRender(info.score().toString(), 1, 3, doubledFont);\n\ngame.onPaint(function() {\n    if (isOver || endReached)\n        return;\n\n    if (running) {\n        if (crashed) {\n            if (!explosionAnimation.isDone())\n                // Quickly stop the car after a crash\n                carPhysics.hardStop();\n            else {\n                // Move the car back on road center\n                // when the explosion animation is done\n                carPhysics.moveToXPos(0, 40);\n                const pippo = carPhysics.carXPos();\n                if (carPhysics.carXPos() == 0)\n                    crashed = false;\n            }\n        } else {\n            const offRoad = Math.abs(Math.imul(carPhysics.carXPos(), POS_FIXED_MATH_ONE)) > STRIPE_HALF_WIDTH_FP;\n            carPhysics.updateSpeed(\n                controller.A.isPressed(), \n                controller.B.isPressed(),\n                controller.left.isPressed(),\n                controller.right.isPressed(),\n                offRoad);\n\n            const deltaDistance = carPhysics.deltaTraveledDistance();\n            const oldDistance = carPhysics.traveledDistance() - deltaDistance;\n            const roadCurveDelta = worldRender.calcRoadCurveInSegment(oldDistance, deltaDistance);\n            carPhysics.applyRoadDeltaCurve(roadCurveDelta);\n        }\n    } else\n        carPhysics.clear();        \n\n    // Get player car horizontal position and set camera center\n    const carXPos = carPhysics.carXPos();\n    let carXPos2D: number;\n    let perspectiveHorizontalCenter: number;\n    if (carXPos >= 0) {\n        if (carXPos > CAR_VIEWPORT) {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT - carXPos;\n            carXPos2D = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT\n        } else {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH;\n            carXPos2D = SCREEN_HALF_WIDTH + carXPos;\n        }\n    } else {\n        if (carXPos < (-CAR_VIEWPORT)) {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT - carXPos;\n            carXPos2D = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT;\n        } else {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH;\n            carXPos2D =  SCREEN_HALF_WIDTH + carXPos;\n        }\n    }\n\n    // Draw the world\n    const backgroundImg = scene.backgroundImage();\n    const traveledDistance = carPhysics.traveledDistance();\n    endReached = worldRender.draw(backgroundImg, traveledDistance , perspectiveHorizontalCenter);\n\n    if (endReached) {\n        carPhysics.setSpeed(0);\n    }\n\n    // Draw the car\n    let carFrame: Image;\n    if (carPhysics.speed() > 1) {\n        // Car turn animation    \n        if (controller.left.isPressed())\n            carFrame = CAR_IMG_LEFT;\n        else if (controller.right.isPressed())\n            carFrame = CAR_IMG_RIGHT;\n        else\n            carFrame = CAR_IMG_STRAIGHT;\n    } else {\n        carFrame = CAR_IMG_STRAIGHT;\n    }\n    const carDrawX = carXPos2D - (carFrame.width >> 1);\n    const carDrawY = CAR_Y_POS - (carFrame.height >> 1);\n    if (showCar) \n        backgroundImg.drawTransparentImage(carFrame, carDrawX, carDrawY);\n\n    // Draw car explosion animation\n    if (!explosionAnimation.isDone()) {\n        explosionAnimation.draw(backgroundImg, carXPos2D, CAR_Y_POS);\n    }\n\n    // Draw HUD\n    speedTextValue.setText(carPhysics.speed().toString());\n    countDownValue.setText(countdown.remainingTime().toString());\n    scoreTextValue.setText(info.score().toString());\n    speedTextLabel.draw(backgroundImg, 1, 1);\n    speedTextValue.draw(backgroundImg, 0, speedTextLabel.height() + 2);\n    countDownLabel.draw(backgroundImg, SCREEN_HALF_WIDTH, 1, TextAlignment.Center);\n    countDownValue.draw(backgroundImg, SCREEN_HALF_WIDTH, countDownLabel.height() + 2, TextAlignment.Center);\n    scoreTextLabel.draw(backgroundImg, SCREEN_WIDTH - 2, 1, TextAlignment.Right)\n    scoreTextValue.draw(backgroundImg, SCREEN_WIDTH - 1, scoreTextLabel.height() + 2, TextAlignment.Right);\n\n    if (!crashed && showCar) {\n        // Check if car is outside the road\n        if (Math.imul(Math.abs(carXPos) + (carFrame.width >> 1), POS_FIXED_MATH_ONE) > STRIPE_HALF_WIDTH_FP) {\n            // Check for crash against obstacles\n            const colX1 = carXPos - (carFrame.width >> 1);\n            const colX2 = colX1 + carFrame.width;\n            const colY2 = Math.idiv(ROAD_INIT_Y, POS_FIXED_MATH_ONE) - (SCREEN_HEIGHT - CAR_Y_POS + (carFrame.height >> 1));\n            const colY1 = colY2 - carFrame.height;\n            if (worldRender.checkCollision(colX1, colY1, colX2, colY2, STRIPE_HEIGHT >> 1)) \n            {\n                crashed = true;\n                control.runInParallel(function() {\n                    melodyPlayer1.play(170);\n                });\n                control.runInParallel(function() {\n                    melodyPlayer2.play(170);\n                });\n                control.runInParallel(function() {\n                    melodyPlayer3.play(90);\n                });\n                explosionAnimation.begin();  \n            }\n        }\n    }\n\n    // Extend time on check sign\n    if (!timeExtended && worldRender.onCheckSign(traveledDistance)) {\n        timeExtended = true;\n        countdown.add(30);\n        control.runInParallel(function() {\n            music.playMelody(\"B5:2 R:1 B5:2 R:1 B5:2\", 160);            \n        })\n    }\n});\n\nfunction beginSequence(): void {\n    // Show car entering the scene\n    let carSprite = sprites.create(CAR_IMG_SIDE_L);\n    carSprite.x = 200;\n    carSprite.y = CAR_Y_POS;\n    carSprite.vx = -100;\n    while (carSprite.x > SCREEN_HALF_WIDTH)\n        pause(10);\n    carSprite.vx = 0;\n    carSprite.x = SCREEN_HALF_WIDTH;\n\n    carSprite.setImage(CAR_IMG_LEFT_2);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    pause(100);\n    carSprite.setImage(CAR_IMG_LEFT);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    pause(100);\n    carSprite.setImage(CAR_IMG_STRAIGHT);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    showCar = true;\n    pause(100);\n    carSprite.destroy();    \n    \n    // Start countdown\n    music.setVolume(255);\n    music.setTempo(60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_1;\n    music.playMelody(\"C5:1 R:4\", 60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_2;\n    music.playMelody(\"C5:1 R:4\", 60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_GREEN;\n    control.runInParallel(function() {\n        music.playMelody(\"A5:4\", 60);        \n    });\n}\n\nbeginSequence();\ncountdown.start();\nrunning = true;\n\ngame.onUpdateInterval(200, function() {\n    if (!isOver) {\n        info.changeScoreBy(Math.idiv(carPhysics.speed(), 20));\n        info.showScore(false);\n\n        // Time over game end\n        if (countdown.isExpired()) {    \n            isOver = true;\n            game.over();            \n        }\n\n        // Circuit end reached. Game won\n        if (endReached) {        \n            isOver = true;\n            game.over(true, effects.confetti);\n        }\n    }\n});\n","README.md":" \n\n\n> Open this page at [https://cdarius.github.io/makecode-outrun/](https://cdarius.github.io/makecode-outrun/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/cdarius/makecode-outrun** and import\n\n## Edit this project ![Build status badge](https://github.com/cdarius/makecode-outrun/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/cdarius/makecode-outrun** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/cdarius/makecode-outrun/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/arcade\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","mathconst.ts":"// --- Fixed point math configuration\nconst ANGLES_BITS = 4;\nconst ANGLES_FIXED_MATH_ONE = Math.pow(2, ANGLES_BITS);\nconst POS_BITS = 7;\nconst POS_FIXED_MATH_ONE = Math.pow(2, POS_BITS);\n// --- End fixed point configuration\n\nconst SCREEN_WIDTH = scene.screenWidth();\nconst SCREEN_HEIGHT = scene.screenHeight();\nconst SCREEN_HALF_WIDTH = Math.idiv(SCREEN_WIDTH, 2);\nconst SCREEN_HALF_HEIGHT = Math.idiv(SCREEN_HEIGHT, 2);\n\n// --- Car configuration\nconst CAR_VIEWPORT = Math.idiv(scene.screenWidth(), 7);\n// end car configuration\n\nconst SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT = SCREEN_HALF_WIDTH + CAR_VIEWPORT;\nconst SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT = SCREEN_HALF_WIDTH - CAR_VIEWPORT;","obstacles.ts":"class Obstacle {\n    public offset: number;\n    public reqMirror: boolean;\n    public image: Image;\n\n    constructor(offset: number, reqMirror: boolean, image: Image) {\n        this.offset = offset;\n        this.reqMirror = reqMirror;\n        this.image = image;\n    }\n}\n\nconst OBST_IMG_SEMAPHORE_OFF = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_RED_1 = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611222221166688\n    8866112212222116688\n    8866112122222116688\n    8866112222222116688\n    8866112222222116688\n    8866112222222116688\n    8866611222221166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_RED_2 = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611222221166688\n    8866112212222116688\n    8866112122222116688\n    8866112222222116688\n    8866112222222116688\n    8866112222222116688\n    8866611222221166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_GREEN = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611777771166688\n    8866117717777116688\n    8866117177777116688\n    8866117777777116688\n    8866117777777116688\n    8866117777777116688\n    8866611777771166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\n\nconst OBST_SEMAPHORE_SIGN = new Obstacle(35 * POS_FIXED_MATH_ONE, false, OBST_IMG_SEMAPHORE_OFF);\n\nconst OBST_START_SIGN = new Obstacle(70 * POS_FIXED_MATH_ONE, false, img`\n    ..111111111111.................................................................................................................................................................................................111111111111111..\n    .1111111111111111111111111111111111111111.....................................................................................................................................1111111111111111111111111111111111111111111111111.\n    111111111111111111111111111111111111111111111111111111111111111111111..............................................................................11111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111dddddddddddddddddddd11111111111111111111111111111111111111111111111111.........................................111111111111111111111111111111111111111111111111dddddddddddddddddddddddddd111111111111111111111\n    111111111111111111111111ff111111111ff1ddddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddd11111ff111111111ff11111111111111111111111111111\n    111111111111111111111ffff1f1111111f1ffff1111111111ddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddd11ffff1f1111111f1ffff11111111111111111111111111\n    1111111111111111111fff1ff1f1111111f1ff1fff1111111111111111111111111fffffffffdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffffffffffffff1111111111111111111fff1ff1f1111111f1ff1fff111111111111111111111111\n    11111111111111111ffff11f1fff11111fff1f11ffff111111111111111111111fff2222222fffddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd111111f2222222222222f11111111111111111ffff11f1fff11111fff1f11ffff1111111111111111111111\n    111111111111111fff1ff1ff1f1f11111f1f1ff1ff1fff111111111111111111ff2222222222ff11fffffffffffffffdddddddddddddddddddddddddddfffffffffffffff111111f2222222222222f111111111111111fff1ff1ff1f1f11111f1f1ff1ff1fff11111111111111111111\n    111111111111111ff11111ff1f11f111f11f1ff11111fff1111111111111111ff22222222222f111f2222222222222f1111111fffffffffffff1111111f2222222222222fff1111f2222222222222f111111111111111ff11111ff1f11f111f11f1ff11111fff1111111111111111111\n    111111111111111fffff11f11ffff111ffff11f11fffff11111111111111111f222222fffff2f111f2222222222222f111111ff22222222222ff111111f222222222222222ff111f2222222222222f111111111111111fffff11f11ffff111ffff11f11fffff11111111111111111111\n    111111111111111f11fffff111ffff1ffff111fffff11f11111111111111111f222222f111fff111f2222222222222f111111f2222222222222f111111f222222fffff22222ff11f2222222222222f111111111111111f11fffff111ffff1ffff111fffff11f11111111111111111111\n    1111111111111111f1f11ffff1ffff1ffff1ffff11f1f111111111111111111f222222ff111f1111f2222222222222f111111f2222222222222f111111f222222f111ff22222f11f2222222222222f1111111111111111f1f11ffff1ffff1ffff1ffff11f1f111111111111111111111\n    11111111111dddddfff11f11fff11fff11fff11f11fff111111111111111111ff222222fff111111f2222222222222f11111ff2222222222222ff11111f222222f1111f22222f11ffff222222fffff1111111111111111fff11f11fff11fff11fff11f11fffddddd1111111111111111\n    11111111111ddddddf11ffffdddddfffdd111ffff11f11111111111111111111ff2222222fff1111f2222222222222f11111f222222fff222222f11111f222222f111ff2222ff11111f222222f111111111111111111111f11ffff1ddddfffdddddffff11fdddddd1111111111111111\n    111111111111dddddfffffdddddddfdfdddddddfffffdddd11111111111111111fff2222222ff111ffff222222fffff11111f222222f1f222222f11111f222222fffff22222f111111f222222f111111111111111111111fffffdddddddfdfdddddddfffffddddd11111111111111111\n    111111111111111dddffdddddddddfdfdddddddddffddddddddddddddddddddddddffff22222ff11111f222222f11111111ff222222f1f222222f11111f222222222222222ff111111f222222fddddddddddddddddddddddffdddddddddfdfdddddddddffd1111111111111111111111\n    1111111111111111111dddddddddfdddfdddddddddddddddddddddddddddddddfdddddff22222fdddddf222222f11111111f222222ff1ff22222ff1111f222222222222222fdddddddf222222fddddddddddddddddddddddddddddddddfdddfdddddddddd11111111111111111111111\n    111111111111111111111111111dfdddfddddddddddddddddddddddddddddddfffddddff22222fdddddf222222fddddddddf222222fdddf222222fddddf222222ffff22222ffddddddf222222fddddddddddddddddddddddddddddddddfdddfddddd1111111111111111111111111111\n    111111111111111111111111111f11111f1111111111dddddddddddddddddddf2ffffff222222fdddddf222222fdddddddff222222fdddf222222fddddf222222fddff22222fddddddf222222fdddddddddddddddddddddddddddddddfdddddf11111111111111111111111111111111\n    111111111111111111111111111f11111f1111111111111ddddddddddddddddf222222222222ffdddddf222222fdddddddf2222222fffff222222fddddf222222fdddf22222ffdddddf222222fdddddddddddddddddddddddddddddddfdd111f11111111111111111111111111111111\n    11111111111111111111111111f1111111f1111111111111111dddddddddddff22222222222ffddddddf222222fdddddddf222222222222222222ffdddf222222fdddf222222fdddddf222222fddddddddddddddddddddddddddddd1f1111111f1111111111111111111111111111111\n    11111111111111111111111111f1111111f1111111111111111111ddddddddffff2222222fffdddddddf222222fddddddff2222222222222222222fdddf222222fdddff22222fdddddf222222fdddddddddddddddddddddddd111111f1111111f1111111111111111111111111111111\n    1111111111111111111111111f111111111f11111111111111111111111111111fffffffffdddddddddf222222fddddddf22222222222222222222fdddf222222fddddf22222ffddddffffffffdddddddddddddddd1111111111111f111111111f111111111111111111111111111111\n    1111111111111111111111111f111111111f1111111111111111111111111111111111111ddddddddddf222222fddddddf222222fffffffff22222ffddf222222fddddf222222fddddd111111111111111111111111111111111111f111111111f111111111111111111111111111111\n    .1111111111111111111111111111111111111111111111111111111111111111111111111111111111ffffffffdddddff22222ffdddddddf222222fddffffffffddd1ffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111.\n    ..1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111ffffffffddddddddffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..\n    ................1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..................\n    ...................................1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111......................................\n    ..........................................................11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............................................................\n    .................................................................................1111111111111111111111111111111111111111111111111111111111111..................................................................................\n`);\n\nconst OBST_FINISH_SING  = new Obstacle(70 * POS_FIXED_MATH_ONE, false, img`\n    ..111111111111.................................................................................................................................................................................................111111111111111..\n    .1111111111111111111111111111111111111111.....................................................................................................................................1111111111111111111111111111111111111111111111111.\n    111111111dd1111111111111111111111111111111111111111111111111111111111..............................................................................1111111111111111111111111111111111111111111111111111111111111111dd11111111111\n    1111111111dddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111...........................................11111111111111111111111111111111111111111111111ddddddddddddddddddddddddddddddddddd111111111111\n    11111111111111111111111111111111111111ddddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111ddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111111111fffffffdddddddddddddddddddddddddddddddddddddddddddddddddddddffffffff1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111111ffff22222fffffddddddddddddddddddddddddddddddddddddddddddddddd11f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111111ff222222222222ff11111111fffffffdddddddddddddfffffffffffff1111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111f22222222222222ff111111fff22222fff1111111111ff22222222222ff111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111ff22222222222222f111111ff222222222ff111111111f2222222222222f111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1111ddddd11111111111111111111111111111111111111111111111111111111111f22222222222222ff11111ff22222222222ff11111111f2222222222222f111111f222222f11111111111111111111111111111111111111111111111111111111111111111111111ddd11111111\n    11111111dddddddddddd11111111111111111111111111111111111111111111111ff222222fffffffff11111ff2222222222222ff111111ff2222222222222ff11111f222222f11111111111111111111111111111111111111111111111111111111ddddddddddddddd11111111111\n    11111111111ddddddddddddddddddddddd111111111111111111111111111111111f222222ff1111111111111f222222222222222f111111f222222fff222222f11111f222222f11111111111111111111111111111111111111111ddddddddddddddddddddddddddd11111111111111\n    111111111111ddddddddddddddddddddddddddddddddddddddd1111111111111111f222222f1111111111111ff222222fff222222ff11111f222222f1f222222f11111f222222f11111111111111111111111111111111ddddddddddddddddddddddddddddddddd11111111111111111\n    1111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddf222222fdddffffffff11f222222ff1ff222222f1111ff222222f1f222222f11111f222222f111111111ddddddddddddddddddddddddddddddddddddddddddddddddddd1111111111111111111111\n    1111111111111111111ddddddddddddddddddddddddddddddddddddddddddddddddf222222ffddf222222fddf222222fdddf222222f1dddf222222ffdff22222ffddddf222222fddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111\n    111111111111111111111111111ddddddddddddddddddddddddddddddddddddddddff222222ffff222222fddf222222fdddf222222fddddf222222fdddf222222fddddf222222fdddddddddddddddddddddddddddddddddddddddddddddddddddddd1111111111111111111111111111\n    111111111111111111111111111111111111111111ddddddddddddddddddddddddddf2222222222222222fddf222222ffdff222222fdddff222222fdddf222222fddddf222222fdddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111dddddddddddddddddddff222222222222222fddff222222fff222222ffdddf2222222fffff222222fddddf222222ffffffffddddddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111dddddddddddddff22222222222222fdddf222222222222222fddddf222222222222222222ffdddf2222222222222fdddddddddddddddddddddddddddddddddd11111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111dddddddddddff2222222222222fdddff2222222222222ffdddff2222222222222222222fdddf2222222222222fdddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111ddddffff2222222222fddddff22222222222ffddddf22222222222222222222fdddf2222222222222fddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111ddddddffffffffffffdddddff222222222ffdddddf222222fffffffff22222ffddfffffffffffffff111111111111111111111111111111111111111111111111111111111111111111111111111\n    .111111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddfff22222fffdddddff22222ffdddddddf222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.\n    ..1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111dfffffffdddddddffffffff11111111ffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..\n    ...........1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............\n    .......................111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............................\n    .............................................11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...................................................\n    .........................................................................11111111111111111111111111111111111111111111111111111111111111111111111111.............................................................................\n`);\n\nconst OBST_CHECK_SIGN = new Obstacle(70 * POS_FIXED_MATH_ONE, true, img`\n    ........................................................................bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb........................................................................\n    .......................................................................bddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddb.......................................................................\n    ......................................................................bdd666666666666666666666666666666666666666666666666666666666666666666666666666666ddb......................................................................\n    ......................................................................bd66666666666666666666666666666666666666666666666666666666666666666666666666666666db......................................................................\n    ......................................................................bd66666665555555666555555666555555665555555555556666666555555566655555566655555566db......................................................................\n    ......................................................................bd66666555555555566555555666555555665555555555556666655555555556655555566655555566db......................................................................\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbd66665555555555566555555666555555665555555555556666555555555556655555566555555566dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddbd66655555555555566555555666555555665555555555556665555555555556655555566555555666dbdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n    bd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbbd66655555555555666555555666555555665555556666666665555555555566655555565555555666dbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....db\n    .bd....db....db.db.bd....db....db.db.bd....db....db.db.bd....db....db.bd66555555566666666555555555555555665555555555666655555556666666655555555555556666db.bd....db....db.db.bd....db....db.db.bd....db....db.db.bd....db....db.\n    ..bd...db...db..db..bd...db...db..db..bd...db...db..db..bd...db...db..bd66555555666666666555555555555555665555555555666655555566666666655555555555566666db..bd...db...db..db..bd...db...db..db..bd...db...db..db..bd...db...db..\n    ...bd..db..db...db...bd..db..db...db...bd..db..db...db...bd..db..db...bd66555555666666666555555555555555665555555555666655555566666666655555555555556666db...bd..db..db...db...bd..db..db...db...bd..db..db...db...bd..db..db...\n    ....bd.db.db....db....bd.db.db....db....bd.db.db....db....bd.db.db....bd66555555566666666555555555555555665555555555666655555556666666655555555555555666db....bd.db.db....db....bd.db.db....db....bd.db.db....db....bd.db.db....\n    .....bddbdb.....db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....bd66655555555555666555555666555555665555556666666665555555555566655555565555555666db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbd66655555555555566555555666555555665555555555556665555555555556655555566555555566dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddbd66665555555555566555555666555555665555555555556666555555555556655555566655555566dbdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n    ......................................................................bd66666555555555566555555666555555665555555555556666655555555556655555566655555566db......................................................................\n    ......................................................................bd66666665555555666555555666555555665555555555556666666555555566655555566655555566db......................................................................\n    ......................................................................bd66666666666666666666666666666666666666666666666666666666666666666666666666666666db......................................................................\n    ......................................................................bdd666666666666666666666666666666666666666666666666666666666666666666666666666666ddb......................................................................\n    .......................................................................bddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddb.......................................................................\n    ........................................................................bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb........................................................................\n`);\n\nconst OBST_TRELLIS = new Obstacle(0, false, img`\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n`);\n\nconst OBST_TURN_RIGHT_SIGN_L = new Obstacle(20 * POS_FIXED_MATH_ONE, true, img`\n        .888888888888888888.\n        88666666666666666688\n        86611111111111111668\n        86111111111211111168\n        86111111111221111168\n        86111111111222111168\n        86111111222222211168\n        86111122222222221168\n        86111222222222222168\n        86111222222222221168\n        86112222222222211168\n        86112222211222111168\n        86112222111221111168\n        86112222111211111168\n        86112222111111111168\n        86112222111111111168\n        86112222111111111168\n        86612222111111111668\n        88666666666666666688\n        .888888888888888888.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        .222222222222222222.\n        22111111111111111122\n        2111F1F111F11F1F1112\n        211F11F11F1F1F1F1F12\n        2111F1FF11F111F11112\n        22111111111111111122\n        .222222222222222222.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n`);\n\nconst OBST_TURN_CHICANE_SIGN_L = new Obstacle(20 * POS_FIXED_MATH_ONE, true, img`\n        .888888888888888888.\n        88666666666666666688\n        86611122222222111668\n        86111122222222111168\n        86111111222222111168\n        86111112222222111168\n        86111122222222111168\n        86111222222122111168\n        86112222221122111168\n        86112222222111111168\n        86111222222211111168\n        86111122222221111168\n        86111112222222111168\n        86111111222222211168\n        86111111122222211168\n        86111111222222211168\n        86111112222222111168\n        86611122222221111668\n        88666666666666666688\n        .888888888888888888.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        .222222222222222222.\n        22111111111111111122\n        2111F1F111F11F1F1112\n        211F11F11F1F1F1F1F12\n        2111F1FF11F111F11112\n        22111111111111111122\n        .222222222222222222.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n`);\n\nconst OBST_BUSH = new Obstacle(0, false, img`\n    ...............cc...............\n    ............66c56ccc............\n    ............67c55c6c............\n    ...........66c7557cc6...........\n    ..........6c77577777cc..........\n    .........66cc677776c666.........\n    ........67575676c7c6777c........\n    ........666556666c666ccc........\n    ......6676c7777666667cc66c......\n    .....67776776776676677c777c.....\n    .....666666cc776c77cccc66cc.....\n    ....6677777767676c7c6666676c....\n    ...66c766777767776666666777cc...\n    .6667766777777777666667766cc666.\n    .677776776677777776676c77667776.\n    6667677cc67777767776776ccc6666cc\n    66c67776c777677c677667766777666c\n    .c677766666cc676c766ccc6667776c.\n    .666cc67766666666cc6666676666cc.\n    .cccc667766776666666666c67766...\n    ...c67776677676666666766c67cc...\n    ...66677c777677666666776cccc6...\n    ......cc677c67776776c7ccc6......\n    ........6cc67776c7776ccc........\n    ...........66776c77cc...........\n    .............6666c6.............\n    .............feeeeff............\n    ...........feeeeeeeeff..........\n    ............effeeef.............\n    ...............fef..............\n    ...............fef..............\n    ................f...............\n`);\n\nconst OBST_PILLAR = new Obstacle(0, false, img`\n    ........fffffffffffffff........\n    ....fffffdddedfdddddfddffff....\n    .ffffdddfddeedfddeddfdddefdfff.\n    fdddfdddfdeeddfdeeddfdeeefddddf\n    fdddfddfddeeddfddedfddeeefddeef\n    fedfdddfdddeddfdeddfddeeefdddef\n    fedfddddfffffffffffffffddfdddef\n    fddfffffbbbbbbfbbbbfbbbffffdddf\n    ffffbbbfddddddfddddfdddbbfbffff\n    fddfddddfdfffffffffffdddfddbbbf\n    fdddfdffffddddfddddd7ffffdddddf\n    feedff7fddddddfdddd7ddfddffdddf\n    .fff777fddddddfdddddddf7dddfff.\n    ...f77dfdddddddfddddddfd7ddf...\n    ...f777fddffffdfddffffdd7ddf...\n    ...f7ddfffefddffffddfdfffddf...\n    ...fdffddeefddddddddfddddfff...\n    ...ffdddeeefdddddddefdddddff...\n    ...fddddeedfdddddddefdddddff...\n    ...fdddddedfddfffdeefffdddff...\n    ...fddddddffffdfdfffeedfff.f...\n    ...fddffffdddddfddddeefdddff...\n    ...fffdf7ddddddfdddd7efddddf...\n    ...fdddf7ddddddfdddd7dfddddf...\n    ...fdddf7ddddddffff77dfddddf...\n    ...fddd7fffffffddd7ffffffddf...\n    ...fdfffdddfdddddd7fdddddfff...\n    ...ffd7ddddfddddd77fddddddff...\n    ...fd77ddddfddedd7dfddddddff...\n    ...fd7ddddfddeeedddfdddddfdf...\n    ...fd7ddddfdddeeefffffffdfdf...\n    ...fdddddffffffffdddddfdffff...\n    ...ffffffdddddfdddddddfddddf...\n    ...fddfdddddddfdddddddfddddf...\n    ...fddfdddddddfddddddddfffff...\n    ...fddffffffddfdddffffff7fdf...\n    ...fddddfddffffffffdfddd7fdf...\n    ...fddddfddfeedddddefdd77fdf...\n    ...fffddfddfeedddeedfdd7dfff...\n    ...fddfffddfedddddddfdd7ffdf...\n    ...fddfddfffddfdddddff7fdddf...\n    ...fddfdddddffdfffffd7fddddf...\n    ...ffdfdddddd7dfddddd7fddddf...\n    ...fdfffdddd7ddfddddddfddfff...\n    ...fddddffffdddffddddffffdef...\n    ...fdddfedddfffddffffddeeeef...\n    ...fdddfeeddfdddddfddddefeef...\n    .fffdddfeeddfddeedfdddddfdefff.\n    fdddffdfddddfdddedfddddddffdddf\n    fdddddffffddfddeddfddffffdddddf\n    fdddddfdddfffffffffffddddfddddf\n    ffffdfddddfdddfddfdddffddddffff\n    fdddffffdfddddfddfdddddffffdd7f\n    fdddfeedfffffffffffffffdfddfd7f\n    feddfeeefddd7fddddefdddefddf7df\n    feddf7edfdd77fdddeefdddefdefddf\n    feefddddfdd7fdddeeedfdeddfedfdf\n    .fffdddfddddfddddeddfdeddfefff.\n    ....ffffddddfdddddddfddffff....\n    ........fffffffffffffff........\n`);\n\nconst OBST_PILLAR_TOP = new Obstacle(58 * POS_FIXED_MATH_ONE, false, img`\n    .ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffff..ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..ffffffffffff..fffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff.\n    fbbbbbdddbbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbbbbbbbbffbbbbbbbbbbffccffbbbbbdddbbbbbbffbbbdddbbbbbbffccbbbbdbbbbddbffbbbbbbbbbbdbbffbbbbbbbbbbbbbffbbbbbbbbbffccffbbbbbdddbbbbdffbbbbdddbbbbbbffbbbbbbbbbbbbffbbbbbdddbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbbf\n    fbdddbbbbbddbbbffddddbbbbbddbbbffdbbbbbbdbbbbffbbddddddddbfffbbddddddddbcccffddbdbbbbbddbbbffddbbbbbddbbbffcdddddbdddbbbbffbbddddddddbbbffbbddddddddbfdffbbbbdddbbbcccffddbbbbbbbbbbbffdddbbbbbddbbbffbbddddddddbfffddbdbbbbbddbbffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbbf\n    fddddddddddedddffddddddddddedddffeeedddddddddffdddddddddedfffdddddddddedffbffddddddddddedddffddddddddedddffdddddeedddddddffdddddddddedddffdddddddddedfbffddddddddbdffbffdddddbbddddddffdddddddddedddffdddddddddedfffddddddddddeddffddddddddddedddffeeedddddddddffddddddddddedddf\n    fdddffdddddddddffdddffdddddddddffdeeddddddeddffdddddddedddfffdddddddeddddfdffdddffdddddddddffdffdddddddddffddddddeedddddeffdddddddeddeddffdddddddedddffffdddddddddddfdffdddddfdddddddffddffdddddddddffdddddddedddfffdddffddddddddffdddffdddddddddffdeeddddddeddffdddffdddddddddf\n    fffffddddddddddffdddfddddddddddffdddddeeddeddffdddddedededdffdddddedededffdffdddfddddddddddffffddddddddddffddddddeeefdddeffdddddededeeddffdddddedededdfffddddeeeeddffdffddddffddeddddfffffddddddddddffdddddedededdffdddfdddddddddffdddfddddddddddffdddddeeddeddffffffddddddddddf\n    fffffffffeeddddffdeefffffeeddddffd4ddddddddddffdeedddeedeefffdeedddeedeedddffdddfffffeeddddffffffffeeddddffddeeddfffdddffffdeedddeededddffdeedddeedeefdffeeddfddddedddffdddddffddddddfffffffffeeddddffdeedddeedeefffdddfffffeedddffdeefffffeeddddffd4ddddddddddffffffffffeeddddf\n    fffdfffddedddddffddefffddedddddffdddeddddddddffdddddeeeedefffdddddeeeedddddffdddfffddedddddffdfffddedddddffdddedd4ffff4d4ffdddddeeeeddddffdddddeeeedefdffeeddffdddddddffdddddeeeeddddfffdfffddedddddffdddddeeeedefffdddfffddeddddffddefffddedddddffdddeddddddddffffdfffddedddddf\n    fffffddeeedddddffddefddeeedddddff4fffefffddddffdddeeeededfeffdddeeeededddddfffddfddeeedddddffffddeeedddddffdddeeddffffdddffdddeeeededdddffdddeeeededfeeffdddddffddddddfffdddeedffddddfffffddeeedddddffdddeeeededfefffddfddeeeddddffddefddeeedddddff4fffefffddddffffffddeeedddddf\n    ffffddeeeeffdddffdddddeeeeffdddffdddeeeeeedddffdddedddeddeeffdddedddedddddbfffddddeeeeffdddfffddeeeeffdddffdddddddfffffddffdddedddedddddffdddedddeddeedffddddddfdddddbfffddeeeddfddeeffffddeeeeffdddffdddedddeddeefffddddeeeeffddffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffdddf\n    feffddeeeddffddffdddddeeeddffddffddd4eeedeeddfffdddddddddfdfffddddddddddddbffffdddeeeddffddfffddeeeddffddff.dddddddf4fffdfffdddddddddeddfffdddddddddfddffdddfddffddddbffffdeeeeeffdddffffddeeeddffddfffdddddddddfdffffdddeeeddffdffdddddeeeddffddffddd4eeedeeddffeffddeeeddffddf\n    feeffdddddddddfffffdfdddddddddfffddddddddddddfffffdddddddfdfffffddddddddbbbffffffdddddddddfffffdddddddddffffffdd4ddddfffffffffddddddddddfffffdddddddfdefffddddddfddbbbfffffddddddddeeffeffdddddddddffffffdddddddfdffffffdddddddddffffdfdddddddddfffddddddddddddffeeffdddddddddff\n    fdfffddddddffffffffffddddddffffffddddddddddddffffffffddddddffffffffddddbbbbffffffddddddffffffffddddddffffffffffdddddddfffffffffffdddddddffffffffdddddddffdddddddffbbbbffffffffdddddddfffffddddddffffffffffffddddddffffffddddddfffffffffddddddffffffddddddddddddffdfffddddddfffff\n    cffffffffffffffccffffffffffffffccffffffffffffffffffffffffffccffffffffffffffffffffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffcfffffffffffffcffffffffffffffccffffffffffffffccffffffffffffccffffffffffffff.\n    cffffffffffffffccfffffffffffffccfffffffffffffccffffffffffffffccffffffffffffffccffffffffffffccfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffccffffffffffffffccffffffffffffccffffffffffffccffffffffffffffccffffffffffffffffffffffffffffccfffffffffffff.\n    fccbbbbdbbbbddbffbbbbbbbbbbdbbffbbbbbbbbbbbbbffbbbbbbbbbfcfccffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbbfbbbbdddbbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbbbbbbbbffbbbbbbbbbbffccffbbbbbdddbbbbbffcbbbbdbbbbddbffbbbbbbbbbbdbbf\n    fcdddddbdddbbbbffbbddddddddbbbffbbddddddddbfdffbbbbdddbbbbcccffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbbfdddbbbbbddbbbffddddbbbbbddbbbffdbbbbbbdbbbbffbbddddddddbfffbbddddddddbcccffddbdbbbbbddbbffdddddbdddbbbbffbbddddddddbbbf\n    fdddddeedddddddffdddddddddedddffdddddddddedfbffddddddddbddffbffddddddddddedddffeeedddddddddffddddddddddeddffddddddddddedddffeeedddddddddffddddddddddedddfdddddddddedddffddddddddddedddffeeedddddddddffdddddddddedfffdddddddddedffbffddddddddddeddffddddeedddddddffdddddddddedddf\n    fddddddeedddddeffdddddddeddeddffdddddddedddffffddddddddddddfdffdddffdddddddddffdeeddddddeddffdddffddddddddffdddffdddddddddffdeeddddddeddffdddffdddddddddfddffdddddddddffdddffdddddddddffdeeddddddeddffdddddddedddfffdddddddeddddfdffdddffddddddddffdddddeedddddeffdddddddeddeddf\n    fddddddeeefdddeffdddddededeeddffdddddedededdfffddddeeeedddffdffdddfddddddddddffdddddeeddeddffffffdddddddddffdddfddddddddddffdddddeeddeddffffffddddddddddffffddddddddddffdddfddddddddddffdddddeeddeddffdddddedededdffdddddedededffdffdddfdddddddddffdddddeeefdddeffdddddededeeddf\n    fddeeddfffdddffffdeedddeededddffdeedddeedeefdffeeddfddddeddddffdeefffffeeddddffd4ddddddddddffffffffffeedddffdeefffffeeddddffd4ddddddddddffffffffffeeddddffffffffeeddddffdeefffffeeddddffd4ddddddddddffdeedddeedeefffdeedddeedeedddffdddfffffeedddffdeeddfffdddffffdeedddeededddf\n    fdddedd4ffff4d4ffdddddeeeeddddffdddddeeeedefdffeeddffddddddddffddefffddedddddffdddeddddddddffffdfffddeddddffddefffddedddddffdddeddddddddffffdfffddedddddffdfffddedddddffddefffddedddddffdddeddddddddffdddddeeeedefffdddddeeeedddddffdddfffddeddddffddedd4ffff4d4ffdddddeeeeddddf\n    fdddeeddffffdddffdddeeeededdddffdddeeeededfeeffdddddffdddddddffddefddeeedddddff4fffefffddddffffffddeeeddddffddefddeeedddddff4fffefffddddffffffddeeedddddffffddeeedddddffddefddeeedddddff4fffefffddddffdddeeeededfeffdddeeeededddddfffddfddeeeddddffddeeddffffdddffdddeeeededdddf\n    fdddddddfffffddffdddedddedddddffdddedddeddeedffddddddfddddddbffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffddffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffdddfffddeeeeffdddffdddddeeeeffdddffdddeeeeeedddffdddedddeddeeffdddedddedddddbfffddddeeeeffddffddddddfffffddffdddedddedddddf\n    f.dddddddf4fffdfffdddddddddeddfffdddddddddfddffdddfddffdddddbffdddddeeeddffddffddd4eeedeeddffeffddeeeddffdffdddddeeeddffddffddd4eeedeeddffeffddeeeddffddfffddeeeddffddffdddddeeeddffddffddd4eeedeeddfffdddddddddfdfffddddddddddddbffffdddeeeddffdffdddddddf4fffdfffdddddddddeddf\n    ffffdd4ddddfffffffffddddddddddfffffdddddddfdefffddddddfdddbbbffffdfdddddddddfffddddddddddddffeeffdddddddddffffdfdddddddddfffddddddddddddffeeffdddddddddffeffdddddddddfffffdfdddddddddfffddddddddddddfffffdddddddfdfffffddddddddbbbffffffdddddddddffffdd4ddddfffffffffddddddddddf\n    fffffdddddddfffffffffffdddddddffffffffdddddddffdddddddffbbbbbffffffddddddffffffddddddddddddffdfffddddddfffffffffddddddffffffddddddddddddffdfffddddddffffffffddddddffffffffffddddddffffffddddddddddddffffffffddddddffffffffddddbbbbffffffddddddffffffffdddddddfffffffffffdddddddf\n    ..fffffffffffff..fffffffffffff..fffffffffffff..ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff.ffffffffffffff..ffffffffffff..ffffffffffffffffffffffffffff..ffffffffffffff..ffffffffffffffffffffffffff..fffffffffffffffffffffffffffffccfffffffffffffccfffffffffffffc\n`);\n\nconst OBST_SURF_BLUE_L = new Obstacle(-100 * POS_FIXED_MATH_ONE, true, img`\n        .........................CC..\n        ........................FFC..\n        ........................FF...\n        ........................FF...\n        .......................FEE...\n        ......................FFEE...\n        ......................FFEE...\n        .....................FFE8E...\n        .....................FE88E...\n        .....................FE88E...\n        ....................FE888E...\n        ....................F888EE55.\n        ...................FF8888E...\n        ..................FFE8E88EE..\n        ..................FFE8888EE..\n        .................FFE886688E..\n        .................FE8866888E..\n        .................FE8E68888E..\n        ................FE8E888888E..\n        ...............FF8888888EEE5.\n        ...............FF9EEEEEEEEE..\n        ...............FF5EEEE8888E..\n        ..............FFE988888888EE.\n        .............FFE99888EEE888E.\n        .............FFE998E8888888E.\n        .............FE99988E888E88E.\n        .............FE9198E88888E8E.\n        ............FE9119888EEEEEEE5\n        ...........FF9999EEEEEEEEEEE.\n        ...........FF9EEEEEEE888888E.\n        ..........FFEEEEE98888E8888E.\n        ..........FFE9999988888888E..\n        ..........FE99991988888888E..\n        ..........FE999199888E8E88E..\n        .........FE99199998888888E...\n        .........FE9199999EEEEEEEE55.\n        ........FF99999EEEEEEEEEEE...\n        ........FF999EEEEEE888888E...\n        .......FFEEEE8811D1DD8888E...\n        .......FFEE88D1D111D1888EEF..\n        ......FFEE8DDDDDDFFF88EEEFF..\n        ......FFE81DDDFFF1D88E88F....\n        ......FE1FFD11DDD8888F88.....\n        ......FEF11DDDDD8888F888.....\n        .....FED11DD1DD88CFF888E.....\n        .....FEDD1D1DD888CC8888E.....\n        .....FFFDFDF8EEEEEF888E......\n        .....FFFFFF8FEEEEEEF8E.......\n        ....FFFFFFFF8EFEEEEF8E.......\n        ....FFFFEF888FEEEEEF8........\n        ....FEEF88FF88FEEEE8E........\n        ....FEFF88EFFFFEEEFE.........\n        ...FEFF8888EEFFFEFE..........\n        ..FFEE888888EE888FEEE........\n        ..FEEE8E88EE...CCCC..........\n        ..FEEE888E.....8CEC8.........\n        ..FEEEEEE.....CC8888.........\n        .FEEEE.......CCECECC.........\n        .FEEE.......CCE..CC..........\n        CFE.........CE...CC..........\n        CF..........CE...CC..........\n        FFF..........C...CCC.........\n        FF1111111....C....CC.........\n        CF1111111111EC....EC.........\n        CCCC11111111FC111FEC.........\n        CCCCCCCCEEEECCFEFEEEEEF1.....\n        ......CCCCCCCCCCCEECEEEEE1...\n        ...............CCCCEECCEEEC1.\n`);\n\nconst OBST_SURF_GREEN_L = new Obstacle(-40 * POS_FIXED_MATH_ONE, true, img`\n        .........................CC..\n        ........................FFC..\n        ........................FF...\n        ........................FF...\n        .......................FEE...\n        ......................FFEE...\n        ......................FFEE...\n        .....................FFE7E...\n        .....................FE77E...\n        .....................FE77E...\n        ....................FE777E...\n        ....................F777EE55.\n        ...................FF7777E...\n        ..................FFE7E77EE..\n        ..................FFE7777EE..\n        .................FFE777777E..\n        .................FE7777777E..\n        .................FE7E77777E..\n        ................FE7E777777E..\n        ...............FF7777777EEE5.\n        ...............FF5EEEEEEEEE..\n        ...............FF5EEEE7777E..\n        ..............FFE577777777EE.\n        .............FFE55777EEE777E.\n        .............FFE557E7777777E.\n        .............FE55577E777E77E.\n        .............FE5157E77777E7E.\n        ............FE5115777EEEEEEE5\n        ...........FF5555EEEEEEEEEEE.\n        ...........FF5EEEEEEE777777E.\n        ..........FFEEEEE57777E7777E.\n        ..........FFE5555577777777E..\n        ..........FE55551577777777E..\n        ..........FE555155777E7E77E..\n        .........FE55155557777777E...\n        .........FE5155555EEEEEEEE55.\n        ........FF55555EEEEEEEEEEE...\n        ........FF555EEEEEE777777E...\n        .......FFEEEE8811D1DD7777E...\n        .......FFEE88D1D111D1777EEF..\n        ......FFEE8DDDDDDFFF77EEEFF..\n        ......FFE81DDDFFF1D77E77F....\n        ......FE1FFD11DDD7777F77.....\n        ......FEF11DDDDD7777F777.....\n        .....FED11DD1DD77CFF777E.....\n        .....FEDD1D1DD777CC7777E.....\n        .....FFFDFDF7EEEEEF777E......\n        .....FFFFFF7FEEEEEEF7E.......\n        ....FFFFFFFF7EFEEEEF7E.......\n        ....FFFFEF777FEEEEEF7........\n        ....FEEF77FF77FEEEE8E........\n        ....FEFF77EFFFFEEEFE.........\n        ...FEFF7777EEFFFEFE..........\n        ..FFEE777777EE888FEEE........\n        ..FEEE7E77EE...CCCC..........\n        ..FEEE777E.....8CEC8.........\n        ..FEEEEEE.....CC8888.........\n        .FEEEE.......CCECECC.........\n        .FEEE.......CCE..CC..........\n        CFE.........CE...CC..........\n        CF..........CE...CC..........\n        FFF..........C...CCC.........\n        FF1111111....C....CC.........\n        CF1111111111EC....EC.........\n        CCCC11111111FC111FEC.........\n        CCCCCCCCEEEECCFEFEEEEEF1.....\n        ......CCCCCCCCCCCEECEEEEE1...\n        ...............CCCCEECCEEEC1.\n`);\n\nconst OBST_PALM_TREE_L = new Obstacle(17 * POS_FIXED_MATH_ONE, true, img`\n    .........677.........................\n    ...........6677........777666........\n    ..............67......766............\n    .......7777....67...776..............\n    ....7777777.....7...76...............\n    .7676666.767....67..6..777777........\n    66.........67...67.7..777666677777...\n    ............67...7.7.7766........66..\n    .............67..777776..............\n    ......77777...67777766..777777.......\n    .....7777777..767677.77776666777.....\n    ....7776666677.77ee666.......6777....\n    ...7766.....667.ee777777......6777...\n    ..7.6.........6eee.7666777.....677...\n    .76........77774e.7.777667777...677..\n    .7.......77777eee.77.77..67777...67..\n    ........77776.ee..67.677..67777..677.\n    .......77776..4e..67..677..6777....7.\n    ......77776..eee..677.6777..6777...6.\n    ......7776...eee..677.67777.67777..67\n    .....7776....ee...677.67777..6777...7\n    .....776.....4e...6777.6777...6777..6\n    ....776......ee....777..6777..6677..6\n    ....76......eee....677..6777...6777..\n    ....7.......4ee....677...6777...677..\n    ....6.......eee....677...6777...677..\n    ............ee.....677....677...677..\n    ............ee.....6777...6777...67..\n    ...........44e.....6777...6777...67..\n    ...........eee.....6777....677....6..\n    ...........eee.....6777....677....6..\n    ...........4ee.....7777.....67....6..\n    ...........e4e.....6777.....67.......\n    ...........eee.....677......67.......\n    ...........eee.....677......77.......\n    ..........eeee.....67.......6........\n    ..........44ee.....7........6........\n    ..........eee.....67.................\n    ..........eee.....6..................\n    ..........eee.....6..................\n    ..........44e........................\n    ..........e4e........................\n    ..........eee........................\n    ..........eee........................\n    ..........4ee........................\n    ..........44e........................\n    ..........eee........................\n    .........eeee........................\n    .........eeee........................\n    .........44ee........................\n    .........444e........................\n    .........e44e........................\n    .........eeee........................\n    .........eeee........................\n    .........4eee........................\n    .........444e........................\n    .........e44e........................\n    .........ee4ee.......................\n    .........eeeee.......................\n    .........eeeee.......................\n    .........44eee.......................\n    .........444ee.......................\n    ..........e44e.......................\n    ..........ee4e.......................\n    ..........eeee.......................\n    ..........eeeee......................\n    ...........44ee......................\n    ...........444e......................\n    ...........e444......................\n    ...........ee4ee.....................\n    ...........eeeee.....................\n    ...........eeeee.....................\n    ...........4eeee.....................\n    ...........444ee.....................\n    ...........e444ee....................\n    ...........ee444e....................\n    ............ee44e....................\n    ............eeeee....................\n    ............eeeee....................\n    ............eeeee....................\n    ............44eeee...................\n    ............444eee...................\n    ............e444ee...................\n    ............ee444e...................\n    ............eee4ee...................\n    .............eeeeee..................\n    .............eeeeee..................\n    .............eeeeee..................\n    .............44eeee..................\n    .............444eee..................\n`);\n\nconst OBST_GTX_BOTTOM_SIGN_R = new Obstacle(0, false, img`\n    ..........444444444444444444444..........\n    .........44222222222446666666644.........\n    .........44222222224466666666644.........\n    .........44222222224466666666644.........\n    .........44222222224466666666644.........\n    ........44222222224466666666644de........\n    ........44222222224466666666644de........\n    ........44222222224466666444444de........\n    ........44222222224466444444444de........\n    .......4422222222444444444ff44ddde.......\n    .......442222222444444f444ff44ddde.......\n    .......442222444444f4ff44ff444ddde.......\n    .......442444444ffff4fff4ff444ddde.......\n    ......44444444fffff444ffff444ddddde......\n    ......4444ff44ffff44444ffff44ddddde......\n    ......44fffff444ff4444fffff44ddddde......\n    ......4fff4ff444ff4444ff44ff4ddddde......\n    .....44ff4444444ff4444f444ffddddddde.....\n    .....44ff4fff444ff444ff44444ddddddde.....\n    .....44ff4fff444ff444f444444ddddddde.....\n    .....44ff44ff444ff4444444644ddddddde.....\n    ....444ff4fff44444444466644ddddddddde....\n    ....444fffff444444466666644ddddddddde....\n    ....4444ff44444466666666644ddddddddde....\n    ...44444444444466666666644ddddddddddde...\n    ...44444442224466666666644ddddddddddde...\n    ...44442222224466666666644ddddddddddde...\n    ...44222222224466666666644ddddddddddde...\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    .44222222224466666666644ddddddddddddddde.\n    .44222222224466666666644ddddddddddddddde.\n    .44444444444444444444444ddddddddddddddde.\n    .44444444444444444444444eeeeeeeeeeeeeeee.\n    444...............ee444...............eee\n    444...............ee444...............eee\n    444...............ee444...............eee\n    444...............ee444...............eee\n`);\n\nconst OBST_TRAFFIC_CONE = new Obstacle(0, false, img`\n    . . . . . . . 4 . . . . . . .\n    . . . . . . . 4 . . . . . . .\n    . . . . . . . 4 . . . . . . .\n    . . . . . . 1 1 1 . . . . . .\n    . . . . . . 4 1 4 . . . . . .\n    . . . . . . 4 4 4 . . . . . .\n    . . . . . 1 1 4 1 1 . . . . .\n    . . . . . 4 1 1 1 4 . . . . .\n    . . . . . 4 4 1 4 4 . . . . .\n    . . . . 1 4 4 4 4 4 1 . . . .\n    . . . . 1 1 4 4 4 1 1 . . . .\n    . . . . 4 1 1 1 1 1 4 . . . .\n    . . . 4 4 4 1 1 1 4 4 4 . . .\n    . e e 1 4 4 4 4 4 4 4 1 e e .\n    e 4 4 1 1 4 4 4 4 4 1 1 4 4 e\n    e 4 4 1 1 1 1 1 1 1 1 1 4 4 e\n    e 4 4 4 4 1 1 1 1 1 4 4 4 4 e\n    e 4 4 4 4 4 4 4 4 4 4 4 4 4 e\n    . e e 4 4 4 4 4 4 4 4 4 e e .\n    . . . e e e e e e e e e . . .\n`);\n\nconst OBST_DINNER_HOUSE_L = new Obstacle(0, false, img`\n    ..................fffffffffffffffffffffffffffffffffffffffffffff...........................\n    .................ff1111111111111111111111111111111111111111111ff..........................\n    .................f111111111111111111111111111111111111111111111f..........................\n    .................f111111111111111111111111111111111111111111111f..........................\n    .................f111888881111881188111188118888888118888881111f..........................\n    .................f111888888111881188111188118888888118888888111f..........................\n    .................f111881188811881188811188118811111118811188111f..........................\n    .............fffff111881188811881188811188118811111118811188111fffffffffffffff............\n    .............f555f111881118811881188881188118811111118811188111f5555555555555ff...........\n    ............f5555f111881118811881188881188118811111118811188111f555555555555fccf..........\n    ............f5555f111881118811881188188188118888881118888881111f555555555555fcccf.........\n    ...........f55555f111881118811881188188188118888881118888811111f55555555555fefcccf........\n    ...........f55555f111881118811881188188188118811111118811881111f55555555555feeffccff......\n    ..........f555555f111881118811881188118888118811111118811188111f5555555555f4ee4efcccf.....\n    .........f5555555f111881188811881188118888118811111118811188111f5555555555f4ee4eefcccf....\n    .........f5555555f111881188111881188111888118811111118811188111f555555555fe4ee4ee4fcccf...\n    ........f55555555f111888888111881188111888118888888118811188111f555555555fe4ee4ee4efcccf..\n    ........f55555555f111888881111881188111188118888888118811188111f55555555fee4ee4ee4efccccf.\n    .......f555555555f111111111111111111111111111111111111111111111f55555555fee4ee4ee4efcccccf\n    .......f555555555f111111111111111111111111111111111111111111111f5555555f4ee4ee4fe4efffffff\n    ......f5555555555ff1111111111111111111111111111111111111111111ff5555555f4ee4eff1f4ef......\n    ......f55555555555fffffffffffffffffffffffffffffffffffffffffffff5555555fe4eeff181f4ef......\n    .....f5555555555555555555555555555555555555555555555555555555555555555fe4ff11818f4ef......\n    .....f555555555555555555555555555555555555555555555555555555555555555ffff1881818f4ef......\n    ....f5555555555555555555555555555555555555555555555555555555555555555ff118181818f4ef......\n    ...f5555555555555555555555555555555555555555555555555555555555555555f11881881181f4ef......\n    ...f5555555555555555555555555555555555555555555555555555555555555555f111811811ffe4ef......\n    ..f5555555555555555555555555555555555555555555555555555555555555555f18118111ff4ee4ef......\n    ..f5555555555555555555555555555555555555555555555555555555555555555f881881ffee4ee4ef......\n    .f5555555555555555555555555555555555555555555555555555555555555555ff1811ffe4ee4ee4ef......\n    .f5555555555555555555555555555555555555555555555555555555555555555ff11ff4ee4effee4ef......\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4fffee4eeffbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4fe4ee4ffbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4effbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999919f4eef999999999919fe4ef999999999919fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999199f4eef999999999199fe4ef999999999199fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999991999f4eef999999991999fe4ef999999991999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999919999f4eef999999919999fe4ef999999919999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999799999999fe4ef999999999999fee4eefee4ee4efbffbbbfee4ef......\n    ....fe4ee47fff77fff7fff74eeffff7ffff7ffffe7e7ffffff7ff7fffee4eefee4ee4efbfbbbbfee4ef......\n    ....fe4ee4e75777ee7774e77e74ee7ee4ee77777e4e74775777774ee4ee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ef7755f757f75757555777f55777ff757577775557555777fffff4eefee4ee4efbbbbbbfee4ef......\n    ....feff77e77757e77e757e77e77e57577ee777e7757e577e7775eeeffe4eefee4ee4efbbbbbbfee4ef......\n    ....ffeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeff4ee4eefee4ee4efbbbbbbfeeff.......\n    ...ffffffffffffffffffffffffffffffffffffffffffffffffffffee4ee4eefee4ee4efbbbbbbfff.........\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbbbbbff...........\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbbbff.............\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbff...............\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4eff.................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4eeff...................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ff.....................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefeff.......................\n    ....fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff.........................\n`);\n\nconst OBST_DINNER_HOUSE_R = new Obstacle(0, false, img`\n    ...........................fffffffffffffffffffffffffffffffffffffffffffff..................\n    ..........................ff1111111111111111111111111111111111111111111ff.................\n    ..........................f111111111111111111111111111111111111111111111f.................\n    ..........................f111111111111111111111111111111111111111111111f.................\n    ..........................f111888881111881188111188118888888118888881111f.................\n    ..........................f111888888111881188111188118888888118888888111f.................\n    ..........................f111881188811881188811188118811111118811188111f.................\n    ............fffffffffffffff111881188811881188811188118811111118811188111fffff.............\n    ...........ff5555555555555f111881118811881188881188118811111118811188111f555f.............\n    ..........fccf555555555555f111881118811881188881188118811111118811188111f5555f............\n    .........fcccf555555555555f111881118811881188188188118888881118888881111f5555f............\n    ........fcccfef55555555555f111881118811881188188188118888881118888811111f55555f...........\n    ......ffccffeef55555555555f111881118811881188188188118811111118811881111f55555f...........\n    .....fcccfe4ee4f5555555555f111881118811881188118888118811111118811188111f555555f..........\n    ....fcccfee4ee4f5555555555f111881188811881188118888118811111118811188111f5555555f.........\n    ...fcccf4ee4ee4ef555555555f111881188111881188111888118811111118811188111f5555555f.........\n    ..fcccfe4ee4ee4ef555555555f111888888111881188111888118888888118811188111f55555555f........\n    .fccccfe4ee4ee4eef55555555f111888881111881188111188118888888118811188111f55555555f........\n    fcccccfe4ee4ee4eef55555555f111111111111111111111111111111111111111111111f555555555f.......\n    fffffffe4ef4ee4ee4f5555555f111111111111111111111111111111111111111111111f555555555f.......\n    ......fe4f1ffe4ee4f5555555ff1111111111111111111111111111111111111111111ff5555555555f......\n    ......fe4f181ffee4ef5555555fffffffffffffffffffffffffffffffffffffffffffff55555555555f......\n    ......fe4f81811ff4ef5555555555555555555555555555555555555555555555555555555555555555f.....\n    ......fe4f8181881ffff555555555555555555555555555555555555555555555555555555555555555f.....\n    ......fe4f818181811ff5555555555555555555555555555555555555555555555555555555555555555f....\n    ......fe4f18118818811f5555555555555555555555555555555555555555555555555555555555555555f...\n    ......fe4eff118118111f5555555555555555555555555555555555555555555555555555555555555555f...\n    ......fe4ee4ff11181181f5555555555555555555555555555555555555555555555555555555555555555f..\n    ......fe4ee4eeff188188f5555555555555555555555555555555555555555555555555555555555555555f..\n    ......fe4ee4ee4eff1181ff5555555555555555555555555555555555555555555555555555555555555555f.\n    ......fe4eeffe4ee4ff11ff5555555555555555555555555555555555555555555555555555555555555555f.\n    ......fe4eefbffee4eefff4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    ......fe4eefbbbff4ee4ef4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbffe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef919999999999fe4ef919999999999fee4f919999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef991999999999fe4ef991999999999fee4f991999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999199999999fe4ef999199999999fee4f999199999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999919999999fe4ef999919999999fee4f999919999999f4ee4ef....\n    ......fe4eefbbbffbfe4ee4eefee4eef999999999999fe4ef999999997999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbfbfe4ee4eefee4eefff7ff7ffffff7e7effff7ffff7ffffee47fff7fff77fff74ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4ee4ee47777757747e4e77777ee4ee7ee47e77e4777ee77757e4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4fffff777555755577775757ff77755f77755575757f757f5577fe4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4effeee5777e775e7577e777ee77575e77e77e757e77e75777e77ffef....\n    .......ffeefbbbbbbfe4ee4eefee4ee4ffeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeff....\n    .........fffbbbbbbfe4ee4eefee4ee4eeffffffffffffffffffffffffffffffffffffffffffffffffffff...\n    ...........ffbbbbbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .............ffbbbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    ...............ffbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .................ffe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    ...................ffee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .....................ff4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .......................ffefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .........................fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff....\n`);\n","circuit.ts":"const ROAD_DIRECTION_ANGLE_FACTOR = 0.31;\nconst ROAD_SLOPE_ANGLE_FACTOR = 0.25;\n\nconst DIR_STRAIGHT = 0;\nconst DIR_LEFT_1 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -1 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_2 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -2 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_3 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -3 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_4 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -4 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_5 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -5 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_1 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_2 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 2 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_3 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 3 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_4 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 4 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_5 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 5 * ANGLES_FIXED_MATH_ONE);\n\nconst SLOPE_FLAT = 0;\nconst SLOPE_UP_1 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -1 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_UP_2 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -2 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_UP_3 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -3 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_1 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 1 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_2 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 2 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_3 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 3 * ANGLES_FIXED_MATH_ONE);\n\nclass CircuitSegment {\n    constructor(\n        public direction: number,\n        public slope: number,\n        public leftObstacle: Obstacle,\n        public rightObstacle: Obstacle,\n        public centerObstacle: Obstacle,\n        public leftSideColor: number,\n        public rightSideColor: number,\n    ) {\n    }\n}\n\nconst CIRCUIT = [\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_SEMAPHORE_SIGN, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_START_SIGN, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_CHECK_SIGN, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_2, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_2, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_1, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_DINNER_HOUSE_R, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_FINISH_SING, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n];\n","textrender.ts":"enum TextAlignment {\n    Left,\n    Center,\n    Right    \n}\n\nclass TextRender {\n    private _text: string;\n    private _color: number;\n    private _outlineColor?: number;\n    private _font: image.Font;\n    private _dirty: boolean;\n    private _lastRender: Image;\n\n    constructor(\n        text: string,\n        color: number = 1,\n        outlineColor?: number,\n        font?: image.Font\n    ) {\n        this._text = text;\n        this._color = color;\n        this._outlineColor = outlineColor;\n        if (!font)\n            this._font = image.font8;\n        else\n            this._font = font;\n\n        this._dirty = true;\n    }\n\n    public setText(text: string): void {\n        this._text = text;\n        this._dirty = true;\n    }\n\n    public text(): string {\n        return this._text;\n    }\n\n    public setColor(color: number): void {\n        this._color = color;\n        this._dirty = true;\n    }\n\n    public color(): number {\n        return this._color;\n    }\n\n    public setOutlineColor(color?: number): void {\n        this._outlineColor = color;\n        this._dirty = true;\n    }\n\n    public outlineColor(): number {\n        return this._outlineColor;\n    }\n\n    public setFont(font: image.Font): void {\n        this._font = font;\n        this._dirty = true;\n    }\n\n    public font(): image.Font {\n        return this._font;\n    }\n\n    public width(): number {\n        if (this._dirty)\n            this.render();\n\n        return this._lastRender.width;\n    }\n\n    public height(): number {\n        if (this._dirty)\n            this.render();\n\n        return this._lastRender.height;\n    }\n\n    public draw(targetImg: Image, x: number, y: number, alignment: TextAlignment = TextAlignment.Left): void {\n        if (this._dirty)\n            this.render();\n\n        switch(alignment) {\n            case TextAlignment.Center:\n                targetImg.drawTransparentImage(this._lastRender, x - Math.idiv(this._lastRender.width, 2), y);\n                break;\n\n            case TextAlignment.Right:\n                targetImg.drawTransparentImage(this._lastRender, x - this._lastRender.width, y);\n                break;\n\n            default:\n                targetImg.drawTransparentImage(this._lastRender, x, y);\n                break;\n        }\n    }\n\n    private render(): void {\n        const width = this._font.charWidth * this._text.length;\n        const height = this._font.charHeight;\n\n        let textImg = image.create(width, height);\n        textImg.print(this._text, 0, 0, this._color, this._font,);\n        if (this._outlineColor)\n            textImg = this.outline(textImg);\n\n        this._lastRender = textImg;\n        this._dirty = false;\n    }\n\n    private outline(sourceImg: Image): Image {\n        const thickness = this._font.multiplier ? Math.round(this._font.multiplier) : 1;\n        const doubleThickness = thickness << 1;\n        const resultImg = image.create(sourceImg.width + doubleThickness, sourceImg.height);\n\n        const hl = 0;\n        const hc = thickness;\n        const hr = doubleThickness;\n\n        resultImg.drawImage(sourceImg, hl, 0);\n        resultImg.drawTransparentImage(sourceImg, hr, 0);\n        resultImg.drawTransparentImage(sourceImg, hl, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hr, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hl, thickness);\n        resultImg.drawTransparentImage(sourceImg, hr, thickness);\n        resultImg.drawTransparentImage(sourceImg, hc, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hc, thickness);\n\n        resultImg.replace(this._color, this._outlineColor);\n        resultImg.drawTransparentImage(sourceImg, hc, 0);\n\n        return resultImg;\n    }\n}\n","countdown.ts":"class Countdown {\n    private running: boolean;\n    private loadTime: number;\n    private endTime: number;\n\n    constructor() {\n        this.running = false;        \n    }\n\n    public load(seconds: number): void {\n        const wasRunning = this.running;\n        if (wasRunning)\n            this.stop();\n\n        this.loadTime = Math.round(seconds * 1000);\n\n        if (wasRunning)\n            this.start();\n    }\n\n    public add(seconds: number): void {\n        const wasRunning = this.running;\n        if (wasRunning)\n            this.stop();\n\n        this.loadTime += Math.round(seconds * 1000);\n\n        if (wasRunning)\n            this.start();\n    }\n\n    public isExpired(): boolean {\n        if (this.running)\n            return this.endTime < game.runtime();\n        else\n            return this.loadTime < 0;\n    }\n\n    public start(): void {\n        if (!this.running) {\n            this.endTime = game.runtime() + this.loadTime;\n            this.running = true;\n        }\n    }\n\n    public stop(): void {\n        if (this.running) {\n            this.loadTime = this.loadTime - game.runtime();\n            this.running = false;\n        }\n    }\n\n    public remainingTimeMs(): number {\n        let result: number;\n        if (this.running)\n            result = this.endTime - game.runtime();\n        else\n            result = this.loadTime;\n\n        return result < 0 ? 0 : result;\n    }\n\n    public remainingTime(): number {\n        return Math.idiv(this.remainingTimeMs(), 1000);\n    }\n}","worldrender.ts":"// --- World render configuration\nconst PERSPECTIVE_VERTICAL_CENTER = Math.round(scene.screenHeight() / 3);\nconst Z_PERSPECTIVE_FACTOR = 20;\nconst ROAD_INIT_Y = Math.round((SCREEN_HEIGHT - PERSPECTIVE_VERTICAL_CENTER) * POS_FIXED_MATH_ONE);\n\nconst STRIPE_HEIGHT = 10;\nconst STRIPE_WIDTH = Math.round(scene.screenWidth() * 1.4);\nconst STRIPES_VIEW_PORT = 12;\nconst STRIPE_HALF_HEIGHT = Math.idiv(STRIPE_HEIGHT, 2);\nconst STRIPE_HALF_WIDTH_FP = Math.round(STRIPE_WIDTH / 2 * POS_FIXED_MATH_ONE);\n\nconst ROAD_MIN_ANGLE = -89 * ANGLES_FIXED_MATH_ONE;\nconst ROAD_MAX_ANGLE = 89 * ANGLES_FIXED_MATH_ONE;\n\nenum ObstacleDirection {\n  Top,\n  Left,\n  Right\n}\n\nclass RenderObstacle {\n    public image: Image;\n    public x2d: number;\n    public y2d: number;\n    public x3dFP: number;\n    public y3dFP: number;\n    public z3dFP: number;\n    public mirror: boolean;\n    public scale: number;\n}\n\nclass WorldRender {\n    private sinTable: number[];\n\n    private drawZ: number;\n    private drawY: number;\n    private roadAngleX: number;\n    private roadAngleY: number;\n    private roadCenter: number;\n    private roadY: number;\n    private stripeToggle: boolean;\n    private backdropOffset: number;\n    private perspectiveHorizontalCenter: number;\n    private oldTravelDistance: number;\n\n    private obstaclesToRenders: RenderObstacle[];\n\n    constructor() {\n        this.sinTable = this.createSinTableFP();\n        this.backdropOffset = 0;\n    }\n\n    public calcRoadCurveInSegment(startPoint: number, lenght: number): number {\n        const firstStripeIndex = Math.idiv(startPoint, STRIPE_HEIGHT);\n        const firstStripeOffeset = startPoint % STRIPE_HEIGHT;\n        const endPoint = startPoint + lenght;\n\n        let point = startPoint;\n        let index = firstStripeIndex;\n        let curveSum = 0;\n        while (point < endPoint) {\n            const curveAngle = CIRCUIT[index].direction;\n            const offset = point == startPoint ? firstStripeOffeset : 0;\n            let deltaDist = STRIPE_HEIGHT - offset;\n            if ((point + deltaDist) > endPoint)\n                deltaDist = endPoint - point;\n            curveSum += Math.imul(deltaDist, curveAngle);\n            point += deltaDist;\n            index++;\n        }\n\n        return curveSum;\n    }\n\n    public checkCollision(x1: number, y1: number, x2: number, y2: number, zLimit: number): boolean {\n        const lastObstacleToRender = this.obstaclesToRenders.length;\n        for (let i = 0; i < lastObstacleToRender; i++) {\n            const obstacle = this.obstaclesToRenders[i];\n\n            if (Math.idiv(obstacle.z3dFP, POS_FIXED_MATH_ONE) > zLimit)\n                return false;\n\n            const obstX1 = Math.idiv(obstacle.x3dFP, POS_FIXED_MATH_ONE);\n            const obstX2 = obstX1 + obstacle.image.width;\n            const obstY2 = Math.idiv(obstacle.y3dFP, POS_FIXED_MATH_ONE);\n            const obstY1 = obstY2 - obstacle.image.height;\n\n            const doNotOverlap = x2 < obstX1 || x1 > obstX2 || y2 < obstY1 || y1 > obstY2;\n            if (!doNotOverlap)\n                return true;\n        }\n\n        return false;\n    }\n\n    public onCheckSign(travelDistance: number): boolean {\n        const firstStripeIndex = Math.idiv(travelDistance, STRIPE_HEIGHT);\n        return CIRCUIT[firstStripeIndex].centerObstacle == OBST_CHECK_SIGN\n            || CIRCUIT[firstStripeIndex + 1].centerObstacle == OBST_CHECK_SIGN;\n    }\n\n    public draw(targetImg: Image, travelDistance: number, perspectiveHorizontalCenter: number): boolean {\n        const maxTravelDistance = Math.imul(CIRCUIT.length - STRIPES_VIEW_PORT, STRIPE_HEIGHT);\n        const firstStripeIndex = Math.idiv(travelDistance, STRIPE_HEIGHT);\n        const firstStripeOffeset = travelDistance % STRIPE_HEIGHT;\n        const deltaTraveledDistace = travelDistance - this.oldTravelDistance;\n        this.oldTravelDistance = travelDistance;\n\n        let circuitEndReached = false;\n        if (travelDistance > maxTravelDistance) {\n            travelDistance = maxTravelDistance;\n            circuitEndReached = true;\n        }\n\n        this.perspectiveHorizontalCenter = perspectiveHorizontalCenter;\n\n        // Draw the steet\n        this.drawZ = 0;\n        this.drawY = SCREEN_HEIGHT;\n        this.roadAngleX = 0;\n        this.roadAngleY = 0;\n        this.roadCenter = 0;\n        this.roadY = ROAD_INIT_Y;\n        this.stripeToggle = firstStripeIndex % 2 == 0;\n        this.obstaclesToRenders = [];\n\n        for (let i = 0; i < STRIPES_VIEW_PORT; i++) {\n            const circuitIndex = firstStripeIndex + i;\n            const offset = i == 0 ? firstStripeOffeset : 0;\n            this.drawStripe(circuitIndex, i, targetImg , offset);\n            this.stripeToggle = !this.stripeToggle;\n        }\n\n        // Draw the sky\n        this.drawY--;\n        targetImg.fillRect(0, 0, SCREEN_WIDTH, this.drawY , 9);\n\n        // Draw backdrop image\n        let backdropOffset: number;\n        if (deltaTraveledDistace > 0) {\n            backdropOffset = this.backdropOffset - (((CIRCUIT[firstStripeIndex].direction) * 2) >> ANGLES_BITS);\n            if (backdropOffset < 0)\n                backdropOffset = SCREEN_WIDTH + backdropOffset;\n            else if (backdropOffset > SCREEN_WIDTH)\n                backdropOffset -= SCREEN_WIDTH;\n        } else {\n            backdropOffset = this.backdropOffset;\n        }\n\n        targetImg.drawTransparentImage(BACKDROP_IMG, backdropOffset, this.drawY - BACKDROP_IMG.height);\n        if (backdropOffset > 0)\n            targetImg.drawTransparentImage(BACKDROP_IMG, backdropOffset - BACKDROP_IMG.width, this.drawY - BACKDROP_IMG.height);\n        this.backdropOffset = backdropOffset;\n\n        // Draw ostacles\n        const lastObstacleToRender = this.obstaclesToRenders.length - 1;\n        for (let i = lastObstacleToRender; i >= 0; i--) {\n            const obstacle = this.obstaclesToRenders[i];\n            if (obstacle.image.width >= obstacle.image.height)\n                this.drawScaledH(obstacle.image, targetImg, obstacle.scale, obstacle.mirror, obstacle.x2d, obstacle.y2d);\n            else\n                this.drawScaledV(obstacle.image, targetImg, obstacle.scale, obstacle.mirror, obstacle.x2d, obstacle.y2d);\n        }\n\n        return circuitEndReached;\n    }\n\n    private drawStripe(circuitIndex: number, stripeNum: number, img: Image, startSTRIPE_HEIGHT: number): void {\n        const circuitSegment = CIRCUIT[circuitIndex];\n\n        const roadColor = this.stripeToggle ? 12 : 11;\n        const borderColor = this.stripeToggle ? 1 : 12;\n        const laneColor = 1;\n\n        for (let i = startSTRIPE_HEIGHT; i < STRIPE_HEIGHT; i++) {\n            this.roadAngleX += circuitSegment.direction;\n            this.roadAngleY += circuitSegment.slope; \n\n            if (this.roadAngleX >= 0) {\n                if (this.roadAngleX > ROAD_MAX_ANGLE)\n                    this.roadAngleX = ROAD_MAX_ANGLE;\n                this.roadCenter += this.sinTable[this.roadAngleX >> ANGLES_BITS];\n            } else {\n                if (this.roadAngleX < ROAD_MIN_ANGLE)\n                    this.roadAngleX = ROAD_MIN_ANGLE;\n                this.roadCenter -= this.sinTable[-(this.roadAngleX >> ANGLES_BITS)];\n            }\n\n            if (this.roadAngleY >= 0) {\n                if (this.roadAngleY > ROAD_MAX_ANGLE)\n                    this.roadAngleY = ROAD_MAX_ANGLE;\n                this.roadY += this.sinTable[this.roadAngleY >> ANGLES_BITS];  \n            } else {\n                if (this.roadAngleY < ROAD_MIN_ANGLE)\n                    this.roadAngleY = ROAD_MIN_ANGLE;\n                this.roadY -= this.sinTable[-(this.roadAngleY >> ANGLES_BITS)];  \n            }\n\n            // 3D coordinates\n            const x1_3d = Math.round(this.roadCenter - STRIPE_HALF_WIDTH_FP);\n            const x2_3d = Math.round(this.roadCenter + STRIPE_HALF_WIDTH_FP);\n            const y_3d = this.roadY;\n            // Swith to 2D\n            const roadLine2D = this.horizontalLine3Dto2D(x1_3d, x2_3d, y_3d, this.drawZ);\n            // Calculate line boundaries\n            const x1_borderL = roadLine2D[0];\n            const x2_borderR = roadLine2D[1];\n            const width = x2_borderR - x1_borderL;\n            const borderWidht = Math.idiv(width, 18);\n            const x1_road = x1_borderL + borderWidht;\n            const x2_road = x2_borderR - borderWidht;\n            const laneLineWidth = Math.idiv(borderWidht, 3);\n            const laneWidth = Math.idiv(width, 3);\n            const x1_lane1 = x1_borderL + laneWidth;\n            const x2_lane1 = x1_lane1 + laneLineWidth;\n            const x2_lane2 = x2_borderR - laneWidth;\n            const x1_lane2 = x2_lane2 - laneLineWidth;\n\n            // Draw obstacles\n            const leftObstacle = circuitSegment.leftObstacle;\n            const rightObstacle = circuitSegment.rightObstacle;\n            const topObstacle = circuitSegment.centerObstacle;\n            if (i == STRIPE_HALF_HEIGHT && roadLine2D[2] <= this.drawY) {\n                if (topObstacle != null) {\n                    this.drawSideObstacles(this.roadCenter, y_3d, this.drawZ, topObstacle, ObstacleDirection.Top);\n                }\n                if (leftObstacle != null) {\n                    this.drawSideObstacles(x1_3d, y_3d, this.drawZ, leftObstacle, ObstacleDirection.Left);\n                }\n                if (rightObstacle != null) {\n                    this.drawSideObstacles(x2_3d, y_3d, this.drawZ, rightObstacle, ObstacleDirection.Right);\n                }\n            }\n\n            // Draw steet\n            while (roadLine2D[2] < this.drawY) {\n                this.drawY--;\n                img.drawLine(0, this.drawY, x1_borderL, this.drawY, circuitSegment.leftSideColor);\n                img.drawLine(x2_borderR, this.drawY, SCREEN_WIDTH, this.drawY, circuitSegment.rightSideColor);\n                img.drawLine(x1_borderL, this.drawY, x1_road, this.drawY, borderColor);\n                img.drawLine(x1_road, this.drawY, x2_road, this.drawY, roadColor);\n                img.drawLine(x2_road, this.drawY, x2_borderR, this.drawY, borderColor);\n\n                // Central lane stripes\n                if (this.stripeToggle) {\n                    if (i > STRIPE_HALF_HEIGHT) {\n                        img.drawLine(x1_lane1, this.drawY, x2_lane1, this.drawY, laneColor);                    \n                        img.drawLine(x1_lane2, this.drawY, x2_lane2, this.drawY, laneColor);                    \n                    }\n                } else {\n                    if (i < STRIPE_HALF_HEIGHT) {\n                        img.drawLine(x1_lane1, this.drawY, x2_lane1, this.drawY, laneColor);                    \n                        img.drawLine(x1_lane2, this.drawY, x2_lane2, this.drawY, laneColor);                    \n                    }\n                }\n\n            }\n            this.drawZ += POS_FIXED_MATH_ONE;\n        }        \n    }\n\n    private horizontalLine3Dto2D(x1: number, x2: number, y: number, z: number): number[]  {\n        const denom = POS_FIXED_MATH_ONE + Math.idiv(z, Z_PERSPECTIVE_FACTOR);\n        return [\n            Math.idiv(x1, denom) + this.perspectiveHorizontalCenter, \n            Math.idiv(x2, denom) + this.perspectiveHorizontalCenter, \n            Math.idiv(y, denom) + PERSPECTIVE_VERTICAL_CENTER\n        ];\n    }\n\n    private drawSideObstacles(x: number, y: number, z: number, obstacle: Obstacle, direction: ObstacleDirection): void {\n        const obstacleToRender = new RenderObstacle();\n        const denom = POS_FIXED_MATH_ONE + Math.idiv(z, Z_PERSPECTIVE_FACTOR);\n\n        obstacleToRender.image = obstacle.image;\n        obstacleToRender.scale = denom;\n        obstacleToRender.mirror = direction == ObstacleDirection.Right && obstacle.reqMirror;\n        obstacleToRender.z3dFP = z;\n\n        const imageWidthFixed = Math.imul(obstacleToRender.image.width, POS_FIXED_MATH_ONE);\n        const imageHeightFixed = Math.imul(obstacleToRender.image.height, POS_FIXED_MATH_ONE);\n\n        if (direction == ObstacleDirection.Left) {\n            x += obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x - imageWidthFixed, denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        } else if (direction == ObstacleDirection.Right) {\n            x -= obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x, denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        } else if (direction == ObstacleDirection.Top) {\n            y -= obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x - Math.idiv(imageWidthFixed, 2), denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        }\n\n        this.obstaclesToRenders.push(obstacleToRender);\n    }\n\n    private drawScaledH(sourceImg: Image, targetImg: Image, scale: number, mirror: boolean, dstX: number, dstY: number) {\n        const outputBuffer = image.create(sourceImg.width, Math.idiv(Math.imul(sourceImg.height, POS_FIXED_MATH_ONE), scale))\n        const blitRowScale = Math.idiv(Math.imul(sourceImg.width, POS_FIXED_MATH_ONE), scale);\n        const xEnd = Math.imul(sourceImg.width - 1, POS_FIXED_MATH_ONE);\n        if (mirror) {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(xEnd - x, scale), 0, sourceImg, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        } else {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(x, scale), 0, sourceImg, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        }\n        \n        targetImg.drawTransparentImage(outputBuffer, dstX, dstY)\n    }\n\n    private drawScaledV(sourceImg: Image, targetImg: Image, scale: number, mirror: boolean, dstX: number, dstY: number) {\n        const maxDimension = sourceImg.height;\n        const inputBuffer = image.create(maxDimension, maxDimension);\n        inputBuffer.drawImage(sourceImg, 0, 0);\n\n        const outputBuffer = image.create(\n            Math.idiv(Math.imul(inputBuffer.width, POS_FIXED_MATH_ONE), scale), \n            Math.idiv(Math.imul(inputBuffer.height, POS_FIXED_MATH_ONE), scale));\n        const blitRowScale = Math.idiv(Math.imul(maxDimension, POS_FIXED_MATH_ONE), scale);\n        const xEnd = Math.imul(sourceImg.width - 1, POS_FIXED_MATH_ONE);\n        if (mirror) {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(xEnd - x, scale), 0, inputBuffer, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        } else {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(x, scale), 0, inputBuffer, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        }\n        \n        targetImg.drawTransparentImage(outputBuffer, dstX, dstY)\n    }\n\n    private createSinTableFP(): number[] {\n        const table = [];\n        for (let i = 0; i < 90; i++)\n            table.push(Math.round(Math.sin(Math.PI * i / 180) * 4 * POS_FIXED_MATH_ONE));\n\n        return table;\n    }\n}\n","carphysics.ts":"const CAR_MAX_SPEED = 293 * POS_FIXED_MATH_ONE;\nconst CAR_SPEED_TRAVEL_FACTOR = 2000;\nconst CAR_TURN_WEIGHT = 80 * POS_FIXED_MATH_ONE;\nconst CAR_CURVE_WEIGHT = 8;\n\nconst CAR_X_MOVE_RANGE = Math.round(STRIPE_WIDTH * 1.4) * POS_FIXED_MATH_ONE;\nconst CAR_X_MOVE_RANGE_P = Math.idiv(CAR_X_MOVE_RANGE, 2);\nconst CAR_X_MOVE_RANGE_M = -CAR_X_MOVE_RANGE_P;\n\nconst CAR_MAX_OFFROAD_SPEED = 80 * POS_FIXED_MATH_ONE;\n\nclass CarAccelerationPoint {\n    constructor(public speed: number, public acceleration: number) {        \n    }\n}\n\nconst CAR_ACCELERATION_CURVE: CarAccelerationPoint[] = [\n    new CarAccelerationPoint(0 * POS_FIXED_MATH_ONE, 35 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(50 * POS_FIXED_MATH_ONE, 32 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(100 * POS_FIXED_MATH_ONE, 27 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(150 * POS_FIXED_MATH_ONE, 22 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(200 * POS_FIXED_MATH_ONE, 15 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(250 * POS_FIXED_MATH_ONE, 10 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(270 * POS_FIXED_MATH_ONE, 5 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(280 * POS_FIXED_MATH_ONE, Math.round(3.5 * POS_FIXED_MATH_ONE)),\n    new CarAccelerationPoint(285 * POS_FIXED_MATH_ONE, Math.round(2.8 * POS_FIXED_MATH_ONE)),\n    new CarAccelerationPoint(290 * POS_FIXED_MATH_ONE, Math.round(1 * POS_FIXED_MATH_ONE)),\n];\n\nconst CAR_BRAKING_CURVE: CarAccelerationPoint[] = [\n    new CarAccelerationPoint(0 * POS_FIXED_MATH_ONE, -70 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(50 * POS_FIXED_MATH_ONE, -60 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(100 * POS_FIXED_MATH_ONE, -50 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(150 * POS_FIXED_MATH_ONE, -45 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(200 * POS_FIXED_MATH_ONE, -38 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(250 * POS_FIXED_MATH_ONE, -30 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(CAR_MAX_SPEED, -25 * POS_FIXED_MATH_ONE),\n];\n\nconst CAR_COASTING_ACCELERATION = -12 * POS_FIXED_MATH_ONE;\nconst CAR_HARD_STOP_ACCELERATION = -CAR_MAX_SPEED * 2 * POS_FIXED_MATH_ONE;\n\nclass CarPhysics {\n    private _speedFP: number;\n    private _traveledDistanceFP: number;\n    private _deltaTraveledDistanceFP: number;\n    private _lastRun: number;\n    private _carXPosFP: number;\n\n    constructor() {\n        this.clear();\n    }\n\n    public setSpeed(value: number) {\n        this._speedFP = Math.imul(value, POS_FIXED_MATH_ONE);\n    }\n\n    public speed(): number {\n        return Math.idiv(this._speedFP, POS_FIXED_MATH_ONE);\n    }\n\n    public traveledDistance(): number {\n        return Math.idiv(this._traveledDistanceFP, POS_FIXED_MATH_ONE)\n    }\n\n    public deltaTraveledDistance(): number {\n        return Math.idiv(this._deltaTraveledDistanceFP, POS_FIXED_MATH_ONE)\n    }\n\n    public setCarXPos(value: number): void {\n        this._carXPosFP = Math.imul(value, POS_FIXED_MATH_ONE);\n    }\n\n    public carXPos(): number {\n        return Math.idiv(this._carXPosFP, POS_FIXED_MATH_ONE);\n    }\n\n    public updateSpeed(accelerate: boolean, brake: boolean, turnLeft: boolean, turnRight: boolean, offRoad: boolean): void {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        if (offRoad && accelerate) {\n            if (this._speedFP > CAR_MAX_OFFROAD_SPEED) {\n                accelerate = false;\n                brake = true;\n            }\n        }\n\n        // Update the speed\n        if (brake) {\n            for (let i = CAR_BRAKING_CURVE.length - 1; i >= 0; i--) {\n                const point = CAR_BRAKING_CURVE[i];\n                if (this._speedFP >= point.speed) {\n                    this._speedFP += Math.idiv(Math.imul(point.acceleration, deltaT), 1000);\n                    break;\n                }\n            }        \n        } else if (accelerate) {\n            for (let i = CAR_ACCELERATION_CURVE.length - 1; i >= 0; i--) {\n                const point = CAR_ACCELERATION_CURVE[i];\n                if (this._speedFP >= point.speed) {\n                    this._speedFP += Math.idiv(Math.imul(point.acceleration, deltaT), 1000);\n                    break;\n                }\n            }        \n        } else {\n            this._speedFP += Math.idiv(Math.imul(CAR_COASTING_ACCELERATION, deltaT), 1000);\n        }\n\n        if (this._speedFP > CAR_MAX_SPEED) {\n            this._speedFP = CAR_MAX_SPEED;\n        } else if (this._speedFP < 0) {\n            this._speedFP = 0;\n        }\n\n        this.updateTravelDistance(deltaT);\n\n        // Update car X position when the car is running\n        let deltaX = 0;\n        if (this._speedFP > POS_FIXED_MATH_ONE) {\n            if (turnLeft && !turnRight)\n                deltaX = -CAR_TURN_WEIGHT;\n            else if (!turnLeft && turnRight)\n                deltaX = CAR_TURN_WEIGHT;\n        }\n\n        deltaX = Math.idiv(Math.imul(deltaX, deltaT), 1000);\n        this._carXPosFP = Math.constrain(this._carXPosFP + deltaX, CAR_X_MOVE_RANGE_M, CAR_X_MOVE_RANGE_P);\n    }\n\n    public applyRoadDeltaCurve(roadCurveDelta: number): void {\n        const curveDisplacement = Math.imul(roadCurveDelta, CAR_CURVE_WEIGHT);\n        this._carXPosFP = Math.constrain(this._carXPosFP - curveDisplacement, CAR_X_MOVE_RANGE_M, CAR_X_MOVE_RANGE_P);\n    }\n    \n    public hardStop(): void {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        this._speedFP += Math.idiv(Math.imul(CAR_HARD_STOP_ACCELERATION, deltaT), 1000);        \n        if (this._speedFP < 0)\n                this._speedFP = 0;\n\n        this.updateTravelDistance(deltaT);\n    }\n\n    public moveToXPos(xPos: number, speed: number) {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        const xPosFP = Math.imul(xPos, POS_FIXED_MATH_ONE);\n        const distanceToXPos = xPosFP - this._carXPosFP;\n\n        let deltaXFP = Math.idiv(Math.imul(Math.imul(speed, POS_FIXED_MATH_ONE), deltaT), 1000);\n        if (deltaXFP > Math.abs(distanceToXPos))\n            deltaXFP = distanceToXPos;\n        else if (distanceToXPos < 0)\n            deltaXFP = -deltaXFP;\n\n        let pippo = this._carXPosFP;\n        this._carXPosFP += deltaXFP;\n    }\n\n    public clear(): void {\n        this._lastRun = game.runtime();\n        this._speedFP = 0;\n        this._traveledDistanceFP = 0;\n        this._deltaTraveledDistanceFP = 0;\n        this._carXPosFP = 0;\n    }\n\n    private updateTravelDistance(deltaTime: number): void {\n        // Update traveled distance and delta traveled distance\n        const oldTraveledDistanceFP = this._traveledDistanceFP;\n        this._traveledDistanceFP += Math.idiv(Math.imul(this._speedFP, deltaTime), CAR_SPEED_TRAVEL_FACTOR);\n        this._deltaTraveledDistanceFP = this._traveledDistanceFP - oldTraveledDistanceFP;\n    }\n}","playerCarAssets.ts":"const CAR_IMG_STRAIGHT = img`\n    ..........2222222222222222222..........\n    ........22999999999999999999922........\n    ...2dd.2999eeee99999995554599992.dd2...\n    ...2ee22999eeee999999455555499922ee2...\n    .....222ff444444fffff44444544ff222.....\n    ..22222eeeeeeeeeeeeeeeeeeeeeeeee22222..\n    222222effffffffff1ffffffffffffffe222222\n    2fffffffffffffff111fffffffffffffffffff2\n    2f4441dfbbbbbbbbbb11b1bbbbbbbbbfd1444f2\n    2f22222ffffffffff1f11fffffffffff22222f2\n    2fffffffbbbbbbbbbbbb1bbbbbbbbbbfffffff2\n    222222222222244444444444442222222222222\n    422222222222245555555555542222222222224\n    442222222222244444444444442222222222444\n    f4444444411222222222222222221144444444f\n    feeeffffdff1eeeeeeeeeeeeeeedff1ffffeeef\n    fffffffffddfffffffffffffffffddfffffffff\n    ffffffff.......................ffffffff\n    .ffffff.........................ffffff.\n`;\nconst CAR_IMG_LEFT = img`\n    .............22222222222222.................\n    ...........229999999999999922...............\n    ......2dd.2999eee9999555459992.dd...........\n    ......2ee22999eee99945555549922ee22.........\n    ....2222222ff44444ff44444544f222222222......\n    ..422e2222222eeeeeeeeeeeeeeeeeee222222222...\n    .242ef222222effffffffff1ffffffffe2222222222.\n    .22e4e2fffffffffffffff111ffffffffffffffff22.\n    .2e4ef2f4441dfbbbbbbbbbb11bbbbbbbbfd1444f22.\n    .22e422f22222ffffffffff1fffffffffff22222f22.\n    .fe4222fffffffbbbbbbbbbbbbbbbbbbbbfffffff22.\n    .ff2222222222222222444444444444222222222222.\n    .fff224222222222222455555555554222222222224.\n    ..ff2f4422222222222444444444444222222222444.\n    ...f2ff44444444412222222222222222144444444f.\n    ....2ffeeeffffedf1eeeeeeeeeeeeee1f1ffffeeef.\n    .....fffffffffffdffffffffffffffffdfffffffff.\n    ......ffffffff.....................ffffffff.\n    .......ffffff.......................ffffff..\n`;\nconst CAR_IMG_RIGHT = img`\n    .................22222222222222.............\n    ...............229999999999999922...........\n    ...........dd.29999eeee99955459992.dd2......\n    .........22ee229999eeee994555549922ee2......\n    ......222222222fff444444f444454ff2222222....\n    ...222222222eeeeeeeeeeeeeeeeeee2222222e224..\n    .2222222222efffffff1fffffffffffe222222fe242.\n    .22fffffffffffffff111ffffffffffffffff2e4e22.\n    .22f4441dfbbbbbbbbbb11bbbbbbbbfd1444f2fe4e2.\n    .22f22222ffffffffff1fffffffffff22222f224e22.\n    .22fffffffbbbbbbbbbbbbbbbbbbbbfffffff2224ef.\n    .2222222222224444444444442222222222222222ff.\n    .422222222222455555555554222222222222422fff.\n    .4442222222224444444444442222222222244f2ff..\n    .f44444444122222222222222221444444444ff2f...\n    .feeeffff1f1eeeeeeeeeeeeee1fdeffffeeeff2....\n    .fffffffffdffffffffffffffffdfffffffffff.....\n    .ffffffff.....................ffffffff......\n    ..ffffff.......................ffffff.......\n`;\nconst CAR_IMG_SIDE_L = img`\n    ............................f2.....eee55.........................\n    ...........................f2.....ffeee55........................\n    ..........................f2......fdddee45.......................\n    .........................f2........ddeee45.......................\n    ........................f2........886688a5.......................\n    .......................f2ff......dd88668a......eeeeeeeeee........\n    ..................222.f2ffff..dddddd8888a..222222222222222e2.....\n    .............22222222222222222222222222222222222222e2e2e2e2e2efff\n    .......2222222222222222222222222222eeee22fffff2222222222222222f44\n    ...222222222222222222222222eeeeeeee222222222222222222422422422f22\n    .222222222222222222222eeeee222eeeeeeeee2fffff22222222222222222fff\n    2222222222bbbbb222222eeeeeeeee2222222222222222222222bbbbb2222222.\n    522222222bbfffbb2222222222222eeeeeeeee2fffff2222222bbfffbb2222222\n    12e2e2e2bbfdddfbb222eeeeeeeee2222222222222222e2e2ebbfdddfbbe2e222\n    2e2e2e2ebfd1d1dfb222222222222222222222222222e2e2e2bfd1d1dfb2e422.\n    .fffffffbfddfddfbfffffffffffffffffffffffffffffffffbfddfddfbf44f..\n    ..ffffffbfd1d1dfbfff........ffffffffffffffffffffffbfd1d1dfbf.....\n    ..........fdddf.....................................fdddf........\n    ...........fff.......................................fff.........\n`;\nconst CAR_IMG_LEFT_2 = img`\n    .................22222222222222...........................\n    ...............22999999999999992..........................\n    ..............299ee9999555459992dd...........2222222......\n    .............299ffeee99d555499992ee......22222eeeeeeee222.\n    .........dd.2f99ddeee99d444449992222222222eeeeeeeeffffff22\n    .........ee2ff9ddd2222222222222422222eeeeeff1fffffbf144f22\n    ........2222222222222222222222422222effffff1111bbbff222f22\n    ....22222222222222222222222222422fffffffffbbb1ffffbfffff22\n    .2222222222222eeeeee2fff222222422f441fbbbbff1fbbbb22222222\n    22222222222eeee222222222222222422f222fffffbbbb444222222222\n    5222ff222222222eeeee2fff222222422fffffbbbb444455422222224.\n    122fddf2222eeeee22222222222222422222222222455544421444444.\n    22fd11df22222222eeee2fff22ff224422222222224444222211fffee.\n    .ffddddffffff222222222222fddf22442222222222222eeeefdfffff.\n    ..fd11dfffffffffffff2222fd11df2f4444444122eeeefffffffff...\n    ...fddfff....ffffffffffffddddf2feeffffed1effff...fffff....\n    ....fff.............fffffd11df2fffffffffdff...............\n    .........................fddffff..........................\n    ..........................ffff............................\n`;\n\n\nconst CAR_IMG_EXPLOSION_0 = img`\n    . . . . 1 1 1 1 . . . .\n    . . 1 1 1 1 1 1 1 1 . .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . . 1 1 1 1 1 1 1 1 . .\n    . . . . 1 1 1 1 . . . .\n`;\nconst CAR_IMG_EXPLOSION_1 = img`\n    ..........111111..........\n    .......111111111111.......\n    ......11111111111111......\n    ....111111111111111111....\n    ...11111111111111111111...\n    ...11111111111111111111...\n    ..1111111111111111111111..\n    .111111111111111111111111.\n    .111111111111111111111111.\n    .111111111111111111111111.\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    .111111111111111111111111.\n    .111111111111111111111111.\n    .111111111111111111111111.\n    ..1111111111111111111111..\n    ...11111111111111111111...\n    ...11111111111111111111...\n    ....111111111111111111....\n    ......11111111111111......\n    .......111111111111.......\n    ..........111111..........\n`;\nconst CAR_IMG_EXPLOSION_2 = img`\n    ........44444................\n    ......4444444444444444.......\n    .....4444444444444444444.....\n    ....444444444444444444444....\n    ....4444444444444444444444...\n    ...444444411441144441414444..\n    ..44444144111111144444144444.\n    ..44441441114441144444444444.\n    .4444414411111414144441414444\n    .4444444441114114144411441444\n    44444444444411411114444444444\n    44444444444144411111444444444\n    44444444441441141411144444444\n    44144444444411441411444444444\n    4111444444111141144444444444.\n    4114444444111111444144444444.\n    .11444444411411444114444444..\n    .44414444441441441144444144..\n    ..4111444444111111144444144..\n    ..441444444411144114444114...\n    ..444444444441444444444114...\n    ..444444444444444444444144...\n    ...44444444444444111444444...\n    ...44444444444444441444444...\n    ....444444444444441444444....\n    .....44444444444444444444....\n    .......44444444444444444.....\n    ..............444444444......\n    ................44444........\n`;\nconst CAR_IMG_EXPLOSION_3 = img`\n    ...............4444.............\n    ...........44444444444..........\n    .......444444444444444444.......\n    ......444444444444444444444.....\n    .....44444441144111114444444....\n    .....444444111444414444444444...\n    ....44444441114444444111144444..\n    ...444444444444444444111144444..\n    ...4444444444444444444444444444.\n    ..44444411444444444444444444444.\n    ..4444441144444444..444444444444\n    ..44444444444444.4..444444441444\n    ..4444414444444.....4.4444411144\n    .444444144444.44....4.4444411444\n    .444444144444..........444444444\n    .44444444444...........444444444\n    .44444114444.4......4.4444444444\n    .444441144444......4.44444414444\n    ..444444444444.4..44444444114444\n    ..44441144444444.444444441114444\n    ..4444114444444..444444441444444\n    ..444444444444444444444444444444\n    ..44444444444444444444444444444.\n    ..44444441444444444444444444444.\n    ..4444444444441111114444444444..\n    ...444444444111111114444444444..\n    ....4444444411114114444444444...\n    .....44444441144444444444444....\n    ......444444444444444444444.....\n    .......4444444444444444444......\n    .........44444444444444.........\n    .............4444444............\n`;\nconst CAR_IMG_EXPLOSION_4 = img`\n    ..44...........4144.....4.......\n    .4444.4....44444444444.4444444..\n    44444..444444444444444.44444414.\n    .444....4444.4444..444.444444444\n    ..44....444...444444444444.4444.\n    ..4....444....44444.44414...444.\n    .444..4444....44.....4444....44.\n    .4444444.44..44.......4444..44..\n    ..44444...44444.......4444...44.\n    ..4444....44444........444....4.\n    ..4441...444444........4444..444\n    ..4441....4441..........444...44\n    ..4444....4444..........4444..44\n    .4444....4411..........44414...4\n    .44444..44444.........4444444.44\n    .44444444444.........4444.444444\n    ...44444444.........44.4...44444\n    ..444..144.................44444\n    ..444.4444..........4.....44..44\n    ..44..44.44..........4....44.444\n    ..14.44...444.........4..444.414\n    ..4444.....44444........4444.144\n    ..444......444444........4.4.44.\n    ..444.......444444444...444.444.\n    ..44.........4444..444.4444.44..\n    .........4....44....444.444444..\n    4444.444444..44.....44...4444...\n    4414444444444444...4444.4444....\n    44444.444444114444444444444.....\n    ..444..4444444441444444444......\n    ...4.....44444444444444.........\n    .............4444444............\n`;\n\nconst CAR_EXPLOSION_FRAMES = [\n    CAR_IMG_EXPLOSION_0, CAR_IMG_EXPLOSION_1, CAR_IMG_EXPLOSION_2,\n    CAR_IMG_EXPLOSION_3, CAR_IMG_EXPLOSION_4\n];\n","explosionanimation.ts":"class ExplosionAnimation {\n    public singleExplosionDurationMs: number;\n    public numFires: number;\n    public minStartDelay: number;\n    public maxStartDelay: number;\n\n    private running: boolean;\n    private animationStartTime: number;\n    private animationEndTime: number;\n    private frameInterval: number;\n    private fireStartTime: number[];\n    private fireXOffset: number[];\n    private fireYOffset: number[];\n\n    constructor(public offsetWidth: number, public offsetHeight: number, public durationMs: number, public frames: Image[]) {\n        this.singleExplosionDurationMs = 400;\n        this.numFires = 4;\n        this.minStartDelay = 100;\n        this.maxStartDelay = 500;\n        this.running = false;\n        this.frames = frames;\n    }\n\n    public isDone(): boolean {\n        return !this.running;\n    }\n\n    public begin(): void {\n        this.fireStartTime = [];\n        // First fire always start immediately\n        this.fireStartTime.push(0);\n        // The other fires have little delays\n        for (let i = 1; i < this.numFires; i++) {\n            this.fireStartTime.push(randint(this.minStartDelay, this.maxStartDelay));\n        }\n        \n        const xOffsetPlus = this.offsetWidth >> 1;\n        const xOffsetMinus = -xOffsetPlus;\n        const yOffsetPlus = this.offsetHeight >> 1;\n        const yOffsetMinus = -yOffsetPlus;\n        this.fireXOffset = [];\n        this.fireYOffset = [];\n\n        for (let i = 0; i < this.numFires; i++) {\n            this.fireXOffset.push(randint(xOffsetMinus, xOffsetPlus));\n            this.fireYOffset.push(randint(yOffsetMinus, yOffsetPlus));\n        }\n\n        this.frameInterval = Math.idiv(this.singleExplosionDurationMs, this.frames.length);\n        this.animationStartTime = game.runtime();\n        this.animationEndTime = this.animationStartTime + this.durationMs;\n        this.running = true;\n    }\n\n    public draw(targetImg: Image, x: number, y: number): void {\n        if (!this.running)\n            return;\n\n        const now = game.runtime();\n        const deltaSinceStart = now - this.animationStartTime;\n\n        if (now >= this.animationEndTime) {\n            this.running = false;\n            return;\n        }\n\n        for (let i = 0; i < this.numFires; i++) {\n            const startTime = this.fireStartTime[i];\n            if (deltaSinceStart >= startTime) {\n                const frameIndex = Math.idiv(deltaSinceStart - startTime, this.frameInterval);\n                if (frameIndex < this.frames.length) {\n                    const frameImg = this.frames[frameIndex];\n                    const drawX = x - (frameImg.width >> 1) + this.fireXOffset[i];\n                    const drawY = y - (frameImg.height >> 1) + this.fireYOffset[i];\n                    targetImg.drawTransparentImage(frameImg, drawX, drawY);\n                } else {\n                    const xOffsetPlus = this.offsetWidth >> 1;\n                    const xOffsetMinus = -xOffsetPlus;\n                    const yOffsetPlus = this.offsetHeight >> 1;\n                    const yOffsetMinus = -yOffsetPlus;\n\n                    this.fireStartTime[i] = deltaSinceStart + randint(this.minStartDelay, this.maxStartDelay);\n                    this.fireXOffset[i] = randint(xOffsetMinus, xOffsetPlus);\n                    this.fireYOffset[i] = randint(yOffsetMinus, yOffsetPlus);\n                }\n            }\n        }\n    }\n}\n","pxt.json":"{\n    \"name\": \"Outrun\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"mathconst.ts\",\n        \"obstacles.ts\",\n        \"circuit.ts\",\n        \"textrender.ts\",\n        \"countdown.ts\",\n        \"worldrender.ts\",\n        \"carphysics.ts\",\n        \"playerCarAssets.ts\",\n        \"explosionanimation.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v1.2.6\",\n        \"tag\": \"v1.2.6\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/7f343e1ba30a4c31de6b7b14d288d34b2741b2f4\",\n        \"target\": \"1.2.16\",\n        \"pxt\": \"6.2.21\",\n        \"targetId\": \"arcade\"\n    },\n    \"supportedTargets\": [\n        \"arcade\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1744637688555,"editorVersion":"2.0.48","text":{"main.ts":"const CAR_Y_POS = SCREEN_HEIGHT - (CAR_IMG_STRAIGHT.height >> 1) - 6;\nconst BACKDROP_IMG = img`\n    ................................................................................................................................................................\n    .........................................................................6666b..................................................................................\n    ...............................................................6766....6677666b6................................................................................\n    .............................................................6676666..6777666b6b6...............................................................................\n    ...............776786.......................................b67676666677666966b6b...............................................................................\n    ............77777787886b...................................66767666667766696966b6b..............................................................................\n    ...........777776766b6b6b..................66b6b.........666b66666667769696969666666............................................................................\n    ..........77676766766b6b6b................6666b6b6.....666666666666666966696966666666...........................................................................\n    .........7667676769696b6b6b6.............6666b6b6b6b..66b666666666666966b66669666666666.........................................................................\n    .......767766b69696969666b6b6...........666666b6b6b6..6666666666669696966b6666969666666666..........................................................666b6b6.....\n    .....6667696b6b69696966666b6b6b......6666776666b6b6b66666666666969696966b6b66666696666e6e6b66......................................................76766b6b6b...\n    ...6666969666b6669696966666666666..666667767666666b6b66666666696969666666b6b66666696666e666b666666666..........................................7667676666b6b6b..\n    66666696966666b66666969666666666666666667666666666666b666b466969696666666666b666666666666666b6b6b6666666666666............666666666.........677767666e6666b6b6b6\n    666969666666666666666669666666666d666667666666666d6666b66466969666666666646666666666666666666b6b6b6b66666466666666.....6666666b4666666..66666666666646e666666b66\n    6666666666d666666666666666666666666646666666666666666666666666666666666666666666666666664666666666b666666666666646666666666b46666666b466666666666666666666666666\n    6d66666666666666646666666d666b6666b666b66b6b66b666b66666b66b6b6b66b6666b6666b66b6b6b6b6b6b66b666b6666b66b666b6b6b6b6b6b6b666666b6666666666b6b6b66b666b666b666b66\n`\nconst EXPLOSION_MELODY_1 = new music.Melody(\"~11 !60,150 !100,50 !80,100 !60,150 !100,50 !80,100 !60,150 !100,250 !80,150 !60,350 !100,150 !80,150 @0,0,255,200 !60,150\");\nconst EXPLOSION_MELODY_2 = new music.Melody(\"~13 !80,50 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 @0,0,255,200 !80,100\");\nconst EXPLOSION_MELODY_3 = new music.Melody(\"~5 !80,2000\");\n\ninfo.setScore(0);\ninfo.showScore(false);\nconst countdown = new Countdown();\ncountdown.load(60);\n\nlet running = false;\nlet isOver = false;\nlet endReached = false;\nlet crashed = false;\nlet showCar = false;\nlet timeExtended = false;\n\nconst worldRender = new WorldRender();\nconst carPhysics = new CarPhysics();\nconst explosionAnimation = new ExplosionAnimation(40, 10, 2000, CAR_EXPLOSION_FRAMES);\nconst melodyPlayer1 = new music.MelodyPlayer(EXPLOSION_MELODY_1);\nconst melodyPlayer2 = new music.MelodyPlayer(EXPLOSION_MELODY_2);\nconst melodyPlayer3 = new music.MelodyPlayer(EXPLOSION_MELODY_3);\n\nconst doubledFont = image.scaledFont(image.font8, 2);\nconst speedTextLabel = new TextRender(\"SPEED\", 1, 3);\nconst speedTextValue = new TextRender(carPhysics.speed().toString(), 1, 3, doubledFont);\nconst countDownLabel = new TextRender(\"TIME\", 1, 3);\nconst countDownValue = new TextRender(countdown.remainingTime().toString(), 1, 3, doubledFont);\nconst scoreTextLabel = new TextRender(\"SCORE\", 1, 3);\nconst scoreTextValue = new TextRender(info.score().toString(), 1, 3, doubledFont);\n\ngame.onPaint(function() {\n    if (isOver || endReached)\n        return;\n\n    if (running) {\n        if (crashed) {\n            if (!explosionAnimation.isDone())\n                // Quickly stop the car after a crash\n                carPhysics.hardStop();\n            else {\n                // Move the car back on road center\n                // when the explosion animation is done\n                carPhysics.moveToXPos(0, 40);\n                const pippo = carPhysics.carXPos();\n                if (carPhysics.carXPos() == 0)\n                    crashed = false;\n            }\n        } else {\n            const offRoad = Math.abs(Math.imul(carPhysics.carXPos(), POS_FIXED_MATH_ONE)) > STRIPE_HALF_WIDTH_FP;\n            carPhysics.updateSpeed(\n                controller.A.isPressed(), \n                controller.B.isPressed(),\n                controller.left.isPressed(),\n                controller.right.isPressed(),\n                offRoad);\n\n            const deltaDistance = carPhysics.deltaTraveledDistance();\n            const oldDistance = carPhysics.traveledDistance() - deltaDistance;\n            const roadCurveDelta = worldRender.calcRoadCurveInSegment(oldDistance, deltaDistance);\n            carPhysics.applyRoadDeltaCurve(roadCurveDelta);\n        }\n    } else\n        carPhysics.clear();        \n\n    // Get player car horizontal position and set camera center\n    const carXPos = carPhysics.carXPos();\n    let carXPos2D: number;\n    let perspectiveHorizontalCenter: number;\n    if (carXPos >= 0) {\n        if (carXPos > CAR_VIEWPORT) {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT - carXPos;\n            carXPos2D = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT\n        } else {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH;\n            carXPos2D = SCREEN_HALF_WIDTH + carXPos;\n        }\n    } else {\n        if (carXPos < (-CAR_VIEWPORT)) {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT - carXPos;\n            carXPos2D = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT;\n        } else {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH;\n            carXPos2D =  SCREEN_HALF_WIDTH + carXPos;\n        }\n    }\n\n    // Draw the world\n    const backgroundImg = scene.backgroundImage();\n    const traveledDistance = carPhysics.traveledDistance();\n    endReached = worldRender.draw(backgroundImg, traveledDistance , perspectiveHorizontalCenter);\n\n    if (endReached) {\n        carPhysics.setSpeed(0);\n    }\n\n    // Draw the car\n    let carFrame: Image;\n    if (carPhysics.speed() > 1) {\n        // Car turn animation    \n        if (controller.left.isPressed())\n            carFrame = CAR_IMG_LEFT;\n        else if (controller.right.isPressed())\n            carFrame = CAR_IMG_RIGHT;\n        else\n            carFrame = CAR_IMG_STRAIGHT;\n    } else {\n        carFrame = CAR_IMG_STRAIGHT;\n    }\n    const carDrawX = carXPos2D - (carFrame.width >> 1);\n    const carDrawY = CAR_Y_POS - (carFrame.height >> 1);\n    if (showCar) \n        backgroundImg.drawTransparentImage(carFrame, carDrawX, carDrawY);\n\n    // Draw car explosion animation\n    if (!explosionAnimation.isDone()) {\n        explosionAnimation.draw(backgroundImg, carXPos2D, CAR_Y_POS);\n    }\n\n    // Draw HUD\n    speedTextValue.setText(carPhysics.speed().toString());\n    countDownValue.setText(countdown.remainingTime().toString());\n    scoreTextValue.setText(info.score().toString());\n    speedTextLabel.draw(backgroundImg, 1, 1);\n    speedTextValue.draw(backgroundImg, 0, speedTextLabel.height() + 2);\n    countDownLabel.draw(backgroundImg, SCREEN_HALF_WIDTH, 1, TextAlignment.Center);\n    countDownValue.draw(backgroundImg, SCREEN_HALF_WIDTH, countDownLabel.height() + 2, TextAlignment.Center);\n    scoreTextLabel.draw(backgroundImg, SCREEN_WIDTH - 2, 1, TextAlignment.Right)\n    scoreTextValue.draw(backgroundImg, SCREEN_WIDTH - 1, scoreTextLabel.height() + 2, TextAlignment.Right);\n\n    if (!crashed && showCar) {\n        // Check if car is outside the road\n        if (Math.imul(Math.abs(carXPos) + (carFrame.width >> 1), POS_FIXED_MATH_ONE) > STRIPE_HALF_WIDTH_FP) {\n            // Check for crash against obstacles\n            const colX1 = carXPos - (carFrame.width >> 1);\n            const colX2 = colX1 + carFrame.width;\n            const colY2 = Math.idiv(ROAD_INIT_Y, POS_FIXED_MATH_ONE) - (SCREEN_HEIGHT - CAR_Y_POS + (carFrame.height >> 1));\n            const colY1 = colY2 - carFrame.height;\n            if (worldRender.checkCollision(colX1, colY1, colX2, colY2, STRIPE_HEIGHT >> 1)) \n            {\n                crashed = true;\n                control.runInParallel(function() {\n                    melodyPlayer1.play(170);\n                });\n                control.runInParallel(function() {\n                    melodyPlayer2.play(170);\n                });\n                control.runInParallel(function() {\n                    melodyPlayer3.play(90);\n                });\n                explosionAnimation.begin();  \n            }\n        }\n    }\n\n    // Extend time on check sign\n    if (!timeExtended && worldRender.onCheckSign(traveledDistance)) {\n        timeExtended = true;\n        countdown.add(30);\n        control.runInParallel(function() {\n            music.playMelody(\"B5:2 R:1 B5:2 R:1 B5:2\", 160);            \n        })\n    }\n});\n\nfunction beginSequence(): void {\n    // Show car entering the scene\n    let carSprite = sprites.create(CAR_IMG_SIDE_L);\n    carSprite.x = 200;\n    carSprite.y = CAR_Y_POS;\n    carSprite.vx = -100;\n    while (carSprite.x > SCREEN_HALF_WIDTH)\n        pause(10);\n    carSprite.vx = 0;\n    carSprite.x = SCREEN_HALF_WIDTH;\n\n    carSprite.setImage(CAR_IMG_LEFT_2);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    pause(100);\n    carSprite.setImage(CAR_IMG_LEFT);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    pause(100);\n    carSprite.setImage(CAR_IMG_STRAIGHT);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    showCar = true;\n    pause(100);\n    carSprite.destroy();    \n    \n    // Start countdown\n    music.setVolume(255);\n    music.setTempo(60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_1;\n    music.playMelody(\"C5:1 R:4\", 60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_2;\n    music.playMelody(\"C5:1 R:4\", 60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_GREEN;\n    control.runInParallel(function() {\n        music.playMelody(\"A5:4\", 60);        \n    });\n}\n\nbeginSequence();\ncountdown.start();\nrunning = true;\n\ngame.onUpdateInterval(200, function() {\n    if (!isOver) {\n        info.changeScoreBy(Math.idiv(carPhysics.speed(), 20));\n        info.showScore(false);\n\n        // Time over game end\n        if (countdown.isExpired()) {    \n            isOver = true;\n            game.over();            \n        }\n\n        // Circuit end reached. Game won\n        if (endReached) {        \n            isOver = true;\n            game.over(true, effects.confetti);\n        }\n    }\n});\n","README.md":" \n\n\n> Open this page at [https://cdarius.github.io/makecode-outrun/](https://cdarius.github.io/makecode-outrun/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/cdarius/makecode-outrun** and import\n\n## Edit this project ![Build status badge](https://github.com/cdarius/makecode-outrun/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/cdarius/makecode-outrun** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/cdarius/makecode-outrun/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/arcade\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","mathconst.ts":"// --- Fixed point math configuration\nconst ANGLES_BITS = 4;\nconst ANGLES_FIXED_MATH_ONE = Math.pow(2, ANGLES_BITS);\nconst POS_BITS = 7;\nconst POS_FIXED_MATH_ONE = Math.pow(2, POS_BITS);\n// --- End fixed point configuration\n\nconst SCREEN_WIDTH = scene.screenWidth();\nconst SCREEN_HEIGHT = scene.screenHeight();\nconst SCREEN_HALF_WIDTH = Math.idiv(SCREEN_WIDTH, 2);\nconst SCREEN_HALF_HEIGHT = Math.idiv(SCREEN_HEIGHT, 2);\n\n// --- Car configuration\nconst CAR_VIEWPORT = Math.idiv(scene.screenWidth(), 7);\n// end car configuration\n\nconst SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT = SCREEN_HALF_WIDTH + CAR_VIEWPORT;\nconst SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT = SCREEN_HALF_WIDTH - CAR_VIEWPORT;","obstacles.ts":"class Obstacle {\n    public offset: number;\n    public reqMirror: boolean;\n    public image: Image;\n\n    constructor(offset: number, reqMirror: boolean, image: Image) {\n        this.offset = offset;\n        this.reqMirror = reqMirror;\n        this.image = image;\n    }\n}\n\nconst OBST_IMG_SEMAPHORE_OFF = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_RED_1 = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611222221166688\n    8866112212222116688\n    8866112122222116688\n    8866112222222116688\n    8866112222222116688\n    8866112222222116688\n    8866611222221166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_RED_2 = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611222221166688\n    8866112212222116688\n    8866112122222116688\n    8866112222222116688\n    8866112222222116688\n    8866112222222116688\n    8866611222221166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_GREEN = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611777771166688\n    8866117717777116688\n    8866117177777116688\n    8866117777777116688\n    8866117777777116688\n    8866117777777116688\n    8866611777771166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\n\nconst OBST_SEMAPHORE_SIGN = new Obstacle(35 * POS_FIXED_MATH_ONE, false, OBST_IMG_SEMAPHORE_OFF);\n\nconst OBST_START_SIGN = new Obstacle(70 * POS_FIXED_MATH_ONE, false, img`\n    ..111111111111.................................................................................................................................................................................................111111111111111..\n    .1111111111111111111111111111111111111111.....................................................................................................................................1111111111111111111111111111111111111111111111111.\n    111111111111111111111111111111111111111111111111111111111111111111111..............................................................................11111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111dddddddddddddddddddd11111111111111111111111111111111111111111111111111.........................................111111111111111111111111111111111111111111111111dddddddddddddddddddddddddd111111111111111111111\n    111111111111111111111111ff111111111ff1ddddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddd11111ff111111111ff11111111111111111111111111111\n    111111111111111111111ffff1f1111111f1ffff1111111111ddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddd11ffff1f1111111f1ffff11111111111111111111111111\n    1111111111111111111fff1ff1f1111111f1ff1fff1111111111111111111111111fffffffffdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffffffffffffff1111111111111111111fff1ff1f1111111f1ff1fff111111111111111111111111\n    11111111111111111ffff11f1fff11111fff1f11ffff111111111111111111111fff2222222fffddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd111111f2222222222222f11111111111111111ffff11f1fff11111fff1f11ffff1111111111111111111111\n    111111111111111fff1ff1ff1f1f11111f1f1ff1ff1fff111111111111111111ff2222222222ff11fffffffffffffffdddddddddddddddddddddddddddfffffffffffffff111111f2222222222222f111111111111111fff1ff1ff1f1f11111f1f1ff1ff1fff11111111111111111111\n    111111111111111ff11111ff1f11f111f11f1ff11111fff1111111111111111ff22222222222f111f2222222222222f1111111fffffffffffff1111111f2222222222222fff1111f2222222222222f111111111111111ff11111ff1f11f111f11f1ff11111fff1111111111111111111\n    111111111111111fffff11f11ffff111ffff11f11fffff11111111111111111f222222fffff2f111f2222222222222f111111ff22222222222ff111111f222222222222222ff111f2222222222222f111111111111111fffff11f11ffff111ffff11f11fffff11111111111111111111\n    111111111111111f11fffff111ffff1ffff111fffff11f11111111111111111f222222f111fff111f2222222222222f111111f2222222222222f111111f222222fffff22222ff11f2222222222222f111111111111111f11fffff111ffff1ffff111fffff11f11111111111111111111\n    1111111111111111f1f11ffff1ffff1ffff1ffff11f1f111111111111111111f222222ff111f1111f2222222222222f111111f2222222222222f111111f222222f111ff22222f11f2222222222222f1111111111111111f1f11ffff1ffff1ffff1ffff11f1f111111111111111111111\n    11111111111dddddfff11f11fff11fff11fff11f11fff111111111111111111ff222222fff111111f2222222222222f11111ff2222222222222ff11111f222222f1111f22222f11ffff222222fffff1111111111111111fff11f11fff11fff11fff11f11fffddddd1111111111111111\n    11111111111ddddddf11ffffdddddfffdd111ffff11f11111111111111111111ff2222222fff1111f2222222222222f11111f222222fff222222f11111f222222f111ff2222ff11111f222222f111111111111111111111f11ffff1ddddfffdddddffff11fdddddd1111111111111111\n    111111111111dddddfffffdddddddfdfdddddddfffffdddd11111111111111111fff2222222ff111ffff222222fffff11111f222222f1f222222f11111f222222fffff22222f111111f222222f111111111111111111111fffffdddddddfdfdddddddfffffddddd11111111111111111\n    111111111111111dddffdddddddddfdfdddddddddffddddddddddddddddddddddddffff22222ff11111f222222f11111111ff222222f1f222222f11111f222222222222222ff111111f222222fddddddddddddddddddddddffdddddddddfdfdddddddddffd1111111111111111111111\n    1111111111111111111dddddddddfdddfdddddddddddddddddddddddddddddddfdddddff22222fdddddf222222f11111111f222222ff1ff22222ff1111f222222222222222fdddddddf222222fddddddddddddddddddddddddddddddddfdddfdddddddddd11111111111111111111111\n    111111111111111111111111111dfdddfddddddddddddddddddddddddddddddfffddddff22222fdddddf222222fddddddddf222222fdddf222222fddddf222222ffff22222ffddddddf222222fddddddddddddddddddddddddddddddddfdddfddddd1111111111111111111111111111\n    111111111111111111111111111f11111f1111111111dddddddddddddddddddf2ffffff222222fdddddf222222fdddddddff222222fdddf222222fddddf222222fddff22222fddddddf222222fdddddddddddddddddddddddddddddddfdddddf11111111111111111111111111111111\n    111111111111111111111111111f11111f1111111111111ddddddddddddddddf222222222222ffdddddf222222fdddddddf2222222fffff222222fddddf222222fdddf22222ffdddddf222222fdddddddddddddddddddddddddddddddfdd111f11111111111111111111111111111111\n    11111111111111111111111111f1111111f1111111111111111dddddddddddff22222222222ffddddddf222222fdddddddf222222222222222222ffdddf222222fdddf222222fdddddf222222fddddddddddddddddddddddddddddd1f1111111f1111111111111111111111111111111\n    11111111111111111111111111f1111111f1111111111111111111ddddddddffff2222222fffdddddddf222222fddddddff2222222222222222222fdddf222222fdddff22222fdddddf222222fdddddddddddddddddddddddd111111f1111111f1111111111111111111111111111111\n    1111111111111111111111111f111111111f11111111111111111111111111111fffffffffdddddddddf222222fddddddf22222222222222222222fdddf222222fddddf22222ffddddffffffffdddddddddddddddd1111111111111f111111111f111111111111111111111111111111\n    1111111111111111111111111f111111111f1111111111111111111111111111111111111ddddddddddf222222fddddddf222222fffffffff22222ffddf222222fddddf222222fddddd111111111111111111111111111111111111f111111111f111111111111111111111111111111\n    .1111111111111111111111111111111111111111111111111111111111111111111111111111111111ffffffffdddddff22222ffdddddddf222222fddffffffffddd1ffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111.\n    ..1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111ffffffffddddddddffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..\n    ................1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..................\n    ...................................1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111......................................\n    ..........................................................11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............................................................\n    .................................................................................1111111111111111111111111111111111111111111111111111111111111..................................................................................\n`);\n\nconst OBST_FINISH_SING  = new Obstacle(70 * POS_FIXED_MATH_ONE, false, img`\n    ..111111111111.................................................................................................................................................................................................111111111111111..\n    .1111111111111111111111111111111111111111.....................................................................................................................................1111111111111111111111111111111111111111111111111.\n    111111111dd1111111111111111111111111111111111111111111111111111111111..............................................................................1111111111111111111111111111111111111111111111111111111111111111dd11111111111\n    1111111111dddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111...........................................11111111111111111111111111111111111111111111111ddddddddddddddddddddddddddddddddddd111111111111\n    11111111111111111111111111111111111111ddddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111ddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111111111fffffffdddddddddddddddddddddddddddddddddddddddddddddddddddddffffffff1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111111ffff22222fffffddddddddddddddddddddddddddddddddddddddddddddddd11f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111111ff222222222222ff11111111fffffffdddddddddddddfffffffffffff1111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111f22222222222222ff111111fff22222fff1111111111ff22222222222ff111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111ff22222222222222f111111ff222222222ff111111111f2222222222222f111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1111ddddd11111111111111111111111111111111111111111111111111111111111f22222222222222ff11111ff22222222222ff11111111f2222222222222f111111f222222f11111111111111111111111111111111111111111111111111111111111111111111111ddd11111111\n    11111111dddddddddddd11111111111111111111111111111111111111111111111ff222222fffffffff11111ff2222222222222ff111111ff2222222222222ff11111f222222f11111111111111111111111111111111111111111111111111111111ddddddddddddddd11111111111\n    11111111111ddddddddddddddddddddddd111111111111111111111111111111111f222222ff1111111111111f222222222222222f111111f222222fff222222f11111f222222f11111111111111111111111111111111111111111ddddddddddddddddddddddddddd11111111111111\n    111111111111ddddddddddddddddddddddddddddddddddddddd1111111111111111f222222f1111111111111ff222222fff222222ff11111f222222f1f222222f11111f222222f11111111111111111111111111111111ddddddddddddddddddddddddddddddddd11111111111111111\n    1111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddf222222fdddffffffff11f222222ff1ff222222f1111ff222222f1f222222f11111f222222f111111111ddddddddddddddddddddddddddddddddddddddddddddddddddd1111111111111111111111\n    1111111111111111111ddddddddddddddddddddddddddddddddddddddddddddddddf222222ffddf222222fddf222222fdddf222222f1dddf222222ffdff22222ffddddf222222fddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111\n    111111111111111111111111111ddddddddddddddddddddddddddddddddddddddddff222222ffff222222fddf222222fdddf222222fddddf222222fdddf222222fddddf222222fdddddddddddddddddddddddddddddddddddddddddddddddddddddd1111111111111111111111111111\n    111111111111111111111111111111111111111111ddddddddddddddddddddddddddf2222222222222222fddf222222ffdff222222fdddff222222fdddf222222fddddf222222fdddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111dddddddddddddddddddff222222222222222fddff222222fff222222ffdddf2222222fffff222222fddddf222222ffffffffddddddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111dddddddddddddff22222222222222fdddf222222222222222fddddf222222222222222222ffdddf2222222222222fdddddddddddddddddddddddddddddddddd11111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111dddddddddddff2222222222222fdddff2222222222222ffdddff2222222222222222222fdddf2222222222222fdddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111ddddffff2222222222fddddff22222222222ffddddf22222222222222222222fdddf2222222222222fddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111ddddddffffffffffffdddddff222222222ffdddddf222222fffffffff22222ffddfffffffffffffff111111111111111111111111111111111111111111111111111111111111111111111111111\n    .111111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddfff22222fffdddddff22222ffdddddddf222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.\n    ..1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111dfffffffdddddddffffffff11111111ffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..\n    ...........1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............\n    .......................111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............................\n    .............................................11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...................................................\n    .........................................................................11111111111111111111111111111111111111111111111111111111111111111111111111.............................................................................\n`);\n\nconst OBST_CHECK_SIGN = new Obstacle(70 * POS_FIXED_MATH_ONE, true, img`\n    ........................................................................bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb........................................................................\n    .......................................................................bddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddb.......................................................................\n    ......................................................................bdd666666666666666666666666666666666666666666666666666666666666666666666666666666ddb......................................................................\n    ......................................................................bd66666666666666666666666666666666666666666666666666666666666666666666666666666666db......................................................................\n    ......................................................................bd66666665555555666555555666555555665555555555556666666555555566655555566655555566db......................................................................\n    ......................................................................bd66666555555555566555555666555555665555555555556666655555555556655555566655555566db......................................................................\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbd66665555555555566555555666555555665555555555556666555555555556655555566555555566dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddbd66655555555555566555555666555555665555555555556665555555555556655555566555555666dbdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n    bd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbbd66655555555555666555555666555555665555556666666665555555555566655555565555555666dbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....db\n    .bd....db....db.db.bd....db....db.db.bd....db....db.db.bd....db....db.bd66555555566666666555555555555555665555555555666655555556666666655555555555556666db.bd....db....db.db.bd....db....db.db.bd....db....db.db.bd....db....db.\n    ..bd...db...db..db..bd...db...db..db..bd...db...db..db..bd...db...db..bd66555555666666666555555555555555665555555555666655555566666666655555555555566666db..bd...db...db..db..bd...db...db..db..bd...db...db..db..bd...db...db..\n    ...bd..db..db...db...bd..db..db...db...bd..db..db...db...bd..db..db...bd66555555666666666555555555555555665555555555666655555566666666655555555555556666db...bd..db..db...db...bd..db..db...db...bd..db..db...db...bd..db..db...\n    ....bd.db.db....db....bd.db.db....db....bd.db.db....db....bd.db.db....bd66555555566666666555555555555555665555555555666655555556666666655555555555555666db....bd.db.db....db....bd.db.db....db....bd.db.db....db....bd.db.db....\n    .....bddbdb.....db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....bd66655555555555666555555666555555665555556666666665555555555566655555565555555666db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbd66655555555555566555555666555555665555555555556665555555555556655555566555555566dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddbd66665555555555566555555666555555665555555555556666555555555556655555566655555566dbdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n    ......................................................................bd66666555555555566555555666555555665555555555556666655555555556655555566655555566db......................................................................\n    ......................................................................bd66666665555555666555555666555555665555555555556666666555555566655555566655555566db......................................................................\n    ......................................................................bd66666666666666666666666666666666666666666666666666666666666666666666666666666666db......................................................................\n    ......................................................................bdd666666666666666666666666666666666666666666666666666666666666666666666666666666ddb......................................................................\n    .......................................................................bddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddb.......................................................................\n    ........................................................................bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb........................................................................\n`);\n\nconst OBST_TRELLIS = new Obstacle(0, false, img`\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n`);\n\nconst OBST_TURN_RIGHT_SIGN_L = new Obstacle(20 * POS_FIXED_MATH_ONE, true, img`\n        .888888888888888888.\n        88666666666666666688\n        86611111111111111668\n        86111111111211111168\n        86111111111221111168\n        86111111111222111168\n        86111111222222211168\n        86111122222222221168\n        86111222222222222168\n        86111222222222221168\n        86112222222222211168\n        86112222211222111168\n        86112222111221111168\n        86112222111211111168\n        86112222111111111168\n        86112222111111111168\n        86112222111111111168\n        86612222111111111668\n        88666666666666666688\n        .888888888888888888.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        .222222222222222222.\n        22111111111111111122\n        2111F1F111F11F1F1112\n        211F11F11F1F1F1F1F12\n        2111F1FF11F111F11112\n        22111111111111111122\n        .222222222222222222.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n`);\n\nconst OBST_TURN_CHICANE_SIGN_L = new Obstacle(20 * POS_FIXED_MATH_ONE, true, img`\n        .888888888888888888.\n        88666666666666666688\n        86611122222222111668\n        86111122222222111168\n        86111111222222111168\n        86111112222222111168\n        86111122222222111168\n        86111222222122111168\n        86112222221122111168\n        86112222222111111168\n        86111222222211111168\n        86111122222221111168\n        86111112222222111168\n        86111111222222211168\n        86111111122222211168\n        86111111222222211168\n        86111112222222111168\n        86611122222221111668\n        88666666666666666688\n        .888888888888888888.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        .222222222222222222.\n        22111111111111111122\n        2111F1F111F11F1F1112\n        211F11F11F1F1F1F1F12\n        2111F1FF11F111F11112\n        22111111111111111122\n        .222222222222222222.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n`);\n\nconst OBST_BUSH = new Obstacle(0, false, img`\n    ...............cc...............\n    ............66c56ccc............\n    ............67c55c6c............\n    ...........66c7557cc6...........\n    ..........6c77577777cc..........\n    .........66cc677776c666.........\n    ........67575676c7c6777c........\n    ........666556666c666ccc........\n    ......6676c7777666667cc66c......\n    .....67776776776676677c777c.....\n    .....666666cc776c77cccc66cc.....\n    ....6677777767676c7c6666676c....\n    ...66c766777767776666666777cc...\n    .6667766777777777666667766cc666.\n    .677776776677777776676c77667776.\n    6667677cc67777767776776ccc6666cc\n    66c67776c777677c677667766777666c\n    .c677766666cc676c766ccc6667776c.\n    .666cc67766666666cc6666676666cc.\n    .cccc667766776666666666c67766...\n    ...c67776677676666666766c67cc...\n    ...66677c777677666666776cccc6...\n    ......cc677c67776776c7ccc6......\n    ........6cc67776c7776ccc........\n    ...........66776c77cc...........\n    .............6666c6.............\n    .............feeeeff............\n    ...........feeeeeeeeff..........\n    ............effeeef.............\n    ...............fef..............\n    ...............fef..............\n    ................f...............\n`);\n\nconst OBST_PILLAR = new Obstacle(0, false, img`\n    ........fffffffffffffff........\n    ....fffffdddedfdddddfddffff....\n    .ffffdddfddeedfddeddfdddefdfff.\n    fdddfdddfdeeddfdeeddfdeeefddddf\n    fdddfddfddeeddfddedfddeeefddeef\n    fedfdddfdddeddfdeddfddeeefdddef\n    fedfddddfffffffffffffffddfdddef\n    fddfffffbbbbbbfbbbbfbbbffffdddf\n    ffffbbbfddddddfddddfdddbbfbffff\n    fddfddddfdfffffffffffdddfddbbbf\n    fdddfdffffddddfddddd7ffffdddddf\n    feedff7fddddddfdddd7ddfddffdddf\n    .fff777fddddddfdddddddf7dddfff.\n    ...f77dfdddddddfddddddfd7ddf...\n    ...f777fddffffdfddffffdd7ddf...\n    ...f7ddfffefddffffddfdfffddf...\n    ...fdffddeefddddddddfddddfff...\n    ...ffdddeeefdddddddefdddddff...\n    ...fddddeedfdddddddefdddddff...\n    ...fdddddedfddfffdeefffdddff...\n    ...fddddddffffdfdfffeedfff.f...\n    ...fddffffdddddfddddeefdddff...\n    ...fffdf7ddddddfdddd7efddddf...\n    ...fdddf7ddddddfdddd7dfddddf...\n    ...fdddf7ddddddffff77dfddddf...\n    ...fddd7fffffffddd7ffffffddf...\n    ...fdfffdddfdddddd7fdddddfff...\n    ...ffd7ddddfddddd77fddddddff...\n    ...fd77ddddfddedd7dfddddddff...\n    ...fd7ddddfddeeedddfdddddfdf...\n    ...fd7ddddfdddeeefffffffdfdf...\n    ...fdddddffffffffdddddfdffff...\n    ...ffffffdddddfdddddddfddddf...\n    ...fddfdddddddfdddddddfddddf...\n    ...fddfdddddddfddddddddfffff...\n    ...fddffffffddfdddffffff7fdf...\n    ...fddddfddffffffffdfddd7fdf...\n    ...fddddfddfeedddddefdd77fdf...\n    ...fffddfddfeedddeedfdd7dfff...\n    ...fddfffddfedddddddfdd7ffdf...\n    ...fddfddfffddfdddddff7fdddf...\n    ...fddfdddddffdfffffd7fddddf...\n    ...ffdfdddddd7dfddddd7fddddf...\n    ...fdfffdddd7ddfddddddfddfff...\n    ...fddddffffdddffddddffffdef...\n    ...fdddfedddfffddffffddeeeef...\n    ...fdddfeeddfdddddfddddefeef...\n    .fffdddfeeddfddeedfdddddfdefff.\n    fdddffdfddddfdddedfddddddffdddf\n    fdddddffffddfddeddfddffffdddddf\n    fdddddfdddfffffffffffddddfddddf\n    ffffdfddddfdddfddfdddffddddffff\n    fdddffffdfddddfddfdddddffffdd7f\n    fdddfeedfffffffffffffffdfddfd7f\n    feddfeeefddd7fddddefdddefddf7df\n    feddf7edfdd77fdddeefdddefdefddf\n    feefddddfdd7fdddeeedfdeddfedfdf\n    .fffdddfddddfddddeddfdeddfefff.\n    ....ffffddddfdddddddfddffff....\n    ........fffffffffffffff........\n`);\n\nconst OBST_PILLAR_TOP = new Obstacle(58 * POS_FIXED_MATH_ONE, false, img`\n    .ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffff..ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..ffffffffffff..fffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff.\n    fbbbbbdddbbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbbbbbbbbffbbbbbbbbbbffccffbbbbbdddbbbbbbffbbbdddbbbbbbffccbbbbdbbbbddbffbbbbbbbbbbdbbffbbbbbbbbbbbbbffbbbbbbbbbffccffbbbbbdddbbbbdffbbbbdddbbbbbbffbbbbbbbbbbbbffbbbbbdddbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbbf\n    fbdddbbbbbddbbbffddddbbbbbddbbbffdbbbbbbdbbbbffbbddddddddbfffbbddddddddbcccffddbdbbbbbddbbbffddbbbbbddbbbffcdddddbdddbbbbffbbddddddddbbbffbbddddddddbfdffbbbbdddbbbcccffddbbbbbbbbbbbffdddbbbbbddbbbffbbddddddddbfffddbdbbbbbddbbffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbbf\n    fddddddddddedddffddddddddddedddffeeedddddddddffdddddddddedfffdddddddddedffbffddddddddddedddffddddddddedddffdddddeedddddddffdddddddddedddffdddddddddedfbffddddddddbdffbffdddddbbddddddffdddddddddedddffdddddddddedfffddddddddddeddffddddddddddedddffeeedddddddddffddddddddddedddf\n    fdddffdddddddddffdddffdddddddddffdeeddddddeddffdddddddedddfffdddddddeddddfdffdddffdddddddddffdffdddddddddffddddddeedddddeffdddddddeddeddffdddddddedddffffdddddddddddfdffdddddfdddddddffddffdddddddddffdddddddedddfffdddffddddddddffdddffdddddddddffdeeddddddeddffdddffdddddddddf\n    fffffddddddddddffdddfddddddddddffdddddeeddeddffdddddedededdffdddddedededffdffdddfddddddddddffffddddddddddffddddddeeefdddeffdddddededeeddffdddddedededdfffddddeeeeddffdffddddffddeddddfffffddddddddddffdddddedededdffdddfdddddddddffdddfddddddddddffdddddeeddeddffffffddddddddddf\n    fffffffffeeddddffdeefffffeeddddffd4ddddddddddffdeedddeedeefffdeedddeedeedddffdddfffffeeddddffffffffeeddddffddeeddfffdddffffdeedddeededddffdeedddeedeefdffeeddfddddedddffdddddffddddddfffffffffeeddddffdeedddeedeefffdddfffffeedddffdeefffffeeddddffd4ddddddddddffffffffffeeddddf\n    fffdfffddedddddffddefffddedddddffdddeddddddddffdddddeeeedefffdddddeeeedddddffdddfffddedddddffdfffddedddddffdddedd4ffff4d4ffdddddeeeeddddffdddddeeeedefdffeeddffdddddddffdddddeeeeddddfffdfffddedddddffdddddeeeedefffdddfffddeddddffddefffddedddddffdddeddddddddffffdfffddedddddf\n    fffffddeeedddddffddefddeeedddddff4fffefffddddffdddeeeededfeffdddeeeededddddfffddfddeeedddddffffddeeedddddffdddeeddffffdddffdddeeeededdddffdddeeeededfeeffdddddffddddddfffdddeedffddddfffffddeeedddddffdddeeeededfefffddfddeeeddddffddefddeeedddddff4fffefffddddffffffddeeedddddf\n    ffffddeeeeffdddffdddddeeeeffdddffdddeeeeeedddffdddedddeddeeffdddedddedddddbfffddddeeeeffdddfffddeeeeffdddffdddddddfffffddffdddedddedddddffdddedddeddeedffddddddfdddddbfffddeeeddfddeeffffddeeeeffdddffdddedddeddeefffddddeeeeffddffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffdddf\n    feffddeeeddffddffdddddeeeddffddffddd4eeedeeddfffdddddddddfdfffddddddddddddbffffdddeeeddffddfffddeeeddffddff.dddddddf4fffdfffdddddddddeddfffdddddddddfddffdddfddffddddbffffdeeeeeffdddffffddeeeddffddfffdddddddddfdffffdddeeeddffdffdddddeeeddffddffddd4eeedeeddffeffddeeeddffddf\n    feeffdddddddddfffffdfdddddddddfffddddddddddddfffffdddddddfdfffffddddddddbbbffffffdddddddddfffffdddddddddffffffdd4ddddfffffffffddddddddddfffffdddddddfdefffddddddfddbbbfffffddddddddeeffeffdddddddddffffffdddddddfdffffffdddddddddffffdfdddddddddfffddddddddddddffeeffdddddddddff\n    fdfffddddddffffffffffddddddffffffddddddddddddffffffffddddddffffffffddddbbbbffffffddddddffffffffddddddffffffffffdddddddfffffffffffdddddddffffffffdddddddffdddddddffbbbbffffffffdddddddfffffddddddffffffffffffddddddffffffddddddfffffffffddddddffffffddddddddddddffdfffddddddfffff\n    cffffffffffffffccffffffffffffffccffffffffffffffffffffffffffccffffffffffffffffffffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffcfffffffffffffcffffffffffffffccffffffffffffffccffffffffffffccffffffffffffff.\n    cffffffffffffffccfffffffffffffccfffffffffffffccffffffffffffffccffffffffffffffccffffffffffffccfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffccffffffffffffffccffffffffffffccffffffffffffccffffffffffffffccffffffffffffffffffffffffffffccfffffffffffff.\n    fccbbbbdbbbbddbffbbbbbbbbbbdbbffbbbbbbbbbbbbbffbbbbbbbbbfcfccffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbbfbbbbdddbbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbbbbbbbbffbbbbbbbbbbffccffbbbbbdddbbbbbffcbbbbdbbbbddbffbbbbbbbbbbdbbf\n    fcdddddbdddbbbbffbbddddddddbbbffbbddddddddbfdffbbbbdddbbbbcccffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbbfdddbbbbbddbbbffddddbbbbbddbbbffdbbbbbbdbbbbffbbddddddddbfffbbddddddddbcccffddbdbbbbbddbbffdddddbdddbbbbffbbddddddddbbbf\n    fdddddeedddddddffdddddddddedddffdddddddddedfbffddddddddbddffbffddddddddddedddffeeedddddddddffddddddddddeddffddddddddddedddffeeedddddddddffddddddddddedddfdddddddddedddffddddddddddedddffeeedddddddddffdddddddddedfffdddddddddedffbffddddddddddeddffddddeedddddddffdddddddddedddf\n    fddddddeedddddeffdddddddeddeddffdddddddedddffffddddddddddddfdffdddffdddddddddffdeeddddddeddffdddffddddddddffdddffdddddddddffdeeddddddeddffdddffdddddddddfddffdddddddddffdddffdddddddddffdeeddddddeddffdddddddedddfffdddddddeddddfdffdddffddddddddffdddddeedddddeffdddddddeddeddf\n    fddddddeeefdddeffdddddededeeddffdddddedededdfffddddeeeedddffdffdddfddddddddddffdddddeeddeddffffffdddddddddffdddfddddddddddffdddddeeddeddffffffddddddddddffffddddddddddffdddfddddddddddffdddddeeddeddffdddddedededdffdddddedededffdffdddfdddddddddffdddddeeefdddeffdddddededeeddf\n    fddeeddfffdddffffdeedddeededddffdeedddeedeefdffeeddfddddeddddffdeefffffeeddddffd4ddddddddddffffffffffeedddffdeefffffeeddddffd4ddddddddddffffffffffeeddddffffffffeeddddffdeefffffeeddddffd4ddddddddddffdeedddeedeefffdeedddeedeedddffdddfffffeedddffdeeddfffdddffffdeedddeededddf\n    fdddedd4ffff4d4ffdddddeeeeddddffdddddeeeedefdffeeddffddddddddffddefffddedddddffdddeddddddddffffdfffddeddddffddefffddedddddffdddeddddddddffffdfffddedddddffdfffddedddddffddefffddedddddffdddeddddddddffdddddeeeedefffdddddeeeedddddffdddfffddeddddffddedd4ffff4d4ffdddddeeeeddddf\n    fdddeeddffffdddffdddeeeededdddffdddeeeededfeeffdddddffdddddddffddefddeeedddddff4fffefffddddffffffddeeeddddffddefddeeedddddff4fffefffddddffffffddeeedddddffffddeeedddddffddefddeeedddddff4fffefffddddffdddeeeededfeffdddeeeededddddfffddfddeeeddddffddeeddffffdddffdddeeeededdddf\n    fdddddddfffffddffdddedddedddddffdddedddeddeedffddddddfddddddbffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffddffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffdddfffddeeeeffdddffdddddeeeeffdddffdddeeeeeedddffdddedddeddeeffdddedddedddddbfffddddeeeeffddffddddddfffffddffdddedddedddddf\n    f.dddddddf4fffdfffdddddddddeddfffdddddddddfddffdddfddffdddddbffdddddeeeddffddffddd4eeedeeddffeffddeeeddffdffdddddeeeddffddffddd4eeedeeddffeffddeeeddffddfffddeeeddffddffdddddeeeddffddffddd4eeedeeddfffdddddddddfdfffddddddddddddbffffdddeeeddffdffdddddddf4fffdfffdddddddddeddf\n    ffffdd4ddddfffffffffddddddddddfffffdddddddfdefffddddddfdddbbbffffdfdddddddddfffddddddddddddffeeffdddddddddffffdfdddddddddfffddddddddddddffeeffdddddddddffeffdddddddddfffffdfdddddddddfffddddddddddddfffffdddddddfdfffffddddddddbbbffffffdddddddddffffdd4ddddfffffffffddddddddddf\n    fffffdddddddfffffffffffdddddddffffffffdddddddffdddddddffbbbbbffffffddddddffffffddddddddddddffdfffddddddfffffffffddddddffffffddddddddddddffdfffddddddffffffffddddddffffffffffddddddffffffddddddddddddffffffffddddddffffffffddddbbbbffffffddddddffffffffdddddddfffffffffffdddddddf\n    ..fffffffffffff..fffffffffffff..fffffffffffff..ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff.ffffffffffffff..ffffffffffff..ffffffffffffffffffffffffffff..ffffffffffffff..ffffffffffffffffffffffffff..fffffffffffffffffffffffffffffccfffffffffffffccfffffffffffffc\n`);\n\nconst OBST_SURF_BLUE_L = new Obstacle(-100 * POS_FIXED_MATH_ONE, true, img`\n        .........................CC..\n        ........................FFC..\n        ........................FF...\n        ........................FF...\n        .......................FEE...\n        ......................FFEE...\n        ......................FFEE...\n        .....................FFE8E...\n        .....................FE88E...\n        .....................FE88E...\n        ....................FE888E...\n        ....................F888EE55.\n        ...................FF8888E...\n        ..................FFE8E88EE..\n        ..................FFE8888EE..\n        .................FFE886688E..\n        .................FE8866888E..\n        .................FE8E68888E..\n        ................FE8E888888E..\n        ...............FF8888888EEE5.\n        ...............FF9EEEEEEEEE..\n        ...............FF5EEEE8888E..\n        ..............FFE988888888EE.\n        .............FFE99888EEE888E.\n        .............FFE998E8888888E.\n        .............FE99988E888E88E.\n        .............FE9198E88888E8E.\n        ............FE9119888EEEEEEE5\n        ...........FF9999EEEEEEEEEEE.\n        ...........FF9EEEEEEE888888E.\n        ..........FFEEEEE98888E8888E.\n        ..........FFE9999988888888E..\n        ..........FE99991988888888E..\n        ..........FE999199888E8E88E..\n        .........FE99199998888888E...\n        .........FE9199999EEEEEEEE55.\n        ........FF99999EEEEEEEEEEE...\n        ........FF999EEEEEE888888E...\n        .......FFEEEE8811D1DD8888E...\n        .......FFEE88D1D111D1888EEF..\n        ......FFEE8DDDDDDFFF88EEEFF..\n        ......FFE81DDDFFF1D88E88F....\n        ......FE1FFD11DDD8888F88.....\n        ......FEF11DDDDD8888F888.....\n        .....FED11DD1DD88CFF888E.....\n        .....FEDD1D1DD888CC8888E.....\n        .....FFFDFDF8EEEEEF888E......\n        .....FFFFFF8FEEEEEEF8E.......\n        ....FFFFFFFF8EFEEEEF8E.......\n        ....FFFFEF888FEEEEEF8........\n        ....FEEF88FF88FEEEE8E........\n        ....FEFF88EFFFFEEEFE.........\n        ...FEFF8888EEFFFEFE..........\n        ..FFEE888888EE888FEEE........\n        ..FEEE8E88EE...CCCC..........\n        ..FEEE888E.....8CEC8.........\n        ..FEEEEEE.....CC8888.........\n        .FEEEE.......CCECECC.........\n        .FEEE.......CCE..CC..........\n        CFE.........CE...CC..........\n        CF..........CE...CC..........\n        FFF..........C...CCC.........\n        FF1111111....C....CC.........\n        CF1111111111EC....EC.........\n        CCCC11111111FC111FEC.........\n        CCCCCCCCEEEECCFEFEEEEEF1.....\n        ......CCCCCCCCCCCEECEEEEE1...\n        ...............CCCCEECCEEEC1.\n`);\n\nconst OBST_SURF_GREEN_L = new Obstacle(-40 * POS_FIXED_MATH_ONE, true, img`\n        .........................CC..\n        ........................FFC..\n        ........................FF...\n        ........................FF...\n        .......................FEE...\n        ......................FFEE...\n        ......................FFEE...\n        .....................FFE7E...\n        .....................FE77E...\n        .....................FE77E...\n        ....................FE777E...\n        ....................F777EE55.\n        ...................FF7777E...\n        ..................FFE7E77EE..\n        ..................FFE7777EE..\n        .................FFE777777E..\n        .................FE7777777E..\n        .................FE7E77777E..\n        ................FE7E777777E..\n        ...............FF7777777EEE5.\n        ...............FF5EEEEEEEEE..\n        ...............FF5EEEE7777E..\n        ..............FFE577777777EE.\n        .............FFE55777EEE777E.\n        .............FFE557E7777777E.\n        .............FE55577E777E77E.\n        .............FE5157E77777E7E.\n        ............FE5115777EEEEEEE5\n        ...........FF5555EEEEEEEEEEE.\n        ...........FF5EEEEEEE777777E.\n        ..........FFEEEEE57777E7777E.\n        ..........FFE5555577777777E..\n        ..........FE55551577777777E..\n        ..........FE555155777E7E77E..\n        .........FE55155557777777E...\n        .........FE5155555EEEEEEEE55.\n        ........FF55555EEEEEEEEEEE...\n        ........FF555EEEEEE777777E...\n        .......FFEEEE8811D1DD7777E...\n        .......FFEE88D1D111D1777EEF..\n        ......FFEE8DDDDDDFFF77EEEFF..\n        ......FFE81DDDFFF1D77E77F....\n        ......FE1FFD11DDD7777F77.....\n        ......FEF11DDDDD7777F777.....\n        .....FED11DD1DD77CFF777E.....\n        .....FEDD1D1DD777CC7777E.....\n        .....FFFDFDF7EEEEEF777E......\n        .....FFFFFF7FEEEEEEF7E.......\n        ....FFFFFFFF7EFEEEEF7E.......\n        ....FFFFEF777FEEEEEF7........\n        ....FEEF77FF77FEEEE8E........\n        ....FEFF77EFFFFEEEFE.........\n        ...FEFF7777EEFFFEFE..........\n        ..FFEE777777EE888FEEE........\n        ..FEEE7E77EE...CCCC..........\n        ..FEEE777E.....8CEC8.........\n        ..FEEEEEE.....CC8888.........\n        .FEEEE.......CCECECC.........\n        .FEEE.......CCE..CC..........\n        CFE.........CE...CC..........\n        CF..........CE...CC..........\n        FFF..........C...CCC.........\n        FF1111111....C....CC.........\n        CF1111111111EC....EC.........\n        CCCC11111111FC111FEC.........\n        CCCCCCCCEEEECCFEFEEEEEF1.....\n        ......CCCCCCCCCCCEECEEEEE1...\n        ...............CCCCEECCEEEC1.\n`);\n\nconst OBST_PALM_TREE_L = new Obstacle(17 * POS_FIXED_MATH_ONE, true, img`\n    .........677.........................\n    ...........6677........777666........\n    ..............67......766............\n    .......7777....67...776..............\n    ....7777777.....7...76...............\n    .7676666.767....67..6..777777........\n    66.........67...67.7..777666677777...\n    ............67...7.7.7766........66..\n    .............67..777776..............\n    ......77777...67777766..777777.......\n    .....7777777..767677.77776666777.....\n    ....7776666677.77ee666.......6777....\n    ...7766.....667.ee777777......6777...\n    ..7.6.........6eee.7666777.....677...\n    .76........77774e.7.777667777...677..\n    .7.......77777eee.77.77..67777...67..\n    ........77776.ee..67.677..67777..677.\n    .......77776..4e..67..677..6777....7.\n    ......77776..eee..677.6777..6777...6.\n    ......7776...eee..677.67777.67777..67\n    .....7776....ee...677.67777..6777...7\n    .....776.....4e...6777.6777...6777..6\n    ....776......ee....777..6777..6677..6\n    ....76......eee....677..6777...6777..\n    ....7.......4ee....677...6777...677..\n    ....6.......eee....677...6777...677..\n    ............ee.....677....677...677..\n    ............ee.....6777...6777...67..\n    ...........44e.....6777...6777...67..\n    ...........eee.....6777....677....6..\n    ...........eee.....6777....677....6..\n    ...........4ee.....7777.....67....6..\n    ...........e4e.....6777.....67.......\n    ...........eee.....677......67.......\n    ...........eee.....677......77.......\n    ..........eeee.....67.......6........\n    ..........44ee.....7........6........\n    ..........eee.....67.................\n    ..........eee.....6..................\n    ..........eee.....6..................\n    ..........44e........................\n    ..........e4e........................\n    ..........eee........................\n    ..........eee........................\n    ..........4ee........................\n    ..........44e........................\n    ..........eee........................\n    .........eeee........................\n    .........eeee........................\n    .........44ee........................\n    .........444e........................\n    .........e44e........................\n    .........eeee........................\n    .........eeee........................\n    .........4eee........................\n    .........444e........................\n    .........e44e........................\n    .........ee4ee.......................\n    .........eeeee.......................\n    .........eeeee.......................\n    .........44eee.......................\n    .........444ee.......................\n    ..........e44e.......................\n    ..........ee4e.......................\n    ..........eeee.......................\n    ..........eeeee......................\n    ...........44ee......................\n    ...........444e......................\n    ...........e444......................\n    ...........ee4ee.....................\n    ...........eeeee.....................\n    ...........eeeee.....................\n    ...........4eeee.....................\n    ...........444ee.....................\n    ...........e444ee....................\n    ...........ee444e....................\n    ............ee44e....................\n    ............eeeee....................\n    ............eeeee....................\n    ............eeeee....................\n    ............44eeee...................\n    ............444eee...................\n    ............e444ee...................\n    ............ee444e...................\n    ............eee4ee...................\n    .............eeeeee..................\n    .............eeeeee..................\n    .............eeeeee..................\n    .............44eeee..................\n    .............444eee..................\n`);\n\nconst OBST_GTX_BOTTOM_SIGN_R = new Obstacle(0, false, img`\n    ..........444444444444444444444..........\n    .........44222222222446666666644.........\n    .........44222222224466666666644.........\n    .........44222222224466666666644.........\n    .........44222222224466666666644.........\n    ........44222222224466666666644de........\n    ........44222222224466666666644de........\n    ........44222222224466666444444de........\n    ........44222222224466444444444de........\n    .......4422222222444444444ff44ddde.......\n    .......442222222444444f444ff44ddde.......\n    .......442222444444f4ff44ff444ddde.......\n    .......442444444ffff4fff4ff444ddde.......\n    ......44444444fffff444ffff444ddddde......\n    ......4444ff44ffff44444ffff44ddddde......\n    ......44fffff444ff4444fffff44ddddde......\n    ......4fff4ff444ff4444ff44ff4ddddde......\n    .....44ff4444444ff4444f444ffddddddde.....\n    .....44ff4fff444ff444ff44444ddddddde.....\n    .....44ff4fff444ff444f444444ddddddde.....\n    .....44ff44ff444ff4444444644ddddddde.....\n    ....444ff4fff44444444466644ddddddddde....\n    ....444fffff444444466666644ddddddddde....\n    ....4444ff44444466666666644ddddddddde....\n    ...44444444444466666666644ddddddddddde...\n    ...44444442224466666666644ddddddddddde...\n    ...44442222224466666666644ddddddddddde...\n    ...44222222224466666666644ddddddddddde...\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    .44222222224466666666644ddddddddddddddde.\n    .44222222224466666666644ddddddddddddddde.\n    .44444444444444444444444ddddddddddddddde.\n    .44444444444444444444444eeeeeeeeeeeeeeee.\n    444...............ee444...............eee\n    444...............ee444...............eee\n    444...............ee444...............eee\n    444...............ee444...............eee\n`);\n\nconst OBST_TRAFFIC_CONE = new Obstacle(0, false, img`\n    . . . . . . . 4 . . . . . . .\n    . . . . . . . 4 . . . . . . .\n    . . . . . . . 4 . . . . . . .\n    . . . . . . 1 1 1 . . . . . .\n    . . . . . . 4 1 4 . . . . . .\n    . . . . . . 4 4 4 . . . . . .\n    . . . . . 1 1 4 1 1 . . . . .\n    . . . . . 4 1 1 1 4 . . . . .\n    . . . . . 4 4 1 4 4 . . . . .\n    . . . . 1 4 4 4 4 4 1 . . . .\n    . . . . 1 1 4 4 4 1 1 . . . .\n    . . . . 4 1 1 1 1 1 4 . . . .\n    . . . 4 4 4 1 1 1 4 4 4 . . .\n    . e e 1 4 4 4 4 4 4 4 1 e e .\n    e 4 4 1 1 4 4 4 4 4 1 1 4 4 e\n    e 4 4 1 1 1 1 1 1 1 1 1 4 4 e\n    e 4 4 4 4 1 1 1 1 1 4 4 4 4 e\n    e 4 4 4 4 4 4 4 4 4 4 4 4 4 e\n    . e e 4 4 4 4 4 4 4 4 4 e e .\n    . . . e e e e e e e e e . . .\n`);\n\nconst OBST_DINNER_HOUSE_L = new Obstacle(0, false, img`\n    ..................fffffffffffffffffffffffffffffffffffffffffffff...........................\n    .................ff1111111111111111111111111111111111111111111ff..........................\n    .................f111111111111111111111111111111111111111111111f..........................\n    .................f111111111111111111111111111111111111111111111f..........................\n    .................f111888881111881188111188118888888118888881111f..........................\n    .................f111888888111881188111188118888888118888888111f..........................\n    .................f111881188811881188811188118811111118811188111f..........................\n    .............fffff111881188811881188811188118811111118811188111fffffffffffffff............\n    .............f555f111881118811881188881188118811111118811188111f5555555555555ff...........\n    ............f5555f111881118811881188881188118811111118811188111f555555555555fccf..........\n    ............f5555f111881118811881188188188118888881118888881111f555555555555fcccf.........\n    ...........f55555f111881118811881188188188118888881118888811111f55555555555fefcccf........\n    ...........f55555f111881118811881188188188118811111118811881111f55555555555feeffccff......\n    ..........f555555f111881118811881188118888118811111118811188111f5555555555f4ee4efcccf.....\n    .........f5555555f111881188811881188118888118811111118811188111f5555555555f4ee4eefcccf....\n    .........f5555555f111881188111881188111888118811111118811188111f555555555fe4ee4ee4fcccf...\n    ........f55555555f111888888111881188111888118888888118811188111f555555555fe4ee4ee4efcccf..\n    ........f55555555f111888881111881188111188118888888118811188111f55555555fee4ee4ee4efccccf.\n    .......f555555555f111111111111111111111111111111111111111111111f55555555fee4ee4ee4efcccccf\n    .......f555555555f111111111111111111111111111111111111111111111f5555555f4ee4ee4fe4efffffff\n    ......f5555555555ff1111111111111111111111111111111111111111111ff5555555f4ee4eff1f4ef......\n    ......f55555555555fffffffffffffffffffffffffffffffffffffffffffff5555555fe4eeff181f4ef......\n    .....f5555555555555555555555555555555555555555555555555555555555555555fe4ff11818f4ef......\n    .....f555555555555555555555555555555555555555555555555555555555555555ffff1881818f4ef......\n    ....f5555555555555555555555555555555555555555555555555555555555555555ff118181818f4ef......\n    ...f5555555555555555555555555555555555555555555555555555555555555555f11881881181f4ef......\n    ...f5555555555555555555555555555555555555555555555555555555555555555f111811811ffe4ef......\n    ..f5555555555555555555555555555555555555555555555555555555555555555f18118111ff4ee4ef......\n    ..f5555555555555555555555555555555555555555555555555555555555555555f881881ffee4ee4ef......\n    .f5555555555555555555555555555555555555555555555555555555555555555ff1811ffe4ee4ee4ef......\n    .f5555555555555555555555555555555555555555555555555555555555555555ff11ff4ee4effee4ef......\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4fffee4eeffbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4fe4ee4ffbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4effbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999919f4eef999999999919fe4ef999999999919fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999199f4eef999999999199fe4ef999999999199fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999991999f4eef999999991999fe4ef999999991999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999919999f4eef999999919999fe4ef999999919999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999799999999fe4ef999999999999fee4eefee4ee4efbffbbbfee4ef......\n    ....fe4ee47fff77fff7fff74eeffff7ffff7ffffe7e7ffffff7ff7fffee4eefee4ee4efbfbbbbfee4ef......\n    ....fe4ee4e75777ee7774e77e74ee7ee4ee77777e4e74775777774ee4ee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ef7755f757f75757555777f55777ff757577775557555777fffff4eefee4ee4efbbbbbbfee4ef......\n    ....feff77e77757e77e757e77e77e57577ee777e7757e577e7775eeeffe4eefee4ee4efbbbbbbfee4ef......\n    ....ffeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeff4ee4eefee4ee4efbbbbbbfeeff.......\n    ...ffffffffffffffffffffffffffffffffffffffffffffffffffffee4ee4eefee4ee4efbbbbbbfff.........\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbbbbbff...........\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbbbff.............\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbff...............\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4eff.................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4eeff...................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ff.....................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefeff.......................\n    ....fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff.........................\n`);\n\nconst OBST_DINNER_HOUSE_R = new Obstacle(0, false, img`\n    ...........................fffffffffffffffffffffffffffffffffffffffffffff..................\n    ..........................ff1111111111111111111111111111111111111111111ff.................\n    ..........................f111111111111111111111111111111111111111111111f.................\n    ..........................f111111111111111111111111111111111111111111111f.................\n    ..........................f111888881111881188111188118888888118888881111f.................\n    ..........................f111888888111881188111188118888888118888888111f.................\n    ..........................f111881188811881188811188118811111118811188111f.................\n    ............fffffffffffffff111881188811881188811188118811111118811188111fffff.............\n    ...........ff5555555555555f111881118811881188881188118811111118811188111f555f.............\n    ..........fccf555555555555f111881118811881188881188118811111118811188111f5555f............\n    .........fcccf555555555555f111881118811881188188188118888881118888881111f5555f............\n    ........fcccfef55555555555f111881118811881188188188118888881118888811111f55555f...........\n    ......ffccffeef55555555555f111881118811881188188188118811111118811881111f55555f...........\n    .....fcccfe4ee4f5555555555f111881118811881188118888118811111118811188111f555555f..........\n    ....fcccfee4ee4f5555555555f111881188811881188118888118811111118811188111f5555555f.........\n    ...fcccf4ee4ee4ef555555555f111881188111881188111888118811111118811188111f5555555f.........\n    ..fcccfe4ee4ee4ef555555555f111888888111881188111888118888888118811188111f55555555f........\n    .fccccfe4ee4ee4eef55555555f111888881111881188111188118888888118811188111f55555555f........\n    fcccccfe4ee4ee4eef55555555f111111111111111111111111111111111111111111111f555555555f.......\n    fffffffe4ef4ee4ee4f5555555f111111111111111111111111111111111111111111111f555555555f.......\n    ......fe4f1ffe4ee4f5555555ff1111111111111111111111111111111111111111111ff5555555555f......\n    ......fe4f181ffee4ef5555555fffffffffffffffffffffffffffffffffffffffffffff55555555555f......\n    ......fe4f81811ff4ef5555555555555555555555555555555555555555555555555555555555555555f.....\n    ......fe4f8181881ffff555555555555555555555555555555555555555555555555555555555555555f.....\n    ......fe4f818181811ff5555555555555555555555555555555555555555555555555555555555555555f....\n    ......fe4f18118818811f5555555555555555555555555555555555555555555555555555555555555555f...\n    ......fe4eff118118111f5555555555555555555555555555555555555555555555555555555555555555f...\n    ......fe4ee4ff11181181f5555555555555555555555555555555555555555555555555555555555555555f..\n    ......fe4ee4eeff188188f5555555555555555555555555555555555555555555555555555555555555555f..\n    ......fe4ee4ee4eff1181ff5555555555555555555555555555555555555555555555555555555555555555f.\n    ......fe4eeffe4ee4ff11ff5555555555555555555555555555555555555555555555555555555555555555f.\n    ......fe4eefbffee4eefff4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    ......fe4eefbbbff4ee4ef4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbffe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef919999999999fe4ef919999999999fee4f919999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef991999999999fe4ef991999999999fee4f991999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999199999999fe4ef999199999999fee4f999199999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999919999999fe4ef999919999999fee4f999919999999f4ee4ef....\n    ......fe4eefbbbffbfe4ee4eefee4eef999999999999fe4ef999999997999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbfbfe4ee4eefee4eefff7ff7ffffff7e7effff7ffff7ffffee47fff7fff77fff74ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4ee4ee47777757747e4e77777ee4ee7ee47e77e4777ee77757e4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4fffff777555755577775757ff77755f77755575757f757f5577fe4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4effeee5777e775e7577e777ee77575e77e77e757e77e75777e77ffef....\n    .......ffeefbbbbbbfe4ee4eefee4ee4ffeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeff....\n    .........fffbbbbbbfe4ee4eefee4ee4eeffffffffffffffffffffffffffffffffffffffffffffffffffff...\n    ...........ffbbbbbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .............ffbbbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    ...............ffbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .................ffe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    ...................ffee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .....................ff4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .......................ffefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .........................fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff....\n`);\n","circuit.ts":"const ROAD_DIRECTION_ANGLE_FACTOR = 0.31;\nconst ROAD_SLOPE_ANGLE_FACTOR = 0.25;\n\nconst DIR_STRAIGHT = 0;\nconst DIR_LEFT_1 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -1 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_2 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -2 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_3 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -3 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_4 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -4 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_5 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -5 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_1 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_2 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 2 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_3 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 3 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_4 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 4 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_5 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 5 * ANGLES_FIXED_MATH_ONE);\n\nconst SLOPE_FLAT = 0;\nconst SLOPE_UP_1 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -1 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_UP_2 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -2 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_UP_3 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -3 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_1 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 1 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_2 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 2 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_3 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 3 * ANGLES_FIXED_MATH_ONE);\n\nclass CircuitSegment {\n    constructor(\n        public direction: number,\n        public slope: number,\n        public leftObstacle: Obstacle,\n        public rightObstacle: Obstacle,\n        public centerObstacle: Obstacle,\n        public leftSideColor: number,\n        public rightSideColor: number,\n    ) {\n    }\n}\n\nconst CIRCUIT = [\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_SEMAPHORE_SIGN, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_START_SIGN, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_CHECK_SIGN, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_2, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_2, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_1, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_DINNER_HOUSE_R, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_FINISH_SING, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n];\n","textrender.ts":"enum TextAlignment {\n    Left,\n    Center,\n    Right    \n}\n\nclass TextRender {\n    private _text: string;\n    private _color: number;\n    private _outlineColor?: number;\n    private _font: image.Font;\n    private _dirty: boolean;\n    private _lastRender: Image;\n\n    constructor(\n        text: string,\n        color: number = 1,\n        outlineColor?: number,\n        font?: image.Font\n    ) {\n        this._text = text;\n        this._color = color;\n        this._outlineColor = outlineColor;\n        if (!font)\n            this._font = image.font8;\n        else\n            this._font = font;\n\n        this._dirty = true;\n    }\n\n    public setText(text: string): void {\n        this._text = text;\n        this._dirty = true;\n    }\n\n    public text(): string {\n        return this._text;\n    }\n\n    public setColor(color: number): void {\n        this._color = color;\n        this._dirty = true;\n    }\n\n    public color(): number {\n        return this._color;\n    }\n\n    public setOutlineColor(color?: number): void {\n        this._outlineColor = color;\n        this._dirty = true;\n    }\n\n    public outlineColor(): number {\n        return this._outlineColor;\n    }\n\n    public setFont(font: image.Font): void {\n        this._font = font;\n        this._dirty = true;\n    }\n\n    public font(): image.Font {\n        return this._font;\n    }\n\n    public width(): number {\n        if (this._dirty)\n            this.render();\n\n        return this._lastRender.width;\n    }\n\n    public height(): number {\n        if (this._dirty)\n            this.render();\n\n        return this._lastRender.height;\n    }\n\n    public draw(targetImg: Image, x: number, y: number, alignment: TextAlignment = TextAlignment.Left): void {\n        if (this._dirty)\n            this.render();\n\n        switch(alignment) {\n            case TextAlignment.Center:\n                targetImg.drawTransparentImage(this._lastRender, x - Math.idiv(this._lastRender.width, 2), y);\n                break;\n\n            case TextAlignment.Right:\n                targetImg.drawTransparentImage(this._lastRender, x - this._lastRender.width, y);\n                break;\n\n            default:\n                targetImg.drawTransparentImage(this._lastRender, x, y);\n                break;\n        }\n    }\n\n    private render(): void {\n        const width = this._font.charWidth * this._text.length;\n        const height = this._font.charHeight;\n\n        let textImg = image.create(width, height);\n        textImg.print(this._text, 0, 0, this._color, this._font,);\n        if (this._outlineColor)\n            textImg = this.outline(textImg);\n\n        this._lastRender = textImg;\n        this._dirty = false;\n    }\n\n    private outline(sourceImg: Image): Image {\n        const thickness = this._font.multiplier ? Math.round(this._font.multiplier) : 1;\n        const doubleThickness = thickness << 1;\n        const resultImg = image.create(sourceImg.width + doubleThickness, sourceImg.height);\n\n        const hl = 0;\n        const hc = thickness;\n        const hr = doubleThickness;\n\n        resultImg.drawImage(sourceImg, hl, 0);\n        resultImg.drawTransparentImage(sourceImg, hr, 0);\n        resultImg.drawTransparentImage(sourceImg, hl, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hr, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hl, thickness);\n        resultImg.drawTransparentImage(sourceImg, hr, thickness);\n        resultImg.drawTransparentImage(sourceImg, hc, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hc, thickness);\n\n        resultImg.replace(this._color, this._outlineColor);\n        resultImg.drawTransparentImage(sourceImg, hc, 0);\n\n        return resultImg;\n    }\n}\n","countdown.ts":"class Countdown {\n    private running: boolean;\n    private loadTime: number;\n    private endTime: number;\n\n    constructor() {\n        this.running = false;        \n    }\n\n    public load(seconds: number): void {\n        const wasRunning = this.running;\n        if (wasRunning)\n            this.stop();\n\n        this.loadTime = Math.round(seconds * 1000);\n\n        if (wasRunning)\n            this.start();\n    }\n\n    public add(seconds: number): void {\n        const wasRunning = this.running;\n        if (wasRunning)\n            this.stop();\n\n        this.loadTime += Math.round(seconds * 1000);\n\n        if (wasRunning)\n            this.start();\n    }\n\n    public isExpired(): boolean {\n        if (this.running)\n            return this.endTime < game.runtime();\n        else\n            return this.loadTime < 0;\n    }\n\n    public start(): void {\n        if (!this.running) {\n            this.endTime = game.runtime() + this.loadTime;\n            this.running = true;\n        }\n    }\n\n    public stop(): void {\n        if (this.running) {\n            this.loadTime = this.loadTime - game.runtime();\n            this.running = false;\n        }\n    }\n\n    public remainingTimeMs(): number {\n        let result: number;\n        if (this.running)\n            result = this.endTime - game.runtime();\n        else\n            result = this.loadTime;\n\n        return result < 0 ? 0 : result;\n    }\n\n    public remainingTime(): number {\n        return Math.idiv(this.remainingTimeMs(), 1000);\n    }\n}","worldrender.ts":"// --- World render configuration\nconst PERSPECTIVE_VERTICAL_CENTER = Math.round(scene.screenHeight() / 3);\nconst Z_PERSPECTIVE_FACTOR = 20;\nconst ROAD_INIT_Y = Math.round((SCREEN_HEIGHT - PERSPECTIVE_VERTICAL_CENTER) * POS_FIXED_MATH_ONE);\n\nconst STRIPE_HEIGHT = 10;\nconst STRIPE_WIDTH = Math.round(scene.screenWidth() * 1.4);\nconst STRIPES_VIEW_PORT = 12;\nconst STRIPE_HALF_HEIGHT = Math.idiv(STRIPE_HEIGHT, 2);\nconst STRIPE_HALF_WIDTH_FP = Math.round(STRIPE_WIDTH / 2 * POS_FIXED_MATH_ONE);\n\nconst ROAD_MIN_ANGLE = -89 * ANGLES_FIXED_MATH_ONE;\nconst ROAD_MAX_ANGLE = 89 * ANGLES_FIXED_MATH_ONE;\n\nenum ObstacleDirection {\n  Top,\n  Left,\n  Right\n}\n\nclass RenderObstacle {\n    public image: Image;\n    public x2d: number;\n    public y2d: number;\n    public x3dFP: number;\n    public y3dFP: number;\n    public z3dFP: number;\n    public mirror: boolean;\n    public scale: number;\n}\n\nclass WorldRender {\n    private sinTable: number[];\n\n    private drawZ: number;\n    private drawY: number;\n    private roadAngleX: number;\n    private roadAngleY: number;\n    private roadCenter: number;\n    private roadY: number;\n    private stripeToggle: boolean;\n    private backdropOffset: number;\n    private perspectiveHorizontalCenter: number;\n    private oldTravelDistance: number;\n\n    private obstaclesToRenders: RenderObstacle[];\n\n    constructor() {\n        this.sinTable = this.createSinTableFP();\n        this.backdropOffset = 0;\n    }\n\n    public calcRoadCurveInSegment(startPoint: number, lenght: number): number {\n        const firstStripeIndex = Math.idiv(startPoint, STRIPE_HEIGHT);\n        const firstStripeOffeset = startPoint % STRIPE_HEIGHT;\n        const endPoint = startPoint + lenght;\n\n        let point = startPoint;\n        let index = firstStripeIndex;\n        let curveSum = 0;\n        while (point < endPoint) {\n            const curveAngle = CIRCUIT[index].direction;\n            const offset = point == startPoint ? firstStripeOffeset : 0;\n            let deltaDist = STRIPE_HEIGHT - offset;\n            if ((point + deltaDist) > endPoint)\n                deltaDist = endPoint - point;\n            curveSum += Math.imul(deltaDist, curveAngle);\n            point += deltaDist;\n            index++;\n        }\n\n        return curveSum;\n    }\n\n    public checkCollision(x1: number, y1: number, x2: number, y2: number, zLimit: number): boolean {\n        const lastObstacleToRender = this.obstaclesToRenders.length;\n        for (let i = 0; i < lastObstacleToRender; i++) {\n            const obstacle = this.obstaclesToRenders[i];\n\n            if (Math.idiv(obstacle.z3dFP, POS_FIXED_MATH_ONE) > zLimit)\n                return false;\n\n            const obstX1 = Math.idiv(obstacle.x3dFP, POS_FIXED_MATH_ONE);\n            const obstX2 = obstX1 + obstacle.image.width;\n            const obstY2 = Math.idiv(obstacle.y3dFP, POS_FIXED_MATH_ONE);\n            const obstY1 = obstY2 - obstacle.image.height;\n\n            const doNotOverlap = x2 < obstX1 || x1 > obstX2 || y2 < obstY1 || y1 > obstY2;\n            if (!doNotOverlap)\n                return true;\n        }\n\n        return false;\n    }\n\n    public onCheckSign(travelDistance: number): boolean {\n        const firstStripeIndex = Math.idiv(travelDistance, STRIPE_HEIGHT);\n        return CIRCUIT[firstStripeIndex].centerObstacle == OBST_CHECK_SIGN\n            || CIRCUIT[firstStripeIndex + 1].centerObstacle == OBST_CHECK_SIGN;\n    }\n\n    public draw(targetImg: Image, travelDistance: number, perspectiveHorizontalCenter: number): boolean {\n        const maxTravelDistance = Math.imul(CIRCUIT.length - STRIPES_VIEW_PORT, STRIPE_HEIGHT);\n        const firstStripeIndex = Math.idiv(travelDistance, STRIPE_HEIGHT);\n        const firstStripeOffeset = travelDistance % STRIPE_HEIGHT;\n        const deltaTraveledDistace = travelDistance - this.oldTravelDistance;\n        this.oldTravelDistance = travelDistance;\n\n        let circuitEndReached = false;\n        if (travelDistance > maxTravelDistance) {\n            travelDistance = maxTravelDistance;\n            circuitEndReached = true;\n        }\n\n        this.perspectiveHorizontalCenter = perspectiveHorizontalCenter;\n\n        // Draw the steet\n        this.drawZ = 0;\n        this.drawY = SCREEN_HEIGHT;\n        this.roadAngleX = 0;\n        this.roadAngleY = 0;\n        this.roadCenter = 0;\n        this.roadY = ROAD_INIT_Y;\n        this.stripeToggle = firstStripeIndex % 2 == 0;\n        this.obstaclesToRenders = [];\n\n        for (let i = 0; i < STRIPES_VIEW_PORT; i++) {\n            const circuitIndex = firstStripeIndex + i;\n            const offset = i == 0 ? firstStripeOffeset : 0;\n            this.drawStripe(circuitIndex, i, targetImg , offset);\n            this.stripeToggle = !this.stripeToggle;\n        }\n\n        // Draw the sky\n        this.drawY--;\n        targetImg.fillRect(0, 0, SCREEN_WIDTH, this.drawY , 9);\n\n        // Draw backdrop image\n        let backdropOffset: number;\n        if (deltaTraveledDistace > 0) {\n            backdropOffset = this.backdropOffset - (((CIRCUIT[firstStripeIndex].direction) * 2) >> ANGLES_BITS);\n            if (backdropOffset < 0)\n                backdropOffset = SCREEN_WIDTH + backdropOffset;\n            else if (backdropOffset > SCREEN_WIDTH)\n                backdropOffset -= SCREEN_WIDTH;\n        } else {\n            backdropOffset = this.backdropOffset;\n        }\n\n        targetImg.drawTransparentImage(BACKDROP_IMG, backdropOffset, this.drawY - BACKDROP_IMG.height);\n        if (backdropOffset > 0)\n            targetImg.drawTransparentImage(BACKDROP_IMG, backdropOffset - BACKDROP_IMG.width, this.drawY - BACKDROP_IMG.height);\n        this.backdropOffset = backdropOffset;\n\n        // Draw ostacles\n        const lastObstacleToRender = this.obstaclesToRenders.length - 1;\n        for (let i = lastObstacleToRender; i >= 0; i--) {\n            const obstacle = this.obstaclesToRenders[i];\n            if (obstacle.image.width >= obstacle.image.height)\n                this.drawScaledH(obstacle.image, targetImg, obstacle.scale, obstacle.mirror, obstacle.x2d, obstacle.y2d);\n            else\n                this.drawScaledV(obstacle.image, targetImg, obstacle.scale, obstacle.mirror, obstacle.x2d, obstacle.y2d);\n        }\n\n        return circuitEndReached;\n    }\n\n    private drawStripe(circuitIndex: number, stripeNum: number, img: Image, startSTRIPE_HEIGHT: number): void {\n        const circuitSegment = CIRCUIT[circuitIndex];\n\n        const roadColor = this.stripeToggle ? 12 : 11;\n        const borderColor = this.stripeToggle ? 1 : 12;\n        const laneColor = 1;\n\n        for (let i = startSTRIPE_HEIGHT; i < STRIPE_HEIGHT; i++) {\n            this.roadAngleX += circuitSegment.direction;\n            this.roadAngleY += circuitSegment.slope; \n\n            if (this.roadAngleX >= 0) {\n                if (this.roadAngleX > ROAD_MAX_ANGLE)\n                    this.roadAngleX = ROAD_MAX_ANGLE;\n                this.roadCenter += this.sinTable[this.roadAngleX >> ANGLES_BITS];\n            } else {\n                if (this.roadAngleX < ROAD_MIN_ANGLE)\n                    this.roadAngleX = ROAD_MIN_ANGLE;\n                this.roadCenter -= this.sinTable[-(this.roadAngleX >> ANGLES_BITS)];\n            }\n\n            if (this.roadAngleY >= 0) {\n                if (this.roadAngleY > ROAD_MAX_ANGLE)\n                    this.roadAngleY = ROAD_MAX_ANGLE;\n                this.roadY += this.sinTable[this.roadAngleY >> ANGLES_BITS];  \n            } else {\n                if (this.roadAngleY < ROAD_MIN_ANGLE)\n                    this.roadAngleY = ROAD_MIN_ANGLE;\n                this.roadY -= this.sinTable[-(this.roadAngleY >> ANGLES_BITS)];  \n            }\n\n            // 3D coordinates\n            const x1_3d = Math.round(this.roadCenter - STRIPE_HALF_WIDTH_FP);\n            const x2_3d = Math.round(this.roadCenter + STRIPE_HALF_WIDTH_FP);\n            const y_3d = this.roadY;\n            // Swith to 2D\n            const roadLine2D = this.horizontalLine3Dto2D(x1_3d, x2_3d, y_3d, this.drawZ);\n            // Calculate line boundaries\n            const x1_borderL = roadLine2D[0];\n            const x2_borderR = roadLine2D[1];\n            const width = x2_borderR - x1_borderL;\n            const borderWidht = Math.idiv(width, 18);\n            const x1_road = x1_borderL + borderWidht;\n            const x2_road = x2_borderR - borderWidht;\n            const laneLineWidth = Math.idiv(borderWidht, 3);\n            const laneWidth = Math.idiv(width, 3);\n            const x1_lane1 = x1_borderL + laneWidth;\n            const x2_lane1 = x1_lane1 + laneLineWidth;\n            const x2_lane2 = x2_borderR - laneWidth;\n            const x1_lane2 = x2_lane2 - laneLineWidth;\n\n            // Draw obstacles\n            const leftObstacle = circuitSegment.leftObstacle;\n            const rightObstacle = circuitSegment.rightObstacle;\n            const topObstacle = circuitSegment.centerObstacle;\n            if (i == STRIPE_HALF_HEIGHT && roadLine2D[2] <= this.drawY) {\n                if (topObstacle != null) {\n                    this.drawSideObstacles(this.roadCenter, y_3d, this.drawZ, topObstacle, ObstacleDirection.Top);\n                }\n                if (leftObstacle != null) {\n                    this.drawSideObstacles(x1_3d, y_3d, this.drawZ, leftObstacle, ObstacleDirection.Left);\n                }\n                if (rightObstacle != null) {\n                    this.drawSideObstacles(x2_3d, y_3d, this.drawZ, rightObstacle, ObstacleDirection.Right);\n                }\n            }\n\n            // Draw steet\n            while (roadLine2D[2] < this.drawY) {\n                this.drawY--;\n                img.drawLine(0, this.drawY, x1_borderL, this.drawY, circuitSegment.leftSideColor);\n                img.drawLine(x2_borderR, this.drawY, SCREEN_WIDTH, this.drawY, circuitSegment.rightSideColor);\n                img.drawLine(x1_borderL, this.drawY, x1_road, this.drawY, borderColor);\n                img.drawLine(x1_road, this.drawY, x2_road, this.drawY, roadColor);\n                img.drawLine(x2_road, this.drawY, x2_borderR, this.drawY, borderColor);\n\n                // Central lane stripes\n                if (this.stripeToggle) {\n                    if (i > STRIPE_HALF_HEIGHT) {\n                        img.drawLine(x1_lane1, this.drawY, x2_lane1, this.drawY, laneColor);                    \n                        img.drawLine(x1_lane2, this.drawY, x2_lane2, this.drawY, laneColor);                    \n                    }\n                } else {\n                    if (i < STRIPE_HALF_HEIGHT) {\n                        img.drawLine(x1_lane1, this.drawY, x2_lane1, this.drawY, laneColor);                    \n                        img.drawLine(x1_lane2, this.drawY, x2_lane2, this.drawY, laneColor);                    \n                    }\n                }\n\n            }\n            this.drawZ += POS_FIXED_MATH_ONE;\n        }        \n    }\n\n    private horizontalLine3Dto2D(x1: number, x2: number, y: number, z: number): number[]  {\n        const denom = POS_FIXED_MATH_ONE + Math.idiv(z, Z_PERSPECTIVE_FACTOR);\n        return [\n            Math.idiv(x1, denom) + this.perspectiveHorizontalCenter, \n            Math.idiv(x2, denom) + this.perspectiveHorizontalCenter, \n            Math.idiv(y, denom) + PERSPECTIVE_VERTICAL_CENTER\n        ];\n    }\n\n    private drawSideObstacles(x: number, y: number, z: number, obstacle: Obstacle, direction: ObstacleDirection): void {\n        const obstacleToRender = new RenderObstacle();\n        const denom = POS_FIXED_MATH_ONE + Math.idiv(z, Z_PERSPECTIVE_FACTOR);\n\n        obstacleToRender.image = obstacle.image;\n        obstacleToRender.scale = denom;\n        obstacleToRender.mirror = direction == ObstacleDirection.Right && obstacle.reqMirror;\n        obstacleToRender.z3dFP = z;\n\n        const imageWidthFixed = Math.imul(obstacleToRender.image.width, POS_FIXED_MATH_ONE);\n        const imageHeightFixed = Math.imul(obstacleToRender.image.height, POS_FIXED_MATH_ONE);\n\n        if (direction == ObstacleDirection.Left) {\n            x += obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x - imageWidthFixed, denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        } else if (direction == ObstacleDirection.Right) {\n            x -= obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x, denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        } else if (direction == ObstacleDirection.Top) {\n            y -= obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x - Math.idiv(imageWidthFixed, 2), denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        }\n\n        this.obstaclesToRenders.push(obstacleToRender);\n    }\n\n    private drawScaledH(sourceImg: Image, targetImg: Image, scale: number, mirror: boolean, dstX: number, dstY: number) {\n        const outputBuffer = image.create(sourceImg.width, Math.idiv(Math.imul(sourceImg.height, POS_FIXED_MATH_ONE), scale))\n        const blitRowScale = Math.idiv(Math.imul(sourceImg.width, POS_FIXED_MATH_ONE), scale);\n        const xEnd = Math.imul(sourceImg.width - 1, POS_FIXED_MATH_ONE);\n        if (mirror) {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(xEnd - x, scale), 0, sourceImg, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        } else {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(x, scale), 0, sourceImg, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        }\n        \n        targetImg.drawTransparentImage(outputBuffer, dstX, dstY)\n    }\n\n    private drawScaledV(sourceImg: Image, targetImg: Image, scale: number, mirror: boolean, dstX: number, dstY: number) {\n        const maxDimension = sourceImg.height;\n        const inputBuffer = image.create(maxDimension, maxDimension);\n        inputBuffer.drawImage(sourceImg, 0, 0);\n\n        const outputBuffer = image.create(\n            Math.idiv(Math.imul(inputBuffer.width, POS_FIXED_MATH_ONE), scale), \n            Math.idiv(Math.imul(inputBuffer.height, POS_FIXED_MATH_ONE), scale));\n        const blitRowScale = Math.idiv(Math.imul(maxDimension, POS_FIXED_MATH_ONE), scale);\n        const xEnd = Math.imul(sourceImg.width - 1, POS_FIXED_MATH_ONE);\n        if (mirror) {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(xEnd - x, scale), 0, inputBuffer, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        } else {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(x, scale), 0, inputBuffer, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        }\n        \n        targetImg.drawTransparentImage(outputBuffer, dstX, dstY)\n    }\n\n    private createSinTableFP(): number[] {\n        const table = [];\n        for (let i = 0; i < 90; i++)\n            table.push(Math.round(Math.sin(Math.PI * i / 180) * 4 * POS_FIXED_MATH_ONE));\n\n        return table;\n    }\n}\n","carphysics.ts":"const CAR_MAX_SPEED = 293 * POS_FIXED_MATH_ONE;\nconst CAR_SPEED_TRAVEL_FACTOR = 2000;\nconst CAR_TURN_WEIGHT = 80 * POS_FIXED_MATH_ONE;\nconst CAR_CURVE_WEIGHT = 8;\n\nconst CAR_X_MOVE_RANGE = Math.round(STRIPE_WIDTH * 1.4) * POS_FIXED_MATH_ONE;\nconst CAR_X_MOVE_RANGE_P = Math.idiv(CAR_X_MOVE_RANGE, 2);\nconst CAR_X_MOVE_RANGE_M = -CAR_X_MOVE_RANGE_P;\n\nconst CAR_MAX_OFFROAD_SPEED = 80 * POS_FIXED_MATH_ONE;\n\nclass CarAccelerationPoint {\n    constructor(public speed: number, public acceleration: number) {        \n    }\n}\n\nconst CAR_ACCELERATION_CURVE: CarAccelerationPoint[] = [\n    new CarAccelerationPoint(0 * POS_FIXED_MATH_ONE, 35 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(50 * POS_FIXED_MATH_ONE, 32 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(100 * POS_FIXED_MATH_ONE, 27 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(150 * POS_FIXED_MATH_ONE, 22 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(200 * POS_FIXED_MATH_ONE, 15 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(250 * POS_FIXED_MATH_ONE, 10 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(270 * POS_FIXED_MATH_ONE, 5 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(280 * POS_FIXED_MATH_ONE, Math.round(3.5 * POS_FIXED_MATH_ONE)),\n    new CarAccelerationPoint(285 * POS_FIXED_MATH_ONE, Math.round(2.8 * POS_FIXED_MATH_ONE)),\n    new CarAccelerationPoint(290 * POS_FIXED_MATH_ONE, Math.round(1 * POS_FIXED_MATH_ONE)),\n];\n\nconst CAR_BRAKING_CURVE: CarAccelerationPoint[] = [\n    new CarAccelerationPoint(0 * POS_FIXED_MATH_ONE, -70 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(50 * POS_FIXED_MATH_ONE, -60 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(100 * POS_FIXED_MATH_ONE, -50 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(150 * POS_FIXED_MATH_ONE, -45 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(200 * POS_FIXED_MATH_ONE, -38 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(250 * POS_FIXED_MATH_ONE, -30 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(CAR_MAX_SPEED, -25 * POS_FIXED_MATH_ONE),\n];\n\nconst CAR_COASTING_ACCELERATION = -12 * POS_FIXED_MATH_ONE;\nconst CAR_HARD_STOP_ACCELERATION = -CAR_MAX_SPEED * 2 * POS_FIXED_MATH_ONE;\n\nclass CarPhysics {\n    private _speedFP: number;\n    private _traveledDistanceFP: number;\n    private _deltaTraveledDistanceFP: number;\n    private _lastRun: number;\n    private _carXPosFP: number;\n\n    constructor() {\n        this.clear();\n    }\n\n    public setSpeed(value: number) {\n        this._speedFP = Math.imul(value, POS_FIXED_MATH_ONE);\n    }\n\n    public speed(): number {\n        return Math.idiv(this._speedFP, POS_FIXED_MATH_ONE);\n    }\n\n    public traveledDistance(): number {\n        return Math.idiv(this._traveledDistanceFP, POS_FIXED_MATH_ONE)\n    }\n\n    public deltaTraveledDistance(): number {\n        return Math.idiv(this._deltaTraveledDistanceFP, POS_FIXED_MATH_ONE)\n    }\n\n    public setCarXPos(value: number): void {\n        this._carXPosFP = Math.imul(value, POS_FIXED_MATH_ONE);\n    }\n\n    public carXPos(): number {\n        return Math.idiv(this._carXPosFP, POS_FIXED_MATH_ONE);\n    }\n\n    public updateSpeed(accelerate: boolean, brake: boolean, turnLeft: boolean, turnRight: boolean, offRoad: boolean): void {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        if (offRoad && accelerate) {\n            if (this._speedFP > CAR_MAX_OFFROAD_SPEED) {\n                accelerate = false;\n                brake = true;\n            }\n        }\n\n        // Update the speed\n        if (brake) {\n            for (let i = CAR_BRAKING_CURVE.length - 1; i >= 0; i--) {\n                const point = CAR_BRAKING_CURVE[i];\n                if (this._speedFP >= point.speed) {\n                    this._speedFP += Math.idiv(Math.imul(point.acceleration, deltaT), 1000);\n                    break;\n                }\n            }        \n        } else if (accelerate) {\n            for (let i = CAR_ACCELERATION_CURVE.length - 1; i >= 0; i--) {\n                const point = CAR_ACCELERATION_CURVE[i];\n                if (this._speedFP >= point.speed) {\n                    this._speedFP += Math.idiv(Math.imul(point.acceleration, deltaT), 1000);\n                    break;\n                }\n            }        \n        } else {\n            this._speedFP += Math.idiv(Math.imul(CAR_COASTING_ACCELERATION, deltaT), 1000);\n        }\n\n        if (this._speedFP > CAR_MAX_SPEED) {\n            this._speedFP = CAR_MAX_SPEED;\n        } else if (this._speedFP < 0) {\n            this._speedFP = 0;\n        }\n\n        this.updateTravelDistance(deltaT);\n\n        // Update car X position when the car is running\n        let deltaX = 0;\n        if (this._speedFP > POS_FIXED_MATH_ONE) {\n            if (turnLeft && !turnRight)\n                deltaX = -CAR_TURN_WEIGHT;\n            else if (!turnLeft && turnRight)\n                deltaX = CAR_TURN_WEIGHT;\n        }\n\n        deltaX = Math.idiv(Math.imul(deltaX, deltaT), 1000);\n        this._carXPosFP = Math.constrain(this._carXPosFP + deltaX, CAR_X_MOVE_RANGE_M, CAR_X_MOVE_RANGE_P);\n    }\n\n    public applyRoadDeltaCurve(roadCurveDelta: number): void {\n        const curveDisplacement = Math.imul(roadCurveDelta, CAR_CURVE_WEIGHT);\n        this._carXPosFP = Math.constrain(this._carXPosFP - curveDisplacement, CAR_X_MOVE_RANGE_M, CAR_X_MOVE_RANGE_P);\n    }\n    \n    public hardStop(): void {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        this._speedFP += Math.idiv(Math.imul(CAR_HARD_STOP_ACCELERATION, deltaT), 1000);        \n        if (this._speedFP < 0)\n                this._speedFP = 0;\n\n        this.updateTravelDistance(deltaT);\n    }\n\n    public moveToXPos(xPos: number, speed: number) {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        const xPosFP = Math.imul(xPos, POS_FIXED_MATH_ONE);\n        const distanceToXPos = xPosFP - this._carXPosFP;\n\n        let deltaXFP = Math.idiv(Math.imul(Math.imul(speed, POS_FIXED_MATH_ONE), deltaT), 1000);\n        if (deltaXFP > Math.abs(distanceToXPos))\n            deltaXFP = distanceToXPos;\n        else if (distanceToXPos < 0)\n            deltaXFP = -deltaXFP;\n\n        let pippo = this._carXPosFP;\n        this._carXPosFP += deltaXFP;\n    }\n\n    public clear(): void {\n        this._lastRun = game.runtime();\n        this._speedFP = 0;\n        this._traveledDistanceFP = 0;\n        this._deltaTraveledDistanceFP = 0;\n        this._carXPosFP = 0;\n    }\n\n    private updateTravelDistance(deltaTime: number): void {\n        // Update traveled distance and delta traveled distance\n        const oldTraveledDistanceFP = this._traveledDistanceFP;\n        this._traveledDistanceFP += Math.idiv(Math.imul(this._speedFP, deltaTime), CAR_SPEED_TRAVEL_FACTOR);\n        this._deltaTraveledDistanceFP = this._traveledDistanceFP - oldTraveledDistanceFP;\n    }\n}","playerCarAssets.ts":"const CAR_IMG_STRAIGHT = img`\n    ..........2222222222222222222..........\n    ........22999999999999999999922........\n    ...2dd.2999eeee99999995554599992.dd2...\n    ...2ee22999eeee999999455555499922ee2...\n    .....222ff444444fffff44444544ff222.....\n    ..22222eeeeeeeeeeeeeeeeeeeeeeeee22222..\n    222222effffffffff1ffffffffffffffe222222\n    2fffffffffffffff111fffffffffffffffffff2\n    2f4441dfbbbbbbbbbb11b1bbbbbbbbbfd1444f2\n    2f22222ffffffffff1f11fffffffffff22222f2\n    2fffffffbbbbbbbbbbbb1bbbbbbbbbbfffffff2\n    222222222222244444444444442222222222222\n    422222222222245555555555542222222222224\n    442222222222244444444444442222222222444\n    f4444444411222222222222222221144444444f\n    feeeffffdff1eeeeeeeeeeeeeeedff1ffffeeef\n    fffffffffddfffffffffffffffffddfffffffff\n    ffffffff.......................ffffffff\n    .ffffff.........................ffffff.\n`;\nconst CAR_IMG_LEFT = img`\n    .............22222222222222.................\n    ...........229999999999999922...............\n    ......2dd.2999eee9999555459992.dd...........\n    ......2ee22999eee99945555549922ee22.........\n    ....2222222ff44444ff44444544f222222222......\n    ..422e2222222eeeeeeeeeeeeeeeeeee222222222...\n    .242ef222222effffffffff1ffffffffe2222222222.\n    .22e4e2fffffffffffffff111ffffffffffffffff22.\n    .2e4ef2f4441dfbbbbbbbbbb11bbbbbbbbfd1444f22.\n    .22e422f22222ffffffffff1fffffffffff22222f22.\n    .fe4222fffffffbbbbbbbbbbbbbbbbbbbbfffffff22.\n    .ff2222222222222222444444444444222222222222.\n    .fff224222222222222455555555554222222222224.\n    ..ff2f4422222222222444444444444222222222444.\n    ...f2ff44444444412222222222222222144444444f.\n    ....2ffeeeffffedf1eeeeeeeeeeeeee1f1ffffeeef.\n    .....fffffffffffdffffffffffffffffdfffffffff.\n    ......ffffffff.....................ffffffff.\n    .......ffffff.......................ffffff..\n`;\nconst CAR_IMG_RIGHT = img`\n    .................22222222222222.............\n    ...............229999999999999922...........\n    ...........dd.29999eeee99955459992.dd2......\n    .........22ee229999eeee994555549922ee2......\n    ......222222222fff444444f444454ff2222222....\n    ...222222222eeeeeeeeeeeeeeeeeee2222222e224..\n    .2222222222efffffff1fffffffffffe222222fe242.\n    .22fffffffffffffff111ffffffffffffffff2e4e22.\n    .22f4441dfbbbbbbbbbb11bbbbbbbbfd1444f2fe4e2.\n    .22f22222ffffffffff1fffffffffff22222f224e22.\n    .22fffffffbbbbbbbbbbbbbbbbbbbbfffffff2224ef.\n    .2222222222224444444444442222222222222222ff.\n    .422222222222455555555554222222222222422fff.\n    .4442222222224444444444442222222222244f2ff..\n    .f44444444122222222222222221444444444ff2f...\n    .feeeffff1f1eeeeeeeeeeeeee1fdeffffeeeff2....\n    .fffffffffdffffffffffffffffdfffffffffff.....\n    .ffffffff.....................ffffffff......\n    ..ffffff.......................ffffff.......\n`;\nconst CAR_IMG_SIDE_L = img`\n    ............................f2.....eee55.........................\n    ...........................f2.....ffeee55........................\n    ..........................f2......fdddee45.......................\n    .........................f2........ddeee45.......................\n    ........................f2........886688a5.......................\n    .......................f2ff......dd88668a......eeeeeeeeee........\n    ..................222.f2ffff..dddddd8888a..222222222222222e2.....\n    .............22222222222222222222222222222222222222e2e2e2e2e2efff\n    .......2222222222222222222222222222eeee22fffff2222222222222222f44\n    ...222222222222222222222222eeeeeeee222222222222222222422422422f22\n    .222222222222222222222eeeee222eeeeeeeee2fffff22222222222222222fff\n    2222222222bbbbb222222eeeeeeeee2222222222222222222222bbbbb2222222.\n    522222222bbfffbb2222222222222eeeeeeeee2fffff2222222bbfffbb2222222\n    12e2e2e2bbfdddfbb222eeeeeeeee2222222222222222e2e2ebbfdddfbbe2e222\n    2e2e2e2ebfd1d1dfb222222222222222222222222222e2e2e2bfd1d1dfb2e422.\n    .fffffffbfddfddfbfffffffffffffffffffffffffffffffffbfddfddfbf44f..\n    ..ffffffbfd1d1dfbfff........ffffffffffffffffffffffbfd1d1dfbf.....\n    ..........fdddf.....................................fdddf........\n    ...........fff.......................................fff.........\n`;\nconst CAR_IMG_LEFT_2 = img`\n    .................22222222222222...........................\n    ...............22999999999999992..........................\n    ..............299ee9999555459992dd...........2222222......\n    .............299ffeee99d555499992ee......22222eeeeeeee222.\n    .........dd.2f99ddeee99d444449992222222222eeeeeeeeffffff22\n    .........ee2ff9ddd2222222222222422222eeeeeff1fffffbf144f22\n    ........2222222222222222222222422222effffff1111bbbff222f22\n    ....22222222222222222222222222422fffffffffbbb1ffffbfffff22\n    .2222222222222eeeeee2fff222222422f441fbbbbff1fbbbb22222222\n    22222222222eeee222222222222222422f222fffffbbbb444222222222\n    5222ff222222222eeeee2fff222222422fffffbbbb444455422222224.\n    122fddf2222eeeee22222222222222422222222222455544421444444.\n    22fd11df22222222eeee2fff22ff224422222222224444222211fffee.\n    .ffddddffffff222222222222fddf22442222222222222eeeefdfffff.\n    ..fd11dfffffffffffff2222fd11df2f4444444122eeeefffffffff...\n    ...fddfff....ffffffffffffddddf2feeffffed1effff...fffff....\n    ....fff.............fffffd11df2fffffffffdff...............\n    .........................fddffff..........................\n    ..........................ffff............................\n`;\n\n\nconst CAR_IMG_EXPLOSION_0 = img`\n    . . . . 1 1 1 1 . . . .\n    . . 1 1 1 1 1 1 1 1 . .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . . 1 1 1 1 1 1 1 1 . .\n    . . . . 1 1 1 1 . . . .\n`;\nconst CAR_IMG_EXPLOSION_1 = img`\n    ..........111111..........\n    .......111111111111.......\n    ......11111111111111......\n    ....111111111111111111....\n    ...11111111111111111111...\n    ...11111111111111111111...\n    ..1111111111111111111111..\n    .111111111111111111111111.\n    .111111111111111111111111.\n    .111111111111111111111111.\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    .111111111111111111111111.\n    .111111111111111111111111.\n    .111111111111111111111111.\n    ..1111111111111111111111..\n    ...11111111111111111111...\n    ...11111111111111111111...\n    ....111111111111111111....\n    ......11111111111111......\n    .......111111111111.......\n    ..........111111..........\n`;\nconst CAR_IMG_EXPLOSION_2 = img`\n    ........44444................\n    ......4444444444444444.......\n    .....4444444444444444444.....\n    ....444444444444444444444....\n    ....4444444444444444444444...\n    ...444444411441144441414444..\n    ..44444144111111144444144444.\n    ..44441441114441144444444444.\n    .4444414411111414144441414444\n    .4444444441114114144411441444\n    44444444444411411114444444444\n    44444444444144411111444444444\n    44444444441441141411144444444\n    44144444444411441411444444444\n    4111444444111141144444444444.\n    4114444444111111444144444444.\n    .11444444411411444114444444..\n    .44414444441441441144444144..\n    ..4111444444111111144444144..\n    ..441444444411144114444114...\n    ..444444444441444444444114...\n    ..444444444444444444444144...\n    ...44444444444444111444444...\n    ...44444444444444441444444...\n    ....444444444444441444444....\n    .....44444444444444444444....\n    .......44444444444444444.....\n    ..............444444444......\n    ................44444........\n`;\nconst CAR_IMG_EXPLOSION_3 = img`\n    ...............4444.............\n    ...........44444444444..........\n    .......444444444444444444.......\n    ......444444444444444444444.....\n    .....44444441144111114444444....\n    .....444444111444414444444444...\n    ....44444441114444444111144444..\n    ...444444444444444444111144444..\n    ...4444444444444444444444444444.\n    ..44444411444444444444444444444.\n    ..4444441144444444..444444444444\n    ..44444444444444.4..444444441444\n    ..4444414444444.....4.4444411144\n    .444444144444.44....4.4444411444\n    .444444144444..........444444444\n    .44444444444...........444444444\n    .44444114444.4......4.4444444444\n    .444441144444......4.44444414444\n    ..444444444444.4..44444444114444\n    ..44441144444444.444444441114444\n    ..4444114444444..444444441444444\n    ..444444444444444444444444444444\n    ..44444444444444444444444444444.\n    ..44444441444444444444444444444.\n    ..4444444444441111114444444444..\n    ...444444444111111114444444444..\n    ....4444444411114114444444444...\n    .....44444441144444444444444....\n    ......444444444444444444444.....\n    .......4444444444444444444......\n    .........44444444444444.........\n    .............4444444............\n`;\nconst CAR_IMG_EXPLOSION_4 = img`\n    ..44...........4144.....4.......\n    .4444.4....44444444444.4444444..\n    44444..444444444444444.44444414.\n    .444....4444.4444..444.444444444\n    ..44....444...444444444444.4444.\n    ..4....444....44444.44414...444.\n    .444..4444....44.....4444....44.\n    .4444444.44..44.......4444..44..\n    ..44444...44444.......4444...44.\n    ..4444....44444........444....4.\n    ..4441...444444........4444..444\n    ..4441....4441..........444...44\n    ..4444....4444..........4444..44\n    .4444....4411..........44414...4\n    .44444..44444.........4444444.44\n    .44444444444.........4444.444444\n    ...44444444.........44.4...44444\n    ..444..144.................44444\n    ..444.4444..........4.....44..44\n    ..44..44.44..........4....44.444\n    ..14.44...444.........4..444.414\n    ..4444.....44444........4444.144\n    ..444......444444........4.4.44.\n    ..444.......444444444...444.444.\n    ..44.........4444..444.4444.44..\n    .........4....44....444.444444..\n    4444.444444..44.....44...4444...\n    4414444444444444...4444.4444....\n    44444.444444114444444444444.....\n    ..444..4444444441444444444......\n    ...4.....44444444444444.........\n    .............4444444............\n`;\n\nconst CAR_EXPLOSION_FRAMES = [\n    CAR_IMG_EXPLOSION_0, CAR_IMG_EXPLOSION_1, CAR_IMG_EXPLOSION_2,\n    CAR_IMG_EXPLOSION_3, CAR_IMG_EXPLOSION_4\n];\n","explosionanimation.ts":"class ExplosionAnimation {\n    public singleExplosionDurationMs: number;\n    public numFires: number;\n    public minStartDelay: number;\n    public maxStartDelay: number;\n\n    private running: boolean;\n    private animationStartTime: number;\n    private animationEndTime: number;\n    private frameInterval: number;\n    private fireStartTime: number[];\n    private fireXOffset: number[];\n    private fireYOffset: number[];\n\n    constructor(public offsetWidth: number, public offsetHeight: number, public durationMs: number, public frames: Image[]) {\n        this.singleExplosionDurationMs = 400;\n        this.numFires = 4;\n        this.minStartDelay = 100;\n        this.maxStartDelay = 500;\n        this.running = false;\n        this.frames = frames;\n    }\n\n    public isDone(): boolean {\n        return !this.running;\n    }\n\n    public begin(): void {\n        this.fireStartTime = [];\n        // First fire always start immediately\n        this.fireStartTime.push(0);\n        // The other fires have little delays\n        for (let i = 1; i < this.numFires; i++) {\n            this.fireStartTime.push(randint(this.minStartDelay, this.maxStartDelay));\n        }\n        \n        const xOffsetPlus = this.offsetWidth >> 1;\n        const xOffsetMinus = -xOffsetPlus;\n        const yOffsetPlus = this.offsetHeight >> 1;\n        const yOffsetMinus = -yOffsetPlus;\n        this.fireXOffset = [];\n        this.fireYOffset = [];\n\n        for (let i = 0; i < this.numFires; i++) {\n            this.fireXOffset.push(randint(xOffsetMinus, xOffsetPlus));\n            this.fireYOffset.push(randint(yOffsetMinus, yOffsetPlus));\n        }\n\n        this.frameInterval = Math.idiv(this.singleExplosionDurationMs, this.frames.length);\n        this.animationStartTime = game.runtime();\n        this.animationEndTime = this.animationStartTime + this.durationMs;\n        this.running = true;\n    }\n\n    public draw(targetImg: Image, x: number, y: number): void {\n        if (!this.running)\n            return;\n\n        const now = game.runtime();\n        const deltaSinceStart = now - this.animationStartTime;\n\n        if (now >= this.animationEndTime) {\n            this.running = false;\n            return;\n        }\n\n        for (let i = 0; i < this.numFires; i++) {\n            const startTime = this.fireStartTime[i];\n            if (deltaSinceStart >= startTime) {\n                const frameIndex = Math.idiv(deltaSinceStart - startTime, this.frameInterval);\n                if (frameIndex < this.frames.length) {\n                    const frameImg = this.frames[frameIndex];\n                    const drawX = x - (frameImg.width >> 1) + this.fireXOffset[i];\n                    const drawY = y - (frameImg.height >> 1) + this.fireYOffset[i];\n                    targetImg.drawTransparentImage(frameImg, drawX, drawY);\n                } else {\n                    const xOffsetPlus = this.offsetWidth >> 1;\n                    const xOffsetMinus = -xOffsetPlus;\n                    const yOffsetPlus = this.offsetHeight >> 1;\n                    const yOffsetMinus = -yOffsetPlus;\n\n                    this.fireStartTime[i] = deltaSinceStart + randint(this.minStartDelay, this.maxStartDelay);\n                    this.fireXOffset[i] = randint(xOffsetMinus, xOffsetPlus);\n                    this.fireYOffset[i] = randint(yOffsetMinus, yOffsetPlus);\n                }\n            }\n        }\n    }\n}\n","main.py":"CAR_Y_POS = SCREEN_HEIGHT - (CAR_IMG_STRAIGHT.height >> 1) - 6\nBACKDROP_IMG = img(\"\"\"\n    ................................................................................................................................................................\n    .........................................................................6666b..................................................................................\n    ...............................................................6766....6677666b6................................................................................\n    .............................................................6676666..6777666b6b6...............................................................................\n    ...............776786.......................................b67676666677666966b6b...............................................................................\n    ............77777787886b...................................66767666667766696966b6b..............................................................................\n    ...........777776766b6b6b..................66b6b.........666b66666667769696969666666............................................................................\n    ..........77676766766b6b6b................6666b6b6.....666666666666666966696966666666...........................................................................\n    .........7667676769696b6b6b6.............6666b6b6b6b..66b666666666666966b66669666666666.........................................................................\n    .......767766b69696969666b6b6...........666666b6b6b6..6666666666669696966b6666969666666666..........................................................666b6b6.....\n    .....6667696b6b69696966666b6b6b......6666776666b6b6b66666666666969696966b6b66666696666e6e6b66......................................................76766b6b6b...\n    ...6666969666b6669696966666666666..666667767666666b6b66666666696969666666b6b66666696666e666b666666666..........................................7667676666b6b6b..\n    66666696966666b66666969666666666666666667666666666666b666b466969696666666666b666666666666666b6b6b6666666666666............666666666.........677767666e6666b6b6b6\n    666969666666666666666669666666666d666667666666666d6666b66466969666666666646666666666666666666b6b6b6b66666466666666.....6666666b4666666..66666666666646e666666b66\n    6666666666d666666666666666666666666646666666666666666666666666666666666666666666666666664666666666b666666666666646666666666b46666666b466666666666666666666666666\n    6d66666666666666646666666d666b6666b666b66b6b66b666b66666b66b6b6b66b6666b6666b66b6b6b6b6b6b66b666b6666b66b666b6b6b6b6b6b6b666666b6666666666b6b6b66b666b666b666b66\n    \"\"\")\nEXPLOSION_MELODY_1 = music.Melody(\"~11 !60,150 !100,50 !80,100 !60,150 !100,50 !80,100 !60,150 !100,250 !80,150 !60,350 !100,150 !80,150 @0,0,255,200 !60,150\")\nEXPLOSION_MELODY_2 = music.Melody(\"~13 !80,50 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 @0,0,255,200 !80,100\")\nEXPLOSION_MELODY_3 = music.Melody(\"~5 !80,2000\")\ninfo.set_score(0)\ninfo.show_score(False)\ncountdown = Countdown()\ncountdown.load(60)\nrunning = False\nisOver = False\nendReached = False\ncrashed = False\nshowCar = False\ntimeExtended = False\nworldRender = WorldRender()\ncarPhysics = CarPhysics()\nexplosionAnimation = ExplosionAnimation(40, 10, 2000, CAR_EXPLOSION_FRAMES)\nmelodyPlayer1 = music.MelodyPlayer(EXPLOSION_MELODY_1)\nmelodyPlayer2 = music.MelodyPlayer(EXPLOSION_MELODY_2)\nmelodyPlayer3 = music.MelodyPlayer(EXPLOSION_MELODY_3)\ndoubledFont = image.scaled_font(image.font8, 2)\nspeedTextLabel = TextRender(\"SPEED\", 1, 3)\nspeedTextValue = TextRender(str(carPhysics.speed()), 1, 3, doubledFont)\ncountDownLabel = TextRender(\"TIME\", 1, 3)\ncountDownValue = TextRender(str(countdown.remaining_time()), 1, 3, doubledFont)\nscoreTextLabel = TextRender(\"SCORE\", 1, 3)\nscoreTextValue = TextRender(str(info.score()), 1, 3, doubledFont)\n\ndef on_on_paint():\n    global crashed, endReached, timeExtended, CAR_VIEWPORT\n    if isOver or endReached:\n        return\n    if running:\n        if crashed:\n            # Quickly stop the car after a crash\n            if not explosionAnimation.is_done():\n                carPhysics.hard_stop()\n            else:\n                # Move the car back on road center\n                # when the explosion animation is done\n                carPhysics.move_to_xpos(0, 40)\n                pippo = carPhysics.car_xpos()\n                if carPhysics.car_xpos() == 0:\n                    crashed = False\n        else:\n            offRoad = abs(Math.imul(carPhysics.car_xpos(), POS_FIXED_MATH_ONE)) > STRIPE_HALF_WIDTH_FP\n            carPhysics.update_speed(controller.A.is_pressed(),\n                controller.B.is_pressed(),\n                controller.left.is_pressed(),\n                controller.right.is_pressed(),\n                offRoad)\n            deltaDistance = carPhysics.delta_traveled_distance()\n            oldDistance = carPhysics.traveled_distance() - deltaDistance\n            roadCurveDelta = worldRender.calc_road_curve_in_segment(oldDistance, deltaDistance)\n            carPhysics.apply_road_delta_curve(roadCurveDelta)\n    else:\n        carPhysics.clear()\n    # Get player car horizontal position and set camera center\n    carXPos = carPhysics.car_xpos()\n    if carXPos >= 0:\n        if carXPos > CAR_VIEWPORT:\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT - carXPos\n            carXPos2D = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT\n        else:\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH\n            carXPos2D = SCREEN_HALF_WIDTH + carXPos\n    else:\n        if carXPos < (-CAR_VIEWPORT):\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT - carXPos\n            carXPos2D = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT\n        else:\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH\n            carXPos2D = SCREEN_HALF_WIDTH + carXPos\n    # Draw the world\n    backgroundImg = scene.background_image()\n    traveledDistance = carPhysics.traveled_distance()\n    endReached = worldRender.draw(backgroundImg, traveledDistance, perspectiveHorizontalCenter)\n    if endReached:\n        carPhysics.set_speed(0)\n    # Draw the car\n    if carPhysics.speed() > 1:\n        # Car turn animation    \n        if controller.left.is_pressed():\n            carFrame = CAR_IMG_LEFT\n        elif controller.right.is_pressed():\n            carFrame = CAR_IMG_RIGHT\n        else:\n            carFrame = CAR_IMG_STRAIGHT\n    else:\n        carFrame = CAR_IMG_STRAIGHT\n    carDrawX = carXPos2D - (carFrame.width >> 1)\n    carDrawY = CAR_Y_POS - (carFrame.height >> 1)\n    if showCar:\n        backgroundImg.draw_transparent_image(carFrame, carDrawX, carDrawY)\n    # Draw car explosion animation\n    if not explosionAnimation.is_done():\n        explosionAnimation.draw(backgroundImg, carXPos2D, CAR_Y_POS)\n    # Draw HUD\n    speedTextValue.set_text(str(carPhysics.speed()))\n    countDownValue.set_text(str(countdown.remaining_time()))\n    scoreTextValue.set_text(str(info.score()))\n    speedTextLabel.draw(backgroundImg, 1, 1)\n    speedTextValue.draw(backgroundImg, 0, speedTextLabel.height() + 2)\n    countDownLabel.draw(backgroundImg, SCREEN_HALF_WIDTH, 1, TextAlignment.CENTER)\n    countDownValue.draw(backgroundImg,\n        SCREEN_HALF_WIDTH,\n        countDownLabel.height() + 2,\n        TextAlignment.CENTER)\n    scoreTextLabel.draw(backgroundImg, SCREEN_WIDTH - 2, 1, TextAlignment.RIGHT)\n    scoreTextValue.draw(backgroundImg,\n        SCREEN_WIDTH - 1,\n        scoreTextLabel.height() + 2,\n        TextAlignment.RIGHT)\n    if not crashed and showCar:\n        # Check if car is outside the road\n        if Math.imul(abs(carXPos) + (carFrame.width >> 1), POS_FIXED_MATH_ONE) > STRIPE_HALF_WIDTH_FP:\n            # Check for crash against obstacles\n            colX1 = carXPos - (carFrame.width >> 1)\n            colX2 = colX1 + carFrame.width\n            colY2 = Math.idiv(ROAD_INIT_Y, POS_FIXED_MATH_ONE) - (SCREEN_HEIGHT - CAR_Y_POS + (carFrame.height >> 1))\n            colY1 = colY2 - carFrame.height\n            if worldRender.check_collision(colX1, colY1, colX2, colY2, STRIPE_HEIGHT >> 1):\n                crashed = True\n                \n                def on_run_in_parallel():\n                    melodyPlayer1.play(170)\n                control.run_in_parallel(on_run_in_parallel)\n                \n                \n                def on_run_in_parallel2():\n                    melodyPlayer2.play(170)\n                control.run_in_parallel(on_run_in_parallel2)\n                \n                \n                def on_run_in_parallel3():\n                    melodyPlayer3.play(90)\n                control.run_in_parallel(on_run_in_parallel3)\n                \n                explosionAnimation.begin()\n    # Extend time on check sign\n    if not timeExtended and worldRender.on_check_sign(traveledDistance):\n        timeExtended = True\n        countdown.add(30)\n        \n        def on_run_in_parallel4():\n            music.play_melody(\"B5:2 R:1 B5:2 R:1 B5:2\", 160)\n        control.run_in_parallel(on_run_in_parallel4)\n        \ngame.on_paint(on_on_paint)\n\ndef beginSequence():\n    global showCar\n    # Show car entering the scene\n    carSprite = sprites.create(CAR_IMG_SIDE_L)\n    carSprite.x = 200\n    carSprite.y = CAR_Y_POS\n    carSprite.vx = -100\n    while carSprite.x > SCREEN_HALF_WIDTH:\n        pause(10)\n    carSprite.vx = 0\n    carSprite.x = SCREEN_HALF_WIDTH\n    carSprite.set_image(CAR_IMG_LEFT_2)\n    carSprite.x = SCREEN_HALF_WIDTH\n    pause(100)\n    carSprite.set_image(CAR_IMG_LEFT)\n    carSprite.x = SCREEN_HALF_WIDTH\n    pause(100)\n    carSprite.set_image(CAR_IMG_STRAIGHT)\n    carSprite.x = SCREEN_HALF_WIDTH\n    showCar = True\n    pause(100)\n    carSprite.destroy()\n    # Start countdown\n    music.set_volume(255)\n    music.set_tempo(60)\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_1\n    music.play_melody(\"C5:1 R:4\", 60)\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_2\n    music.play_melody(\"C5:1 R:4\", 60)\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_GREEN\n    \n    def on_run_in_parallel5():\n        music.play_melody(\"A5:4\", 60)\n    control.run_in_parallel(on_run_in_parallel5)\n    \nbeginSequence()\ncountdown.start()\nrunning = True\n\ndef on_update_interval():\n    global isOver\n    if not isOver:\n        info.change_score_by(Math.idiv(carPhysics.speed(), 20))\n        info.show_score(False)\n        # Time over game end\n        if countdown.is_expired():\n            isOver = True\n            game.over()\n        # Circuit end reached. Game won\n        if endReached:\n            isOver = True\n            game.over(True, effects.confetti)\ngame.on_update_interval(200, on_update_interval)\n","pxt.json":"{\n    \"name\": \"Outrun\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"mathconst.ts\",\n        \"obstacles.ts\",\n        \"circuit.ts\",\n        \"textrender.ts\",\n        \"countdown.ts\",\n        \"worldrender.ts\",\n        \"carphysics.ts\",\n        \"playerCarAssets.ts\",\n        \"explosionanimation.ts\",\n        \"main.py\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v1.2.6\",\n        \"tag\": \"v1.2.6\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/7f343e1ba30a4c31de6b7b14d288d34b2741b2f4\",\n        \"target\": \"1.2.16\",\n        \"pxt\": \"6.2.21\",\n        \"targetId\": \"arcade\"\n    },\n    \"supportedTargets\": [\n        \"arcade\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1744741773602,"editorVersion":"2.0.48","text":{"main.ts":"const CAR_Y_POS = SCREEN_HEIGHT - (CAR_IMG_STRAIGHT.height >> 1) - 6;\nconst BACKDROP_IMG = img`\n    ................................................................................................................................................................\n    .........................................................................6666b..................................................................................\n    ...............................................................6766....6677666b6................................................................................\n    .............................................................6676666..6777666b6b6...............................................................................\n    ...............776786.......................................b67676666677666966b6b...............................................................................\n    ............77777787886b...................................66767666667766696966b6b..............................................................................\n    ...........777776766b6b6b..................66b6b.........666b66666667769696969666666............................................................................\n    ..........77676766766b6b6b................6666b6b6.....666666666666666966696966666666...........................................................................\n    .........7667676769696b6b6b6.............6666b6b6b6b..66b666666666666966b66669666666666.........................................................................\n    .......767766b69696969666b6b6...........666666b6b6b6..6666666666669696966b6666969666666666..........................................................666b6b6.....\n    .....6667696b6b69696966666b6b6b......6666776666b6b6b66666666666969696966b6b66666696666e6e6b66......................................................76766b6b6b...\n    ...6666969666b6669696966666666666..666667767666666b6b66666666696969666666b6b66666696666e666b666666666..........................................7667676666b6b6b..\n    66666696966666b66666969666666666666666667666666666666b666b466969696666666666b666666666666666b6b6b6666666666666............666666666.........677767666e6666b6b6b6\n    666969666666666666666669666666666d666667666666666d6666b66466969666666666646666666666666666666b6b6b6b66666466666666.....6666666b4666666..66666666666646e666666b66\n    6666666666d666666666666666666666666646666666666666666666666666666666666666666666666666664666666666b666666666666646666666666b46666666b466666666666666666666666666\n    6d66666666666666646666666d666b6666b666b66b6b66b666b66666b66b6b6b66b6666b6666b66b6b6b6b6b6b66b666b6666b66b666b6b6b6b6b6b6b666666b6666666666b6b6b66b666b666b666b66\n`\nconst EXPLOSION_MELODY_1 = new music.Melody(\"~11 !60,150 !100,50 !80,100 !60,150 !100,50 !80,100 !60,150 !100,250 !80,150 !60,350 !100,150 !80,150 @0,0,255,200 !60,150\");\nconst EXPLOSION_MELODY_2 = new music.Melody(\"~13 !80,50 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 @0,0,255,200 !80,100\");\nconst EXPLOSION_MELODY_3 = new music.Melody(\"~5 !80,2000\");\n\ninfo.setScore(0);\ninfo.showScore(false);\nconst countdown = new Countdown();\ncountdown.load(90);\n\nlet running = false;\nlet isOver = false;\nlet endReached = false;\nlet crashed = false;\nlet showCar = false;\nlet timeExtended = false;\n\nconst worldRender = new WorldRender();\nconst carPhysics = new CarPhysics();\nconst explosionAnimation = new ExplosionAnimation(40, 10, 2000, CAR_EXPLOSION_FRAMES);\nconst melodyPlayer1 = new music.MelodyPlayer(EXPLOSION_MELODY_1);\nconst melodyPlayer2 = new music.MelodyPlayer(EXPLOSION_MELODY_2);\nconst melodyPlayer3 = new music.MelodyPlayer(EXPLOSION_MELODY_3);\n\nconst doubledFont = image.scaledFont(image.font8, 2);\nconst speedTextLabel = new TextRender(\"SPEED\", 1, 3);\nconst speedTextValue = new TextRender(carPhysics.speed().toString(), 1, 3, doubledFont);\nconst countDownLabel = new TextRender(\"TIME\", 1, 3);\nconst countDownValue = new TextRender(countdown.remainingTime().toString(), 1, 3, doubledFont);\nconst scoreTextLabel = new TextRender(\"SCORE\", 1, 3);\nconst scoreTextValue = new TextRender(info.score().toString(), 1, 3, doubledFont);\n\ngame.onPaint(function() {\n    if (isOver || endReached)\n        return;\n\n    if (running) {\n        if (crashed) {\n            if (!explosionAnimation.isDone())\n                // Quickly stop the car after a crash\n                carPhysics.hardStop();\n            else {\n                // Move the car back on road center\n                // when the explosion animation is done\n                carPhysics.moveToXPos(0, 40);\n                const pippo = carPhysics.carXPos();\n                if (carPhysics.carXPos() == 0)\n                    crashed = false;\n            }\n        } else {\n            const offRoad = Math.abs(Math.imul(carPhysics.carXPos(), POS_FIXED_MATH_ONE)) > STRIPE_HALF_WIDTH_FP;\n            carPhysics.updateSpeed(\n                controller.A.isPressed(), \n                controller.B.isPressed(),\n                controller.left.isPressed(),\n                controller.right.isPressed(),\n                offRoad);\n\n            const deltaDistance = carPhysics.deltaTraveledDistance();\n            const oldDistance = carPhysics.traveledDistance() - deltaDistance;\n            const roadCurveDelta = worldRender.calcRoadCurveInSegment(oldDistance, deltaDistance);\n            carPhysics.applyRoadDeltaCurve(roadCurveDelta);\n        }\n    } else\n        carPhysics.clear();        \n\n    // Get player car horizontal position and set camera center\n    const carXPos = carPhysics.carXPos();\n    let carXPos2D: number;\n    let perspectiveHorizontalCenter: number;\n    if (carXPos >= 0) {\n        if (carXPos > CAR_VIEWPORT) {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT - carXPos;\n            carXPos2D = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT\n        } else {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH;\n            carXPos2D = SCREEN_HALF_WIDTH + carXPos;\n        }\n    } else {\n        if (carXPos < (-CAR_VIEWPORT)) {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT - carXPos;\n            carXPos2D = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT;\n        } else {\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH;\n            carXPos2D =  SCREEN_HALF_WIDTH + carXPos;\n        }\n    }\n\n    // Draw the world\n    const backgroundImg = scene.backgroundImage();\n    const traveledDistance = carPhysics.traveledDistance();\n    endReached = worldRender.draw(backgroundImg, traveledDistance , perspectiveHorizontalCenter);\n\n    if (endReached) {\n        carPhysics.setSpeed(0);\n    }\n\n    // Draw the car\n    let carFrame: Image;\n    if (carPhysics.speed() > 1) {\n        // Car turn animation    \n        if (controller.left.isPressed())\n            carFrame = CAR_IMG_LEFT;\n        else if (controller.right.isPressed())\n            carFrame = CAR_IMG_RIGHT;\n        else\n            carFrame = CAR_IMG_STRAIGHT;\n    } else {\n        carFrame = CAR_IMG_STRAIGHT;\n    }\n    const carDrawX = carXPos2D - (carFrame.width >> 1);\n    const carDrawY = CAR_Y_POS - (carFrame.height >> 1);\n    if (showCar) \n        backgroundImg.drawTransparentImage(carFrame, carDrawX, carDrawY);\n\n    // Draw car explosion animation\n    if (!explosionAnimation.isDone()) {\n        explosionAnimation.draw(backgroundImg, carXPos2D, CAR_Y_POS);\n    }\n\n    // Draw HUD\n    speedTextValue.setText(carPhysics.speed().toString());\n    countDownValue.setText(countdown.remainingTime().toString());\n    scoreTextValue.setText(info.score().toString());\n    speedTextLabel.draw(backgroundImg, 1, 1);\n    speedTextValue.draw(backgroundImg, 0, speedTextLabel.height() + 2);\n    countDownLabel.draw(backgroundImg, SCREEN_HALF_WIDTH, 1, TextAlignment.Center);\n    countDownValue.draw(backgroundImg, SCREEN_HALF_WIDTH, countDownLabel.height() + 2, TextAlignment.Center);\n    scoreTextLabel.draw(backgroundImg, SCREEN_WIDTH - 2, 1, TextAlignment.Right)\n    scoreTextValue.draw(backgroundImg, SCREEN_WIDTH - 1, scoreTextLabel.height() + 2, TextAlignment.Right);\n\n    if (!crashed && showCar) {\n        // Check if car is outside the road\n        if (Math.imul(Math.abs(carXPos) + (carFrame.width >> 1), POS_FIXED_MATH_ONE) > STRIPE_HALF_WIDTH_FP) {\n            // Check for crash against obstacles\n            const colX1 = carXPos - (carFrame.width >> 1);\n            const colX2 = colX1 + carFrame.width;\n            const colY2 = Math.idiv(ROAD_INIT_Y, POS_FIXED_MATH_ONE) - (SCREEN_HEIGHT - CAR_Y_POS + (carFrame.height >> 1));\n            const colY1 = colY2 - carFrame.height;\n            if (worldRender.checkCollision(colX1, colY1, colX2, colY2, STRIPE_HEIGHT >> 1)) \n            {\n                crashed = true;\n                control.runInParallel(function() {\n                    melodyPlayer1.play(170);\n                });\n                control.runInParallel(function() {\n                    melodyPlayer2.play(170);\n                });\n                control.runInParallel(function() {\n                    melodyPlayer3.play(90);\n                });\n                explosionAnimation.begin();  \n            }\n        }\n    }\n\n    // Extend time on check sign\n    if (!timeExtended && worldRender.onCheckSign(traveledDistance)) {\n        timeExtended = true;\n        countdown.add(30);\n        control.runInParallel(function() {\n            music.playMelody(\"B5:2 R:1 B5:2 R:1 B5:2\", 160);            \n        })\n    }\n});\n\nfunction beginSequence(): void {\n    // Show car entering the scene\n    let carSprite = sprites.create(CAR_IMG_SIDE_L);\n    carSprite.x = 200;\n    carSprite.y = CAR_Y_POS;\n    carSprite.vx = -100;\n    while (carSprite.x > SCREEN_HALF_WIDTH)\n        pause(10);\n    carSprite.vx = 0;\n    carSprite.x = SCREEN_HALF_WIDTH;\n\n    carSprite.setImage(CAR_IMG_LEFT_2);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    pause(100);\n    carSprite.setImage(CAR_IMG_LEFT);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    pause(100);\n    carSprite.setImage(CAR_IMG_STRAIGHT);\n    carSprite.x = SCREEN_HALF_WIDTH;\n    showCar = true;\n    pause(100);\n    carSprite.destroy();    \n    \n    // Start countdown\n    music.setVolume(255);\n    music.setTempo(60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_1;\n    music.playMelody(\"C5:1 R:4\", 60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_2;\n    music.playMelody(\"C5:1 R:4\", 60);\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_GREEN;\n    control.runInParallel(function() {\n        music.playMelody(\"A5:4\", 60);        \n    });\n}\n\nbeginSequence();\ncountdown.start();\nrunning = true;\n\ngame.onUpdateInterval(200, function() {\n    if (!isOver) {\n        info.changeScoreBy(Math.idiv(carPhysics.speed(), 20));\n        info.showScore(false);\n\n        // Time over game end\n        if (countdown.isExpired()) {    \n            isOver = true;\n            game.over();            \n        }\n\n        // Circuit end reached. Game won\n        if (endReached) {        \n            isOver = true;\n            game.over(true, effects.confetti);\n        }\n    }\n});\n","README.md":" \n\n\n> Open this page at [https://cdarius.github.io/makecode-outrun/](https://cdarius.github.io/makecode-outrun/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/cdarius/makecode-outrun** and import\n\n## Edit this project ![Build status badge](https://github.com/cdarius/makecode-outrun/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/cdarius/makecode-outrun** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/cdarius/makecode-outrun/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/arcade\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","mathconst.ts":"// --- Fixed point math configuration\nconst ANGLES_BITS = 4;\nconst ANGLES_FIXED_MATH_ONE = Math.pow(2, ANGLES_BITS);\nconst POS_BITS = 7;\nconst POS_FIXED_MATH_ONE = Math.pow(2, POS_BITS);\n// --- End fixed point configuration\n\nconst SCREEN_WIDTH = scene.screenWidth();\nconst SCREEN_HEIGHT = scene.screenHeight();\nconst SCREEN_HALF_WIDTH = Math.idiv(SCREEN_WIDTH, 2);\nconst SCREEN_HALF_HEIGHT = Math.idiv(SCREEN_HEIGHT, 2);\n\n// --- Car configuration\nconst CAR_VIEWPORT = Math.idiv(scene.screenWidth(), 7);\n// end car configuration\n\nconst SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT = SCREEN_HALF_WIDTH + CAR_VIEWPORT;\nconst SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT = SCREEN_HALF_WIDTH - CAR_VIEWPORT;","obstacles.ts":"class Obstacle {\n    public offset: number;\n    public reqMirror: boolean;\n    public image: Image;\n\n    constructor(offset: number, reqMirror: boolean, image: Image) {\n        this.offset = offset;\n        this.reqMirror = reqMirror;\n        this.image = image;\n    }\n}\n\nconst OBST_IMG_SEMAPHORE_OFF = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_RED_1 = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611222221166688\n    8866112212222116688\n    8866112122222116688\n    8866112222222116688\n    8866112222222116688\n    8866112222222116688\n    8866611222221166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_RED_2 = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611222221166688\n    8866112212222116688\n    8866112122222116688\n    8866112222222116688\n    8866112222222116688\n    8866112222222116688\n    8866611222221166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\nconst OBST_IMG_SEMAPHORE_GREEN = img`\n    .....888888888.....\n    ...8888888888888...\n    ..888866666668888..\n    .88866666666666888.\n    .88666666666666688.\n    8886666111116666888\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611ddddd1166688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    886611ddddddd116688\n    8866611ddddd1166688\n    8866661111111666688\n    8866666111116666688\n    8866666666666666688\n    8866666666666666688\n    8866666111116666688\n    8866661111111666688\n    8866611777771166688\n    8866117717777116688\n    8866117177777116688\n    8866117777777116688\n    8866117777777116688\n    8866117777777116688\n    8866611777771166688\n    8866661111111666688\n    8886666111116666888\n    .88666666666666688.\n    .88866666666666888.\n    ..888866666668888..\n    ...8888888888888...\n    .....888888888.....\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    .......8b888.......\n    ......8b88888......\n    .....8b8888888.....\n    ....8b888888888....\n    ...8b88..88.8888...\n    ..8b88...88..8888..\n    .8b88....88...8888.\n    8b88......88...8888\n`;\n\nconst OBST_SEMAPHORE_SIGN = new Obstacle(35 * POS_FIXED_MATH_ONE, false, OBST_IMG_SEMAPHORE_OFF);\n\nconst OBST_START_SIGN = new Obstacle(70 * POS_FIXED_MATH_ONE, false, img`\n    ..111111111111.................................................................................................................................................................................................111111111111111..\n    .1111111111111111111111111111111111111111.....................................................................................................................................1111111111111111111111111111111111111111111111111.\n    111111111111111111111111111111111111111111111111111111111111111111111..............................................................................11111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111dddddddddddddddddddd11111111111111111111111111111111111111111111111111.........................................111111111111111111111111111111111111111111111111dddddddddddddddddddddddddd111111111111111111111\n    111111111111111111111111ff111111111ff1ddddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddd11111ff111111111ff11111111111111111111111111111\n    111111111111111111111ffff1f1111111f1ffff1111111111ddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddd11ffff1f1111111f1ffff11111111111111111111111111\n    1111111111111111111fff1ff1f1111111f1ff1fff1111111111111111111111111fffffffffdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffffffffffffff1111111111111111111fff1ff1f1111111f1ff1fff111111111111111111111111\n    11111111111111111ffff11f1fff11111fff1f11ffff111111111111111111111fff2222222fffddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd111111f2222222222222f11111111111111111ffff11f1fff11111fff1f11ffff1111111111111111111111\n    111111111111111fff1ff1ff1f1f11111f1f1ff1ff1fff111111111111111111ff2222222222ff11fffffffffffffffdddddddddddddddddddddddddddfffffffffffffff111111f2222222222222f111111111111111fff1ff1ff1f1f11111f1f1ff1ff1fff11111111111111111111\n    111111111111111ff11111ff1f11f111f11f1ff11111fff1111111111111111ff22222222222f111f2222222222222f1111111fffffffffffff1111111f2222222222222fff1111f2222222222222f111111111111111ff11111ff1f11f111f11f1ff11111fff1111111111111111111\n    111111111111111fffff11f11ffff111ffff11f11fffff11111111111111111f222222fffff2f111f2222222222222f111111ff22222222222ff111111f222222222222222ff111f2222222222222f111111111111111fffff11f11ffff111ffff11f11fffff11111111111111111111\n    111111111111111f11fffff111ffff1ffff111fffff11f11111111111111111f222222f111fff111f2222222222222f111111f2222222222222f111111f222222fffff22222ff11f2222222222222f111111111111111f11fffff111ffff1ffff111fffff11f11111111111111111111\n    1111111111111111f1f11ffff1ffff1ffff1ffff11f1f111111111111111111f222222ff111f1111f2222222222222f111111f2222222222222f111111f222222f111ff22222f11f2222222222222f1111111111111111f1f11ffff1ffff1ffff1ffff11f1f111111111111111111111\n    11111111111dddddfff11f11fff11fff11fff11f11fff111111111111111111ff222222fff111111f2222222222222f11111ff2222222222222ff11111f222222f1111f22222f11ffff222222fffff1111111111111111fff11f11fff11fff11fff11f11fffddddd1111111111111111\n    11111111111ddddddf11ffffdddddfffdd111ffff11f11111111111111111111ff2222222fff1111f2222222222222f11111f222222fff222222f11111f222222f111ff2222ff11111f222222f111111111111111111111f11ffff1ddddfffdddddffff11fdddddd1111111111111111\n    111111111111dddddfffffdddddddfdfdddddddfffffdddd11111111111111111fff2222222ff111ffff222222fffff11111f222222f1f222222f11111f222222fffff22222f111111f222222f111111111111111111111fffffdddddddfdfdddddddfffffddddd11111111111111111\n    111111111111111dddffdddddddddfdfdddddddddffddddddddddddddddddddddddffff22222ff11111f222222f11111111ff222222f1f222222f11111f222222222222222ff111111f222222fddddddddddddddddddddddffdddddddddfdfdddddddddffd1111111111111111111111\n    1111111111111111111dddddddddfdddfdddddddddddddddddddddddddddddddfdddddff22222fdddddf222222f11111111f222222ff1ff22222ff1111f222222222222222fdddddddf222222fddddddddddddddddddddddddddddddddfdddfdddddddddd11111111111111111111111\n    111111111111111111111111111dfdddfddddddddddddddddddddddddddddddfffddddff22222fdddddf222222fddddddddf222222fdddf222222fddddf222222ffff22222ffddddddf222222fddddddddddddddddddddddddddddddddfdddfddddd1111111111111111111111111111\n    111111111111111111111111111f11111f1111111111dddddddddddddddddddf2ffffff222222fdddddf222222fdddddddff222222fdddf222222fddddf222222fddff22222fddddddf222222fdddddddddddddddddddddddddddddddfdddddf11111111111111111111111111111111\n    111111111111111111111111111f11111f1111111111111ddddddddddddddddf222222222222ffdddddf222222fdddddddf2222222fffff222222fddddf222222fdddf22222ffdddddf222222fdddddddddddddddddddddddddddddddfdd111f11111111111111111111111111111111\n    11111111111111111111111111f1111111f1111111111111111dddddddddddff22222222222ffddddddf222222fdddddddf222222222222222222ffdddf222222fdddf222222fdddddf222222fddddddddddddddddddddddddddddd1f1111111f1111111111111111111111111111111\n    11111111111111111111111111f1111111f1111111111111111111ddddddddffff2222222fffdddddddf222222fddddddff2222222222222222222fdddf222222fdddff22222fdddddf222222fdddddddddddddddddddddddd111111f1111111f1111111111111111111111111111111\n    1111111111111111111111111f111111111f11111111111111111111111111111fffffffffdddddddddf222222fddddddf22222222222222222222fdddf222222fddddf22222ffddddffffffffdddddddddddddddd1111111111111f111111111f111111111111111111111111111111\n    1111111111111111111111111f111111111f1111111111111111111111111111111111111ddddddddddf222222fddddddf222222fffffffff22222ffddf222222fddddf222222fddddd111111111111111111111111111111111111f111111111f111111111111111111111111111111\n    .1111111111111111111111111111111111111111111111111111111111111111111111111111111111ffffffffdddddff22222ffdddddddf222222fddffffffffddd1ffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111.\n    ..1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111ffffffffddddddddffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..\n    ................1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..................\n    ...................................1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111......................................\n    ..........................................................11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............................................................\n    .................................................................................1111111111111111111111111111111111111111111111111111111111111..................................................................................\n`);\n\nconst OBST_FINISH_SING  = new Obstacle(70 * POS_FIXED_MATH_ONE, false, img`\n    ..111111111111.................................................................................................................................................................................................111111111111111..\n    .1111111111111111111111111111111111111111.....................................................................................................................................1111111111111111111111111111111111111111111111111.\n    111111111dd1111111111111111111111111111111111111111111111111111111111..............................................................................1111111111111111111111111111111111111111111111111111111111111111dd11111111111\n    1111111111dddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111...........................................11111111111111111111111111111111111111111111111ddddddddddddddddddddddddddddddddddd111111111111\n    11111111111111111111111111111111111111ddddddddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111ddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111111111fffffffdddddddddddddddddddddddddddddddddddddddddddddddddddddffffffff1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111111ffff22222fffffddddddddddddddddddddddddddddddddddddddddddddddd11f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111111ff222222222222ff11111111fffffffdddddddddddddfffffffffffff1111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111f22222222222222ff111111fff22222fff1111111111ff22222222222ff111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111ff22222222222222f111111ff222222222ff111111111f2222222222222f111111f222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1111ddddd11111111111111111111111111111111111111111111111111111111111f22222222222222ff11111ff22222222222ff11111111f2222222222222f111111f222222f11111111111111111111111111111111111111111111111111111111111111111111111ddd11111111\n    11111111dddddddddddd11111111111111111111111111111111111111111111111ff222222fffffffff11111ff2222222222222ff111111ff2222222222222ff11111f222222f11111111111111111111111111111111111111111111111111111111ddddddddddddddd11111111111\n    11111111111ddddddddddddddddddddddd111111111111111111111111111111111f222222ff1111111111111f222222222222222f111111f222222fff222222f11111f222222f11111111111111111111111111111111111111111ddddddddddddddddddddddddddd11111111111111\n    111111111111ddddddddddddddddddddddddddddddddddddddd1111111111111111f222222f1111111111111ff222222fff222222ff11111f222222f1f222222f11111f222222f11111111111111111111111111111111ddddddddddddddddddddddddddddddddd11111111111111111\n    1111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddf222222fdddffffffff11f222222ff1ff222222f1111ff222222f1f222222f11111f222222f111111111ddddddddddddddddddddddddddddddddddddddddddddddddddd1111111111111111111111\n    1111111111111111111ddddddddddddddddddddddddddddddddddddddddddddddddf222222ffddf222222fddf222222fdddf222222f1dddf222222ffdff22222ffddddf222222fddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111\n    111111111111111111111111111ddddddddddddddddddddddddddddddddddddddddff222222ffff222222fddf222222fdddf222222fddddf222222fdddf222222fddddf222222fdddddddddddddddddddddddddddddddddddddddddddddddddddddd1111111111111111111111111111\n    111111111111111111111111111111111111111111ddddddddddddddddddddddddddf2222222222222222fddf222222ffdff222222fdddff222222fdddf222222fddddf222222fdddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111dddddddddddddddddddff222222222222222fddff222222fff222222ffdddf2222222fffff222222fddddf222222ffffffffddddddddddddddddddddddddddddddddddddddd111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111dddddddddddddff22222222222222fdddf222222222222222fddddf222222222222222222ffdddf2222222222222fdddddddddddddddddddddddddddddddddd11111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111dddddddddddff2222222222222fdddff2222222222222ffdddff2222222222222222222fdddf2222222222222fdddddddddddddddddddddddddddd11111111111111111111111111111111111111111111111\n    1111111111111111111111111111111111111111111111111111111111111111111ddddffff2222222222fddddff22222222222ffddddf22222222222222222222fdddf2222222222222fddddddddddddddddddddddd1111111111111111111111111111111111111111111111111111\n    11111111111111111111111111111111111111111111111111111111111111111111ddddddffffffffffffdddddff222222222ffdddddf222222fffffffff22222ffddfffffffffffffff111111111111111111111111111111111111111111111111111111111111111111111111111\n    .111111111111111111111111111111111111111111111111111111111111111111111111111111111111dddddddfff22222fffdddddff22222ffdddddddf222222f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.\n    ..1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111dfffffffdddddddffffffff11111111ffffffff111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..\n    ...........1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............\n    .......................111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111..............................\n    .............................................11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...................................................\n    .........................................................................11111111111111111111111111111111111111111111111111111111111111111111111111.............................................................................\n`);\n\nconst OBST_CHECK_SIGN = new Obstacle(70 * POS_FIXED_MATH_ONE, true, img`\n    ........................................................................bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb........................................................................\n    .......................................................................bddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddb.......................................................................\n    ......................................................................bdd666666666666666666666666666666666666666666666666666666666666666666666666666666ddb......................................................................\n    ......................................................................bd66666666666666666666666666666666666666666666666666666666666666666666666666666666db......................................................................\n    ......................................................................bd66666665555555666555555666555555665555555555556666666555555566655555566655555566db......................................................................\n    ......................................................................bd66666555555555566555555666555555665555555555556666655555555556655555566655555566db......................................................................\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbd66665555555555566555555666555555665555555555556666555555555556655555566555555566dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddbd66655555555555566555555666555555665555555555556665555555555556655555566555555666dbdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n    bd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbbd66655555555555666555555666555555665555556666666665555555555566655555565555555666dbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....dbdbbd.....db.....db\n    .bd....db....db.db.bd....db....db.db.bd....db....db.db.bd....db....db.bd66555555566666666555555555555555665555555555666655555556666666655555555555556666db.bd....db....db.db.bd....db....db.db.bd....db....db.db.bd....db....db.\n    ..bd...db...db..db..bd...db...db..db..bd...db...db..db..bd...db...db..bd66555555666666666555555555555555665555555555666655555566666666655555555555566666db..bd...db...db..db..bd...db...db..db..bd...db...db..db..bd...db...db..\n    ...bd..db..db...db...bd..db..db...db...bd..db..db...db...bd..db..db...bd66555555666666666555555555555555665555555555666655555566666666655555555555556666db...bd..db..db...db...bd..db..db...db...bd..db..db...db...bd..db..db...\n    ....bd.db.db....db....bd.db.db....db....bd.db.db....db....bd.db.db....bd66555555566666666555555555555555665555555555666655555556666666655555555555555666db....bd.db.db....db....bd.db.db....db....bd.db.db....db....bd.db.db....\n    .....bddbdb.....db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....bd66655555555555666555555666555555665555556666666665555555555566655555565555555666db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....db.....bddbdb.....\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbd66655555555555566555555666555555665555555555556665555555555556655555566555555566dbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddbd66665555555555566555555666555555665555555555556666555555555556655555566655555566dbdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n    ......................................................................bd66666555555555566555555666555555665555555555556666655555555556655555566655555566db......................................................................\n    ......................................................................bd66666665555555666555555666555555665555555555556666666555555566655555566655555566db......................................................................\n    ......................................................................bd66666666666666666666666666666666666666666666666666666666666666666666666666666666db......................................................................\n    ......................................................................bdd666666666666666666666666666666666666666666666666666666666666666666666666666666ddb......................................................................\n    .......................................................................bddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddb.......................................................................\n    ........................................................................bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb........................................................................\n`);\n\nconst OBST_TRELLIS = new Obstacle(0, false, img`\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n    bd.....dbd\n    bdbbbbbbbd\n    bdddddddbd\n    bd.....bbd\n    bd....bdbd\n    bd...bd.bd\n    bd..bd..bd\n    bd.bd...bd\n    bdbd....bd\n    bdd.....bd\n    bdbbbbbbbd\n    bdddddddbd\n    bdb.....bd\n    bddb....bd\n    bd.db...bd\n    bd..db..bd\n    bd...db.bd\n    bd....dbbd\n`);\n\nconst OBST_TURN_RIGHT_SIGN_L = new Obstacle(20 * POS_FIXED_MATH_ONE, true, img`\n        .888888888888888888.\n        88666666666666666688\n        86611111111111111668\n        86111111111211111168\n        86111111111221111168\n        86111111111222111168\n        86111111222222211168\n        86111122222222221168\n        86111222222222222168\n        86111222222222221168\n        86112222222222211168\n        86112222211222111168\n        86112222111221111168\n        86112222111211111168\n        86112222111111111168\n        86112222111111111168\n        86112222111111111168\n        86612222111111111668\n        88666666666666666688\n        .888888888888888888.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        .222222222222222222.\n        22111111111111111122\n        2111F1F111F11F1F1112\n        211F11F11F1F1F1F1F12\n        2111F1FF11F111F11112\n        22111111111111111122\n        .222222222222222222.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n`);\n\nconst OBST_TURN_CHICANE_SIGN_L = new Obstacle(20 * POS_FIXED_MATH_ONE, true, img`\n        .888888888888888888.\n        88666666666666666688\n        86611122222222111668\n        86111122222222111168\n        86111111222222111168\n        86111112222222111168\n        86111122222222111168\n        86111222222122111168\n        86112222221122111168\n        86112222222111111168\n        86111222222211111168\n        86111122222221111168\n        86111112222222111168\n        86111111222222211168\n        86111111122222211168\n        86111111222222211168\n        86111112222222111168\n        86611122222221111668\n        88666666666666666688\n        .888888888888888888.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        .222222222222222222.\n        22111111111111111122\n        2111F1F111F11F1F1112\n        211F11F11F1F1F1F1F12\n        2111F1FF11F111F11112\n        22111111111111111122\n        .222222222222222222.\n        ...666..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n        ...6D6..............\n`);\n\nconst OBST_BUSH = new Obstacle(0, false, img`\n    ...............cc...............\n    ............66c56ccc............\n    ............67c55c6c............\n    ...........66c7557cc6...........\n    ..........6c77577777cc..........\n    .........66cc677776c666.........\n    ........67575676c7c6777c........\n    ........666556666c666ccc........\n    ......6676c7777666667cc66c......\n    .....67776776776676677c777c.....\n    .....666666cc776c77cccc66cc.....\n    ....6677777767676c7c6666676c....\n    ...66c766777767776666666777cc...\n    .6667766777777777666667766cc666.\n    .677776776677777776676c77667776.\n    6667677cc67777767776776ccc6666cc\n    66c67776c777677c677667766777666c\n    .c677766666cc676c766ccc6667776c.\n    .666cc67766666666cc6666676666cc.\n    .cccc667766776666666666c67766...\n    ...c67776677676666666766c67cc...\n    ...66677c777677666666776cccc6...\n    ......cc677c67776776c7ccc6......\n    ........6cc67776c7776ccc........\n    ...........66776c77cc...........\n    .............6666c6.............\n    .............feeeeff............\n    ...........feeeeeeeeff..........\n    ............effeeef.............\n    ...............fef..............\n    ...............fef..............\n    ................f...............\n`);\n\nconst OBST_PILLAR = new Obstacle(0, false, img`\n    ........fffffffffffffff........\n    ....fffffdddedfdddddfddffff....\n    .ffffdddfddeedfddeddfdddefdfff.\n    fdddfdddfdeeddfdeeddfdeeefddddf\n    fdddfddfddeeddfddedfddeeefddeef\n    fedfdddfdddeddfdeddfddeeefdddef\n    fedfddddfffffffffffffffddfdddef\n    fddfffffbbbbbbfbbbbfbbbffffdddf\n    ffffbbbfddddddfddddfdddbbfbffff\n    fddfddddfdfffffffffffdddfddbbbf\n    fdddfdffffddddfddddd7ffffdddddf\n    feedff7fddddddfdddd7ddfddffdddf\n    .fff777fddddddfdddddddf7dddfff.\n    ...f77dfdddddddfddddddfd7ddf...\n    ...f777fddffffdfddffffdd7ddf...\n    ...f7ddfffefddffffddfdfffddf...\n    ...fdffddeefddddddddfddddfff...\n    ...ffdddeeefdddddddefdddddff...\n    ...fddddeedfdddddddefdddddff...\n    ...fdddddedfddfffdeefffdddff...\n    ...fddddddffffdfdfffeedfff.f...\n    ...fddffffdddddfddddeefdddff...\n    ...fffdf7ddddddfdddd7efddddf...\n    ...fdddf7ddddddfdddd7dfddddf...\n    ...fdddf7ddddddffff77dfddddf...\n    ...fddd7fffffffddd7ffffffddf...\n    ...fdfffdddfdddddd7fdddddfff...\n    ...ffd7ddddfddddd77fddddddff...\n    ...fd77ddddfddedd7dfddddddff...\n    ...fd7ddddfddeeedddfdddddfdf...\n    ...fd7ddddfdddeeefffffffdfdf...\n    ...fdddddffffffffdddddfdffff...\n    ...ffffffdddddfdddddddfddddf...\n    ...fddfdddddddfdddddddfddddf...\n    ...fddfdddddddfddddddddfffff...\n    ...fddffffffddfdddffffff7fdf...\n    ...fddddfddffffffffdfddd7fdf...\n    ...fddddfddfeedddddefdd77fdf...\n    ...fffddfddfeedddeedfdd7dfff...\n    ...fddfffddfedddddddfdd7ffdf...\n    ...fddfddfffddfdddddff7fdddf...\n    ...fddfdddddffdfffffd7fddddf...\n    ...ffdfdddddd7dfddddd7fddddf...\n    ...fdfffdddd7ddfddddddfddfff...\n    ...fddddffffdddffddddffffdef...\n    ...fdddfedddfffddffffddeeeef...\n    ...fdddfeeddfdddddfddddefeef...\n    .fffdddfeeddfddeedfdddddfdefff.\n    fdddffdfddddfdddedfddddddffdddf\n    fdddddffffddfddeddfddffffdddddf\n    fdddddfdddfffffffffffddddfddddf\n    ffffdfddddfdddfddfdddffddddffff\n    fdddffffdfddddfddfdddddffffdd7f\n    fdddfeedfffffffffffffffdfddfd7f\n    feddfeeefddd7fddddefdddefddf7df\n    feddf7edfdd77fdddeefdddefdefddf\n    feefddddfdd7fdddeeedfdeddfedfdf\n    .fffdddfddddfddddeddfdeddfefff.\n    ....ffffddddfdddddddfddffff....\n    ........fffffffffffffff........\n`);\n\nconst OBST_PILLAR_TOP = new Obstacle(58 * POS_FIXED_MATH_ONE, false, img`\n    .ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffff..ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..fffffffffffff..ffffffffffff..fffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff.\n    fbbbbbdddbbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbbbbbbbbffbbbbbbbbbbffccffbbbbbdddbbbbbbffbbbdddbbbbbbffccbbbbdbbbbddbffbbbbbbbbbbdbbffbbbbbbbbbbbbbffbbbbbbbbbffccffbbbbbdddbbbbdffbbbbdddbbbbbbffbbbbbbbbbbbbffbbbbbdddbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbbf\n    fbdddbbbbbddbbbffddddbbbbbddbbbffdbbbbbbdbbbbffbbddddddddbfffbbddddddddbcccffddbdbbbbbddbbbffddbbbbbddbbbffcdddddbdddbbbbffbbddddddddbbbffbbddddddddbfdffbbbbdddbbbcccffddbbbbbbbbbbbffdddbbbbbddbbbffbbddddddddbfffddbdbbbbbddbbffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbbf\n    fddddddddddedddffddddddddddedddffeeedddddddddffdddddddddedfffdddddddddedffbffddddddddddedddffddddddddedddffdddddeedddddddffdddddddddedddffdddddddddedfbffddddddddbdffbffdddddbbddddddffdddddddddedddffdddddddddedfffddddddddddeddffddddddddddedddffeeedddddddddffddddddddddedddf\n    fdddffdddddddddffdddffdddddddddffdeeddddddeddffdddddddedddfffdddddddeddddfdffdddffdddddddddffdffdddddddddffddddddeedddddeffdddddddeddeddffdddddddedddffffdddddddddddfdffdddddfdddddddffddffdddddddddffdddddddedddfffdddffddddddddffdddffdddddddddffdeeddddddeddffdddffdddddddddf\n    fffffddddddddddffdddfddddddddddffdddddeeddeddffdddddedededdffdddddedededffdffdddfddddddddddffffddddddddddffddddddeeefdddeffdddddededeeddffdddddedededdfffddddeeeeddffdffddddffddeddddfffffddddddddddffdddddedededdffdddfdddddddddffdddfddddddddddffdddddeeddeddffffffddddddddddf\n    fffffffffeeddddffdeefffffeeddddffd4ddddddddddffdeedddeedeefffdeedddeedeedddffdddfffffeeddddffffffffeeddddffddeeddfffdddffffdeedddeededddffdeedddeedeefdffeeddfddddedddffdddddffddddddfffffffffeeddddffdeedddeedeefffdddfffffeedddffdeefffffeeddddffd4ddddddddddffffffffffeeddddf\n    fffdfffddedddddffddefffddedddddffdddeddddddddffdddddeeeedefffdddddeeeedddddffdddfffddedddddffdfffddedddddffdddedd4ffff4d4ffdddddeeeeddddffdddddeeeedefdffeeddffdddddddffdddddeeeeddddfffdfffddedddddffdddddeeeedefffdddfffddeddddffddefffddedddddffdddeddddddddffffdfffddedddddf\n    fffffddeeedddddffddefddeeedddddff4fffefffddddffdddeeeededfeffdddeeeededddddfffddfddeeedddddffffddeeedddddffdddeeddffffdddffdddeeeededdddffdddeeeededfeeffdddddffddddddfffdddeedffddddfffffddeeedddddffdddeeeededfefffddfddeeeddddffddefddeeedddddff4fffefffddddffffffddeeedddddf\n    ffffddeeeeffdddffdddddeeeeffdddffdddeeeeeedddffdddedddeddeeffdddedddedddddbfffddddeeeeffdddfffddeeeeffdddffdddddddfffffddffdddedddedddddffdddedddeddeedffddddddfdddddbfffddeeeddfddeeffffddeeeeffdddffdddedddeddeefffddddeeeeffddffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffdddf\n    feffddeeeddffddffdddddeeeddffddffddd4eeedeeddfffdddddddddfdfffddddddddddddbffffdddeeeddffddfffddeeeddffddff.dddddddf4fffdfffdddddddddeddfffdddddddddfddffdddfddffddddbffffdeeeeeffdddffffddeeeddffddfffdddddddddfdffffdddeeeddffdffdddddeeeddffddffddd4eeedeeddffeffddeeeddffddf\n    feeffdddddddddfffffdfdddddddddfffddddddddddddfffffdddddddfdfffffddddddddbbbffffffdddddddddfffffdddddddddffffffdd4ddddfffffffffddddddddddfffffdddddddfdefffddddddfddbbbfffffddddddddeeffeffdddddddddffffffdddddddfdffffffdddddddddffffdfdddddddddfffddddddddddddffeeffdddddddddff\n    fdfffddddddffffffffffddddddffffffddddddddddddffffffffddddddffffffffddddbbbbffffffddddddffffffffddddddffffffffffdddddddfffffffffffdddddddffffffffdddddddffdddddddffbbbbffffffffdddddddfffffddddddffffffffffffddddddffffffddddddfffffffffddddddffffffddddddddddddffdfffddddddfffff\n    cffffffffffffffccffffffffffffffccffffffffffffffffffffffffffccffffffffffffffffffffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffccfffffffffffffcfffffffffffffcffffffffffffffccffffffffffffffccffffffffffffccffffffffffffff.\n    cffffffffffffffccfffffffffffffccfffffffffffffccffffffffffffffccffffffffffffffccffffffffffffccfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffccffffffffffffffccffffffffffffccffffffffffffccffffffffffffffccffffffffffffffffffffffffffffccfffffffffffff.\n    fccbbbbdbbbbddbffbbbbbbbbbbdbbffbbbbbbbbbbbbbffbbbbbbbbbfcfccffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbdddbbbbbbfbbbbdddbbbbbbffbbbbbdddbbbbbbffbbbbbdbbbdbbffbbbbbbbbbbbbffbbbbbbbbbbffccffbbbbbdddbbbbbffcbbbbdbbbbddbffbbbbbbbbbbdbbf\n    fcdddddbdddbbbbffbbddddddddbbbffbbddddddddbfdffbbbbdddbbbbcccffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbffddddbbbbbddbbbffdbbbbbbdbbbbffbdddbbbbbddbbbfdddbbbbbddbbbffddddbbbbbddbbbffdbbbbbbdbbbbffbbddddddddbfffbbddddddddbcccffddbdbbbbbddbbffdddddbdddbbbbffbbddddddddbbbf\n    fdddddeedddddddffdddddddddedddffdddddddddedfbffddddddddbddffbffddddddddddedddffeeedddddddddffddddddddddeddffddddddddddedddffeeedddddddddffddddddddddedddfdddddddddedddffddddddddddedddffeeedddddddddffdddddddddedfffdddddddddedffbffddddddddddeddffddddeedddddddffdddddddddedddf\n    fddddddeedddddeffdddddddeddeddffdddddddedddffffddddddddddddfdffdddffdddddddddffdeeddddddeddffdddffddddddddffdddffdddddddddffdeeddddddeddffdddffdddddddddfddffdddddddddffdddffdddddddddffdeeddddddeddffdddddddedddfffdddddddeddddfdffdddffddddddddffdddddeedddddeffdddddddeddeddf\n    fddddddeeefdddeffdddddededeeddffdddddedededdfffddddeeeedddffdffdddfddddddddddffdddddeeddeddffffffdddddddddffdddfddddddddddffdddddeeddeddffffffddddddddddffffddddddddddffdddfddddddddddffdddddeeddeddffdddddedededdffdddddedededffdffdddfdddddddddffdddddeeefdddeffdddddededeeddf\n    fddeeddfffdddffffdeedddeededddffdeedddeedeefdffeeddfddddeddddffdeefffffeeddddffd4ddddddddddffffffffffeedddffdeefffffeeddddffd4ddddddddddffffffffffeeddddffffffffeeddddffdeefffffeeddddffd4ddddddddddffdeedddeedeefffdeedddeedeedddffdddfffffeedddffdeeddfffdddffffdeedddeededddf\n    fdddedd4ffff4d4ffdddddeeeeddddffdddddeeeedefdffeeddffddddddddffddefffddedddddffdddeddddddddffffdfffddeddddffddefffddedddddffdddeddddddddffffdfffddedddddffdfffddedddddffddefffddedddddffdddeddddddddffdddddeeeedefffdddddeeeedddddffdddfffddeddddffddedd4ffff4d4ffdddddeeeeddddf\n    fdddeeddffffdddffdddeeeededdddffdddeeeededfeeffdddddffdddddddffddefddeeedddddff4fffefffddddffffffddeeeddddffddefddeeedddddff4fffefffddddffffffddeeedddddffffddeeedddddffddefddeeedddddff4fffefffddddffdddeeeededfeffdddeeeededddddfffddfddeeeddddffddeeddffffdddffdddeeeededdddf\n    fdddddddfffffddffdddedddedddddffdddedddeddeedffddddddfddddddbffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffddffdddddeeeeffdddffdddeeeeeedddfffffddeeeeffdddfffddeeeeffdddffdddddeeeeffdddffdddeeeeeedddffdddedddeddeeffdddedddedddddbfffddddeeeeffddffddddddfffffddffdddedddedddddf\n    f.dddddddf4fffdfffdddddddddeddfffdddddddddfddffdddfddffdddddbffdddddeeeddffddffddd4eeedeeddffeffddeeeddffdffdddddeeeddffddffddd4eeedeeddffeffddeeeddffddfffddeeeddffddffdddddeeeddffddffddd4eeedeeddfffdddddddddfdfffddddddddddddbffffdddeeeddffdffdddddddf4fffdfffdddddddddeddf\n    ffffdd4ddddfffffffffddddddddddfffffdddddddfdefffddddddfdddbbbffffdfdddddddddfffddddddddddddffeeffdddddddddffffdfdddddddddfffddddddddddddffeeffdddddddddffeffdddddddddfffffdfdddddddddfffddddddddddddfffffdddddddfdfffffddddddddbbbffffffdddddddddffffdd4ddddfffffffffddddddddddf\n    fffffdddddddfffffffffffdddddddffffffffdddddddffdddddddffbbbbbffffffddddddffffffddddddddddddffdfffddddddfffffffffddddddffffffddddddddddddffdfffddddddffffffffddddddffffffffffddddddffffffddddddddddddffffffffddddddffffffffddddbbbbffffffddddddffffffffdddddddfffffffffffdddddddf\n    ..fffffffffffff..fffffffffffff..fffffffffffff..ffffffffffffff..ffffffffffffff..ffffffffffff..ffffffffffffff.ffffffffffffff..ffffffffffff..ffffffffffffffffffffffffffff..ffffffffffffff..ffffffffffffffffffffffffff..fffffffffffffffffffffffffffffccfffffffffffffccfffffffffffffc\n`);\n\nconst OBST_SURF_BLUE_L = new Obstacle(-100 * POS_FIXED_MATH_ONE, true, img`\n        .........................CC..\n        ........................FFC..\n        ........................FF...\n        ........................FF...\n        .......................FEE...\n        ......................FFEE...\n        ......................FFEE...\n        .....................FFE8E...\n        .....................FE88E...\n        .....................FE88E...\n        ....................FE888E...\n        ....................F888EE55.\n        ...................FF8888E...\n        ..................FFE8E88EE..\n        ..................FFE8888EE..\n        .................FFE886688E..\n        .................FE8866888E..\n        .................FE8E68888E..\n        ................FE8E888888E..\n        ...............FF8888888EEE5.\n        ...............FF9EEEEEEEEE..\n        ...............FF5EEEE8888E..\n        ..............FFE988888888EE.\n        .............FFE99888EEE888E.\n        .............FFE998E8888888E.\n        .............FE99988E888E88E.\n        .............FE9198E88888E8E.\n        ............FE9119888EEEEEEE5\n        ...........FF9999EEEEEEEEEEE.\n        ...........FF9EEEEEEE888888E.\n        ..........FFEEEEE98888E8888E.\n        ..........FFE9999988888888E..\n        ..........FE99991988888888E..\n        ..........FE999199888E8E88E..\n        .........FE99199998888888E...\n        .........FE9199999EEEEEEEE55.\n        ........FF99999EEEEEEEEEEE...\n        ........FF999EEEEEE888888E...\n        .......FFEEEE8811D1DD8888E...\n        .......FFEE88D1D111D1888EEF..\n        ......FFEE8DDDDDDFFF88EEEFF..\n        ......FFE81DDDFFF1D88E88F....\n        ......FE1FFD11DDD8888F88.....\n        ......FEF11DDDDD8888F888.....\n        .....FED11DD1DD88CFF888E.....\n        .....FEDD1D1DD888CC8888E.....\n        .....FFFDFDF8EEEEEF888E......\n        .....FFFFFF8FEEEEEEF8E.......\n        ....FFFFFFFF8EFEEEEF8E.......\n        ....FFFFEF888FEEEEEF8........\n        ....FEEF88FF88FEEEE8E........\n        ....FEFF88EFFFFEEEFE.........\n        ...FEFF8888EEFFFEFE..........\n        ..FFEE888888EE888FEEE........\n        ..FEEE8E88EE...CCCC..........\n        ..FEEE888E.....8CEC8.........\n        ..FEEEEEE.....CC8888.........\n        .FEEEE.......CCECECC.........\n        .FEEE.......CCE..CC..........\n        CFE.........CE...CC..........\n        CF..........CE...CC..........\n        FFF..........C...CCC.........\n        FF1111111....C....CC.........\n        CF1111111111EC....EC.........\n        CCCC11111111FC111FEC.........\n        CCCCCCCCEEEECCFEFEEEEEF1.....\n        ......CCCCCCCCCCCEECEEEEE1...\n        ...............CCCCEECCEEEC1.\n`);\n\nconst OBST_SURF_GREEN_L = new Obstacle(-40 * POS_FIXED_MATH_ONE, true, img`\n        .........................CC..\n        ........................FFC..\n        ........................FF...\n        ........................FF...\n        .......................FEE...\n        ......................FFEE...\n        ......................FFEE...\n        .....................FFE7E...\n        .....................FE77E...\n        .....................FE77E...\n        ....................FE777E...\n        ....................F777EE55.\n        ...................FF7777E...\n        ..................FFE7E77EE..\n        ..................FFE7777EE..\n        .................FFE777777E..\n        .................FE7777777E..\n        .................FE7E77777E..\n        ................FE7E777777E..\n        ...............FF7777777EEE5.\n        ...............FF5EEEEEEEEE..\n        ...............FF5EEEE7777E..\n        ..............FFE577777777EE.\n        .............FFE55777EEE777E.\n        .............FFE557E7777777E.\n        .............FE55577E777E77E.\n        .............FE5157E77777E7E.\n        ............FE5115777EEEEEEE5\n        ...........FF5555EEEEEEEEEEE.\n        ...........FF5EEEEEEE777777E.\n        ..........FFEEEEE57777E7777E.\n        ..........FFE5555577777777E..\n        ..........FE55551577777777E..\n        ..........FE555155777E7E77E..\n        .........FE55155557777777E...\n        .........FE5155555EEEEEEEE55.\n        ........FF55555EEEEEEEEEEE...\n        ........FF555EEEEEE777777E...\n        .......FFEEEE8811D1DD7777E...\n        .......FFEE88D1D111D1777EEF..\n        ......FFEE8DDDDDDFFF77EEEFF..\n        ......FFE81DDDFFF1D77E77F....\n        ......FE1FFD11DDD7777F77.....\n        ......FEF11DDDDD7777F777.....\n        .....FED11DD1DD77CFF777E.....\n        .....FEDD1D1DD777CC7777E.....\n        .....FFFDFDF7EEEEEF777E......\n        .....FFFFFF7FEEEEEEF7E.......\n        ....FFFFFFFF7EFEEEEF7E.......\n        ....FFFFEF777FEEEEEF7........\n        ....FEEF77FF77FEEEE8E........\n        ....FEFF77EFFFFEEEFE.........\n        ...FEFF7777EEFFFEFE..........\n        ..FFEE777777EE888FEEE........\n        ..FEEE7E77EE...CCCC..........\n        ..FEEE777E.....8CEC8.........\n        ..FEEEEEE.....CC8888.........\n        .FEEEE.......CCECECC.........\n        .FEEE.......CCE..CC..........\n        CFE.........CE...CC..........\n        CF..........CE...CC..........\n        FFF..........C...CCC.........\n        FF1111111....C....CC.........\n        CF1111111111EC....EC.........\n        CCCC11111111FC111FEC.........\n        CCCCCCCCEEEECCFEFEEEEEF1.....\n        ......CCCCCCCCCCCEECEEEEE1...\n        ...............CCCCEECCEEEC1.\n`);\n\nconst OBST_PALM_TREE_L = new Obstacle(17 * POS_FIXED_MATH_ONE, true, img`\n    .........677.........................\n    ...........6677........777666........\n    ..............67......766............\n    .......7777....67...776..............\n    ....7777777.....7...76...............\n    .7676666.767....67..6..777777........\n    66.........67...67.7..777666677777...\n    ............67...7.7.7766........66..\n    .............67..777776..............\n    ......77777...67777766..777777.......\n    .....7777777..767677.77776666777.....\n    ....7776666677.77ee666.......6777....\n    ...7766.....667.ee777777......6777...\n    ..7.6.........6eee.7666777.....677...\n    .76........77774e.7.777667777...677..\n    .7.......77777eee.77.77..67777...67..\n    ........77776.ee..67.677..67777..677.\n    .......77776..4e..67..677..6777....7.\n    ......77776..eee..677.6777..6777...6.\n    ......7776...eee..677.67777.67777..67\n    .....7776....ee...677.67777..6777...7\n    .....776.....4e...6777.6777...6777..6\n    ....776......ee....777..6777..6677..6\n    ....76......eee....677..6777...6777..\n    ....7.......4ee....677...6777...677..\n    ....6.......eee....677...6777...677..\n    ............ee.....677....677...677..\n    ............ee.....6777...6777...67..\n    ...........44e.....6777...6777...67..\n    ...........eee.....6777....677....6..\n    ...........eee.....6777....677....6..\n    ...........4ee.....7777.....67....6..\n    ...........e4e.....6777.....67.......\n    ...........eee.....677......67.......\n    ...........eee.....677......77.......\n    ..........eeee.....67.......6........\n    ..........44ee.....7........6........\n    ..........eee.....67.................\n    ..........eee.....6..................\n    ..........eee.....6..................\n    ..........44e........................\n    ..........e4e........................\n    ..........eee........................\n    ..........eee........................\n    ..........4ee........................\n    ..........44e........................\n    ..........eee........................\n    .........eeee........................\n    .........eeee........................\n    .........44ee........................\n    .........444e........................\n    .........e44e........................\n    .........eeee........................\n    .........eeee........................\n    .........4eee........................\n    .........444e........................\n    .........e44e........................\n    .........ee4ee.......................\n    .........eeeee.......................\n    .........eeeee.......................\n    .........44eee.......................\n    .........444ee.......................\n    ..........e44e.......................\n    ..........ee4e.......................\n    ..........eeee.......................\n    ..........eeeee......................\n    ...........44ee......................\n    ...........444e......................\n    ...........e444......................\n    ...........ee4ee.....................\n    ...........eeeee.....................\n    ...........eeeee.....................\n    ...........4eeee.....................\n    ...........444ee.....................\n    ...........e444ee....................\n    ...........ee444e....................\n    ............ee44e....................\n    ............eeeee....................\n    ............eeeee....................\n    ............eeeee....................\n    ............44eeee...................\n    ............444eee...................\n    ............e444ee...................\n    ............ee444e...................\n    ............eee4ee...................\n    .............eeeeee..................\n    .............eeeeee..................\n    .............eeeeee..................\n    .............44eeee..................\n    .............444eee..................\n`);\n\nconst OBST_GTX_BOTTOM_SIGN_R = new Obstacle(0, false, img`\n    ..........444444444444444444444..........\n    .........44222222222446666666644.........\n    .........44222222224466666666644.........\n    .........44222222224466666666644.........\n    .........44222222224466666666644.........\n    ........44222222224466666666644de........\n    ........44222222224466666666644de........\n    ........44222222224466666444444de........\n    ........44222222224466444444444de........\n    .......4422222222444444444ff44ddde.......\n    .......442222222444444f444ff44ddde.......\n    .......442222444444f4ff44ff444ddde.......\n    .......442444444ffff4fff4ff444ddde.......\n    ......44444444fffff444ffff444ddddde......\n    ......4444ff44ffff44444ffff44ddddde......\n    ......44fffff444ff4444fffff44ddddde......\n    ......4fff4ff444ff4444ff44ff4ddddde......\n    .....44ff4444444ff4444f444ffddddddde.....\n    .....44ff4fff444ff444ff44444ddddddde.....\n    .....44ff4fff444ff444f444444ddddddde.....\n    .....44ff44ff444ff4444444644ddddddde.....\n    ....444ff4fff44444444466644ddddddddde....\n    ....444fffff444444466666644ddddddddde....\n    ....4444ff44444466666666644ddddddddde....\n    ...44444444444466666666644ddddddddddde...\n    ...44444442224466666666644ddddddddddde...\n    ...44442222224466666666644ddddddddddde...\n    ...44222222224466666666644ddddddddddde...\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    ..44222222224466666666644ddddddddddddde..\n    .44222222224466666666644ddddddddddddddde.\n    .44222222224466666666644ddddddddddddddde.\n    .44444444444444444444444ddddddddddddddde.\n    .44444444444444444444444eeeeeeeeeeeeeeee.\n    444...............ee444...............eee\n    444...............ee444...............eee\n    444...............ee444...............eee\n    444...............ee444...............eee\n`);\n\nconst OBST_TRAFFIC_CONE = new Obstacle(0, false, img`\n    . . . . . . . 4 . . . . . . .\n    . . . . . . . 4 . . . . . . .\n    . . . . . . . 4 . . . . . . .\n    . . . . . . 1 1 1 . . . . . .\n    . . . . . . 4 1 4 . . . . . .\n    . . . . . . 4 4 4 . . . . . .\n    . . . . . 1 1 4 1 1 . . . . .\n    . . . . . 4 1 1 1 4 . . . . .\n    . . . . . 4 4 1 4 4 . . . . .\n    . . . . 1 4 4 4 4 4 1 . . . .\n    . . . . 1 1 4 4 4 1 1 . . . .\n    . . . . 4 1 1 1 1 1 4 . . . .\n    . . . 4 4 4 1 1 1 4 4 4 . . .\n    . e e 1 4 4 4 4 4 4 4 1 e e .\n    e 4 4 1 1 4 4 4 4 4 1 1 4 4 e\n    e 4 4 1 1 1 1 1 1 1 1 1 4 4 e\n    e 4 4 4 4 1 1 1 1 1 4 4 4 4 e\n    e 4 4 4 4 4 4 4 4 4 4 4 4 4 e\n    . e e 4 4 4 4 4 4 4 4 4 e e .\n    . . . e e e e e e e e e . . .\n`);\n\nconst OBST_DINNER_HOUSE_L = new Obstacle(0, false, img`\n    ..................fffffffffffffffffffffffffffffffffffffffffffff...........................\n    .................ff1111111111111111111111111111111111111111111ff..........................\n    .................f111111111111111111111111111111111111111111111f..........................\n    .................f111111111111111111111111111111111111111111111f..........................\n    .................f111888881111881188111188118888888118888881111f..........................\n    .................f111888888111881188111188118888888118888888111f..........................\n    .................f111881188811881188811188118811111118811188111f..........................\n    .............fffff111881188811881188811188118811111118811188111fffffffffffffff............\n    .............f555f111881118811881188881188118811111118811188111f5555555555555ff...........\n    ............f5555f111881118811881188881188118811111118811188111f555555555555fccf..........\n    ............f5555f111881118811881188188188118888881118888881111f555555555555fcccf.........\n    ...........f55555f111881118811881188188188118888881118888811111f55555555555fefcccf........\n    ...........f55555f111881118811881188188188118811111118811881111f55555555555feeffccff......\n    ..........f555555f111881118811881188118888118811111118811188111f5555555555f4ee4efcccf.....\n    .........f5555555f111881188811881188118888118811111118811188111f5555555555f4ee4eefcccf....\n    .........f5555555f111881188111881188111888118811111118811188111f555555555fe4ee4ee4fcccf...\n    ........f55555555f111888888111881188111888118888888118811188111f555555555fe4ee4ee4efcccf..\n    ........f55555555f111888881111881188111188118888888118811188111f55555555fee4ee4ee4efccccf.\n    .......f555555555f111111111111111111111111111111111111111111111f55555555fee4ee4ee4efcccccf\n    .......f555555555f111111111111111111111111111111111111111111111f5555555f4ee4ee4fe4efffffff\n    ......f5555555555ff1111111111111111111111111111111111111111111ff5555555f4ee4eff1f4ef......\n    ......f55555555555fffffffffffffffffffffffffffffffffffffffffffff5555555fe4eeff181f4ef......\n    .....f5555555555555555555555555555555555555555555555555555555555555555fe4ff11818f4ef......\n    .....f555555555555555555555555555555555555555555555555555555555555555ffff1881818f4ef......\n    ....f5555555555555555555555555555555555555555555555555555555555555555ff118181818f4ef......\n    ...f5555555555555555555555555555555555555555555555555555555555555555f11881881181f4ef......\n    ...f5555555555555555555555555555555555555555555555555555555555555555f111811811ffe4ef......\n    ..f5555555555555555555555555555555555555555555555555555555555555555f18118111ff4ee4ef......\n    ..f5555555555555555555555555555555555555555555555555555555555555555f881881ffee4ee4ef......\n    .f5555555555555555555555555555555555555555555555555555555555555555ff1811ffe4ee4ee4ef......\n    .f5555555555555555555555555555555555555555555555555555555555555555ff11ff4ee4effee4ef......\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4fffee4eeffbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4fe4ee4ffbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4effbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999999999999fe4ef999999999999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999919f4eef999999999919fe4ef999999999919fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999199f4eef999999999199fe4ef999999999199fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999991999f4eef999999991999fe4ef999999991999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999919999f4eef999999919999fe4ef999999919999fee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ee4f999999999999f4eef999799999999fe4ef999999999999fee4eefee4ee4efbffbbbfee4ef......\n    ....fe4ee47fff77fff7fff74eeffff7ffff7ffffe7e7ffffff7ff7fffee4eefee4ee4efbfbbbbfee4ef......\n    ....fe4ee4e75777ee7774e77e74ee7ee4ee77777e4e74775777774ee4ee4eefee4ee4efbbbbbbfee4ef......\n    ....fe4ef7755f757f75757555777f55777ff757577775557555777fffff4eefee4ee4efbbbbbbfee4ef......\n    ....feff77e77757e77e757e77e77e57577ee777e7757e577e7775eeeffe4eefee4ee4efbbbbbbfee4ef......\n    ....ffeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeff4ee4eefee4ee4efbbbbbbfeeff.......\n    ...ffffffffffffffffffffffffffffffffffffffffffffffffffffee4ee4eefee4ee4efbbbbbbfff.........\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbbbbbff...........\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbbbff.............\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4efbff...............\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ee4eff.................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4eeff...................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefee4ff.....................\n    ....fe4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4eefeff.......................\n    ....fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff.........................\n`);\n\nconst OBST_DINNER_HOUSE_R = new Obstacle(0, false, img`\n    ...........................fffffffffffffffffffffffffffffffffffffffffffff..................\n    ..........................ff1111111111111111111111111111111111111111111ff.................\n    ..........................f111111111111111111111111111111111111111111111f.................\n    ..........................f111111111111111111111111111111111111111111111f.................\n    ..........................f111888881111881188111188118888888118888881111f.................\n    ..........................f111888888111881188111188118888888118888888111f.................\n    ..........................f111881188811881188811188118811111118811188111f.................\n    ............fffffffffffffff111881188811881188811188118811111118811188111fffff.............\n    ...........ff5555555555555f111881118811881188881188118811111118811188111f555f.............\n    ..........fccf555555555555f111881118811881188881188118811111118811188111f5555f............\n    .........fcccf555555555555f111881118811881188188188118888881118888881111f5555f............\n    ........fcccfef55555555555f111881118811881188188188118888881118888811111f55555f...........\n    ......ffccffeef55555555555f111881118811881188188188118811111118811881111f55555f...........\n    .....fcccfe4ee4f5555555555f111881118811881188118888118811111118811188111f555555f..........\n    ....fcccfee4ee4f5555555555f111881188811881188118888118811111118811188111f5555555f.........\n    ...fcccf4ee4ee4ef555555555f111881188111881188111888118811111118811188111f5555555f.........\n    ..fcccfe4ee4ee4ef555555555f111888888111881188111888118888888118811188111f55555555f........\n    .fccccfe4ee4ee4eef55555555f111888881111881188111188118888888118811188111f55555555f........\n    fcccccfe4ee4ee4eef55555555f111111111111111111111111111111111111111111111f555555555f.......\n    fffffffe4ef4ee4ee4f5555555f111111111111111111111111111111111111111111111f555555555f.......\n    ......fe4f1ffe4ee4f5555555ff1111111111111111111111111111111111111111111ff5555555555f......\n    ......fe4f181ffee4ef5555555fffffffffffffffffffffffffffffffffffffffffffff55555555555f......\n    ......fe4f81811ff4ef5555555555555555555555555555555555555555555555555555555555555555f.....\n    ......fe4f8181881ffff555555555555555555555555555555555555555555555555555555555555555f.....\n    ......fe4f818181811ff5555555555555555555555555555555555555555555555555555555555555555f....\n    ......fe4f18118818811f5555555555555555555555555555555555555555555555555555555555555555f...\n    ......fe4eff118118111f5555555555555555555555555555555555555555555555555555555555555555f...\n    ......fe4ee4ff11181181f5555555555555555555555555555555555555555555555555555555555555555f..\n    ......fe4ee4eeff188188f5555555555555555555555555555555555555555555555555555555555555555f..\n    ......fe4ee4ee4eff1181ff5555555555555555555555555555555555555555555555555555555555555555f.\n    ......fe4eeffe4ee4ff11ff5555555555555555555555555555555555555555555555555555555555555555f.\n    ......fe4eefbffee4eefff4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    ......fe4eefbbbff4ee4ef4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbffe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999999999999fe4ef999999999999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef919999999999fe4ef919999999999fee4f919999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef991999999999fe4ef991999999999fee4f991999999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999199999999fe4ef999199999999fee4f999199999999f4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4eef999919999999fe4ef999919999999fee4f999919999999f4ee4ef....\n    ......fe4eefbbbffbfe4ee4eefee4eef999999999999fe4ef999999997999fee4f999999999999f4ee4ef....\n    ......fe4eefbbbbfbfe4ee4eefee4eefff7ff7ffffff7e7effff7ffff7ffffee47fff7fff77fff74ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4ee4ee47777757747e4e77777ee4ee7ee47e77e4777ee77757e4ee4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4fffff777555755577775757ff77755f77755575757f757f5577fe4ef....\n    ......fe4eefbbbbbbfe4ee4eefee4effeee5777e775e7577e777ee77575e77e77e757e77e75777e77ffef....\n    .......ffeefbbbbbbfe4ee4eefee4ee4ffeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeff....\n    .........fffbbbbbbfe4ee4eefee4ee4eeffffffffffffffffffffffffffffffffffffffffffffffffffff...\n    ...........ffbbbbbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .............ffbbbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    ...............ffbfe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .................ffe4ee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    ...................ffee4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .....................ff4eefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .......................ffefee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ee4ef....\n    .........................fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff....\n`);\n","circuit.ts":"const ROAD_DIRECTION_ANGLE_FACTOR = 0.31;\nconst ROAD_SLOPE_ANGLE_FACTOR = 0.25;\n\nconst DIR_STRAIGHT = 0;\nconst DIR_LEFT_1 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -1 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_2 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -2 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_3 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -3 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_4 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -4 * ANGLES_FIXED_MATH_ONE);\nconst DIR_LEFT_5 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * -5 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_1 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_2 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 2 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_3 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 3 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_4 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 4 * ANGLES_FIXED_MATH_ONE);\nconst DIR_RIGHT_5 = Math.round(ROAD_DIRECTION_ANGLE_FACTOR * 5 * ANGLES_FIXED_MATH_ONE);\n\nconst SLOPE_FLAT = 0;\nconst SLOPE_UP_1 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -1 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_UP_2 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -2 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_UP_3 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * -3 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_1 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 1 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_2 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 2 * ANGLES_FIXED_MATH_ONE);\nconst SLOPE_DOWN_3 = Math.round(ROAD_SLOPE_ANGLE_FACTOR * 3 * ANGLES_FIXED_MATH_ONE);\n\nclass CircuitSegment {\n    constructor(\n        public direction: number,\n        public slope: number,\n        public leftObstacle: Obstacle,\n        public rightObstacle: Obstacle,\n        public centerObstacle: Obstacle,\n        public leftSideColor: number,\n        public rightSideColor: number,\n    ) {\n    }\n}\n\nconst CIRCUIT = [\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_SEMAPHORE_SIGN, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_START_SIGN, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_PALM_TREE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_GREEN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_SURF_BLUE_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, OBST_TURN_CHICANE_SIGN_L, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_RIGHT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_TURN_CHICANE_SIGN_L, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 8, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_RIGHT_2, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_2, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_LEFT_1, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_BLUE_L, null, 13, 8),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_FLAT, null, OBST_SURF_GREEN_L, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 8),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, OBST_PILLAR, OBST_PILLAR, OBST_PILLAR_TOP, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_DOWN_3, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, OBST_PILLAR, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, OBST_PILLAR, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 7),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_3, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_GTX_BOTTOM_SIGN_R, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TURN_RIGHT_SIGN_L, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_DOWN_2, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_PALM_TREE_L, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_3, SLOPE_UP_1, OBST_BUSH, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRAFFIC_CONE, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_TRAFFIC_CONE, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_CHECK_SIGN, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_2, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_TURN_RIGHT_SIGN_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_2, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_2, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_1, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_1, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 7, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, null, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_FLAT, OBST_DINNER_HOUSE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_2, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, OBST_DINNER_HOUSE_L, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_3, null, OBST_TURN_CHICANE_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_UP_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_LEFT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, OBST_DINNER_HOUSE_L, null, null, 13, 13),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, OBST_DINNER_HOUSE_R, null, 1, 1),\n    new CircuitSegment(DIR_RIGHT_4, SLOPE_DOWN_3, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_DINNER_HOUSE_L, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_DINNER_HOUSE_R, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_BUSH, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, OBST_TURN_RIGHT_SIGN_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, OBST_BUSH, null, null, 13, 13),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, OBST_PILLAR, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_LEFT_5, SLOPE_UP_1, null, OBST_PILLAR, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_UP_1, null, null, null, 13, 7),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, null, null, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_GTX_BOTTOM_SIGN_R, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_TRELLIS, OBST_TRELLIS, OBST_FINISH_SING, 7, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n    new CircuitSegment(DIR_STRAIGHT, SLOPE_FLAT, OBST_PALM_TREE_L, OBST_PALM_TREE_L, null, 13, 13),\n];\n","textrender.ts":"enum TextAlignment {\n    Left,\n    Center,\n    Right    \n}\n\nclass TextRender {\n    private _text: string;\n    private _color: number;\n    private _outlineColor?: number;\n    private _font: image.Font;\n    private _dirty: boolean;\n    private _lastRender: Image;\n\n    constructor(\n        text: string,\n        color: number = 1,\n        outlineColor?: number,\n        font?: image.Font\n    ) {\n        this._text = text;\n        this._color = color;\n        this._outlineColor = outlineColor;\n        if (!font)\n            this._font = image.font8;\n        else\n            this._font = font;\n\n        this._dirty = true;\n    }\n\n    public setText(text: string): void {\n        this._text = text;\n        this._dirty = true;\n    }\n\n    public text(): string {\n        return this._text;\n    }\n\n    public setColor(color: number): void {\n        this._color = color;\n        this._dirty = true;\n    }\n\n    public color(): number {\n        return this._color;\n    }\n\n    public setOutlineColor(color?: number): void {\n        this._outlineColor = color;\n        this._dirty = true;\n    }\n\n    public outlineColor(): number {\n        return this._outlineColor;\n    }\n\n    public setFont(font: image.Font): void {\n        this._font = font;\n        this._dirty = true;\n    }\n\n    public font(): image.Font {\n        return this._font;\n    }\n\n    public width(): number {\n        if (this._dirty)\n            this.render();\n\n        return this._lastRender.width;\n    }\n\n    public height(): number {\n        if (this._dirty)\n            this.render();\n\n        return this._lastRender.height;\n    }\n\n    public draw(targetImg: Image, x: number, y: number, alignment: TextAlignment = TextAlignment.Left): void {\n        if (this._dirty)\n            this.render();\n\n        switch(alignment) {\n            case TextAlignment.Center:\n                targetImg.drawTransparentImage(this._lastRender, x - Math.idiv(this._lastRender.width, 2), y);\n                break;\n\n            case TextAlignment.Right:\n                targetImg.drawTransparentImage(this._lastRender, x - this._lastRender.width, y);\n                break;\n\n            default:\n                targetImg.drawTransparentImage(this._lastRender, x, y);\n                break;\n        }\n    }\n\n    private render(): void {\n        const width = this._font.charWidth * this._text.length;\n        const height = this._font.charHeight;\n\n        let textImg = image.create(width, height);\n        textImg.print(this._text, 0, 0, this._color, this._font,);\n        if (this._outlineColor)\n            textImg = this.outline(textImg);\n\n        this._lastRender = textImg;\n        this._dirty = false;\n    }\n\n    private outline(sourceImg: Image): Image {\n        const thickness = this._font.multiplier ? Math.round(this._font.multiplier) : 1;\n        const doubleThickness = thickness << 1;\n        const resultImg = image.create(sourceImg.width + doubleThickness, sourceImg.height);\n\n        const hl = 0;\n        const hc = thickness;\n        const hr = doubleThickness;\n\n        resultImg.drawImage(sourceImg, hl, 0);\n        resultImg.drawTransparentImage(sourceImg, hr, 0);\n        resultImg.drawTransparentImage(sourceImg, hl, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hr, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hl, thickness);\n        resultImg.drawTransparentImage(sourceImg, hr, thickness);\n        resultImg.drawTransparentImage(sourceImg, hc, -thickness);\n        resultImg.drawTransparentImage(sourceImg, hc, thickness);\n\n        resultImg.replace(this._color, this._outlineColor);\n        resultImg.drawTransparentImage(sourceImg, hc, 0);\n\n        return resultImg;\n    }\n}\n","countdown.ts":"class Countdown {\n    private running: boolean;\n    private loadTime: number;\n    private endTime: number;\n\n    constructor() {\n        this.running = false;        \n    }\n\n    public load(seconds: number): void {\n        const wasRunning = this.running;\n        if (wasRunning)\n            this.stop();\n\n        this.loadTime = Math.round(seconds * 1000);\n\n        if (wasRunning)\n            this.start();\n    }\n\n    public add(seconds: number): void {\n        const wasRunning = this.running;\n        if (wasRunning)\n            this.stop();\n\n        this.loadTime += Math.round(seconds * 1000);\n\n        if (wasRunning)\n            this.start();\n    }\n\n    public isExpired(): boolean {\n        if (this.running)\n            return this.endTime < game.runtime();\n        else\n            return this.loadTime < 0;\n    }\n\n    public start(): void {\n        if (!this.running) {\n            this.endTime = game.runtime() + this.loadTime;\n            this.running = true;\n        }\n    }\n\n    public stop(): void {\n        if (this.running) {\n            this.loadTime = this.loadTime - game.runtime();\n            this.running = false;\n        }\n    }\n\n    public remainingTimeMs(): number {\n        let result: number;\n        if (this.running)\n            result = this.endTime - game.runtime();\n        else\n            result = this.loadTime;\n\n        return result < 0 ? 0 : result;\n    }\n\n    public remainingTime(): number {\n        return Math.idiv(this.remainingTimeMs(), 1000);\n    }\n}","worldrender.ts":"// --- World render configuration\nconst PERSPECTIVE_VERTICAL_CENTER = Math.round(scene.screenHeight() / 3);\nconst Z_PERSPECTIVE_FACTOR = 20;\nconst ROAD_INIT_Y = Math.round((SCREEN_HEIGHT - PERSPECTIVE_VERTICAL_CENTER) * POS_FIXED_MATH_ONE);\n\nconst STRIPE_HEIGHT = 10;\nconst STRIPE_WIDTH = Math.round(scene.screenWidth() * 1.4);\nconst STRIPES_VIEW_PORT = 12;\nconst STRIPE_HALF_HEIGHT = Math.idiv(STRIPE_HEIGHT, 2);\nconst STRIPE_HALF_WIDTH_FP = Math.round(STRIPE_WIDTH / 2 * POS_FIXED_MATH_ONE);\n\nconst ROAD_MIN_ANGLE = -89 * ANGLES_FIXED_MATH_ONE;\nconst ROAD_MAX_ANGLE = 89 * ANGLES_FIXED_MATH_ONE;\n\nenum ObstacleDirection {\n  Top,\n  Left,\n  Right\n}\n\nclass RenderObstacle {\n    public image: Image;\n    public x2d: number;\n    public y2d: number;\n    public x3dFP: number;\n    public y3dFP: number;\n    public z3dFP: number;\n    public mirror: boolean;\n    public scale: number;\n}\n\nclass WorldRender {\n    private sinTable: number[];\n\n    private drawZ: number;\n    private drawY: number;\n    private roadAngleX: number;\n    private roadAngleY: number;\n    private roadCenter: number;\n    private roadY: number;\n    private stripeToggle: boolean;\n    private backdropOffset: number;\n    private perspectiveHorizontalCenter: number;\n    private oldTravelDistance: number;\n\n    private obstaclesToRenders: RenderObstacle[];\n\n    constructor() {\n        this.sinTable = this.createSinTableFP();\n        this.backdropOffset = 0;\n    }\n\n    public calcRoadCurveInSegment(startPoint: number, lenght: number): number {\n        const firstStripeIndex = Math.idiv(startPoint, STRIPE_HEIGHT);\n        const firstStripeOffeset = startPoint % STRIPE_HEIGHT;\n        const endPoint = startPoint + lenght;\n\n        let point = startPoint;\n        let index = firstStripeIndex;\n        let curveSum = 0;\n        while (point < endPoint) {\n            const curveAngle = CIRCUIT[index].direction;\n            const offset = point == startPoint ? firstStripeOffeset : 0;\n            let deltaDist = STRIPE_HEIGHT - offset;\n            if ((point + deltaDist) > endPoint)\n                deltaDist = endPoint - point;\n            curveSum += Math.imul(deltaDist, curveAngle);\n            point += deltaDist;\n            index++;\n        }\n\n        return curveSum;\n    }\n\n    public checkCollision(x1: number, y1: number, x2: number, y2: number, zLimit: number): boolean {\n        const lastObstacleToRender = this.obstaclesToRenders.length;\n        for (let i = 0; i < lastObstacleToRender; i++) {\n            const obstacle = this.obstaclesToRenders[i];\n\n            if (Math.idiv(obstacle.z3dFP, POS_FIXED_MATH_ONE) > zLimit)\n                return false;\n\n            const obstX1 = Math.idiv(obstacle.x3dFP, POS_FIXED_MATH_ONE);\n            const obstX2 = obstX1 + obstacle.image.width;\n            const obstY2 = Math.idiv(obstacle.y3dFP, POS_FIXED_MATH_ONE);\n            const obstY1 = obstY2 - obstacle.image.height;\n\n            const doNotOverlap = x2 < obstX1 || x1 > obstX2 || y2 < obstY1 || y1 > obstY2;\n            if (!doNotOverlap)\n                return true;\n        }\n\n        return false;\n    }\n\n    public onCheckSign(travelDistance: number): boolean {\n        const firstStripeIndex = Math.idiv(travelDistance, STRIPE_HEIGHT);\n        return CIRCUIT[firstStripeIndex].centerObstacle == OBST_CHECK_SIGN\n            || CIRCUIT[firstStripeIndex + 1].centerObstacle == OBST_CHECK_SIGN;\n    }\n\n    public draw(targetImg: Image, travelDistance: number, perspectiveHorizontalCenter: number): boolean {\n        const maxTravelDistance = Math.imul(CIRCUIT.length - STRIPES_VIEW_PORT, STRIPE_HEIGHT);\n        const firstStripeIndex = Math.idiv(travelDistance, STRIPE_HEIGHT);\n        const firstStripeOffeset = travelDistance % STRIPE_HEIGHT;\n        const deltaTraveledDistace = travelDistance - this.oldTravelDistance;\n        this.oldTravelDistance = travelDistance;\n\n        let circuitEndReached = false;\n        if (travelDistance > maxTravelDistance) {\n            travelDistance = maxTravelDistance;\n            circuitEndReached = true;\n        }\n\n        this.perspectiveHorizontalCenter = perspectiveHorizontalCenter;\n\n        // Draw the steet\n        this.drawZ = 0;\n        this.drawY = SCREEN_HEIGHT;\n        this.roadAngleX = 0;\n        this.roadAngleY = 0;\n        this.roadCenter = 0;\n        this.roadY = ROAD_INIT_Y;\n        this.stripeToggle = firstStripeIndex % 2 == 0;\n        this.obstaclesToRenders = [];\n\n        for (let i = 0; i < STRIPES_VIEW_PORT; i++) {\n            const circuitIndex = firstStripeIndex + i;\n            const offset = i == 0 ? firstStripeOffeset : 0;\n            this.drawStripe(circuitIndex, i, targetImg , offset);\n            this.stripeToggle = !this.stripeToggle;\n        }\n\n        // Draw the sky\n        this.drawY--;\n        targetImg.fillRect(0, 0, SCREEN_WIDTH, this.drawY , 9);\n\n        // Draw backdrop image\n        let backdropOffset: number;\n        if (deltaTraveledDistace > 0) {\n            backdropOffset = this.backdropOffset - (((CIRCUIT[firstStripeIndex].direction) * 2) >> ANGLES_BITS);\n            if (backdropOffset < 0)\n                backdropOffset = SCREEN_WIDTH + backdropOffset;\n            else if (backdropOffset > SCREEN_WIDTH)\n                backdropOffset -= SCREEN_WIDTH;\n        } else {\n            backdropOffset = this.backdropOffset;\n        }\n\n        targetImg.drawTransparentImage(BACKDROP_IMG, backdropOffset, this.drawY - BACKDROP_IMG.height);\n        if (backdropOffset > 0)\n            targetImg.drawTransparentImage(BACKDROP_IMG, backdropOffset - BACKDROP_IMG.width, this.drawY - BACKDROP_IMG.height);\n        this.backdropOffset = backdropOffset;\n\n        // Draw ostacles\n        const lastObstacleToRender = this.obstaclesToRenders.length - 1;\n        for (let i = lastObstacleToRender; i >= 0; i--) {\n            const obstacle = this.obstaclesToRenders[i];\n            if (obstacle.image.width >= obstacle.image.height)\n                this.drawScaledH(obstacle.image, targetImg, obstacle.scale, obstacle.mirror, obstacle.x2d, obstacle.y2d);\n            else\n                this.drawScaledV(obstacle.image, targetImg, obstacle.scale, obstacle.mirror, obstacle.x2d, obstacle.y2d);\n        }\n\n        return circuitEndReached;\n    }\n\n    private drawStripe(circuitIndex: number, stripeNum: number, img: Image, startSTRIPE_HEIGHT: number): void {\n        const circuitSegment = CIRCUIT[circuitIndex];\n\n        const roadColor = this.stripeToggle ? 12 : 11;\n        const borderColor = this.stripeToggle ? 1 : 12;\n        const laneColor = 1;\n\n        for (let i = startSTRIPE_HEIGHT; i < STRIPE_HEIGHT; i++) {\n            this.roadAngleX += circuitSegment.direction;\n            this.roadAngleY += circuitSegment.slope; \n\n            if (this.roadAngleX >= 0) {\n                if (this.roadAngleX > ROAD_MAX_ANGLE)\n                    this.roadAngleX = ROAD_MAX_ANGLE;\n                this.roadCenter += this.sinTable[this.roadAngleX >> ANGLES_BITS];\n            } else {\n                if (this.roadAngleX < ROAD_MIN_ANGLE)\n                    this.roadAngleX = ROAD_MIN_ANGLE;\n                this.roadCenter -= this.sinTable[-(this.roadAngleX >> ANGLES_BITS)];\n            }\n\n            if (this.roadAngleY >= 0) {\n                if (this.roadAngleY > ROAD_MAX_ANGLE)\n                    this.roadAngleY = ROAD_MAX_ANGLE;\n                this.roadY += this.sinTable[this.roadAngleY >> ANGLES_BITS];  \n            } else {\n                if (this.roadAngleY < ROAD_MIN_ANGLE)\n                    this.roadAngleY = ROAD_MIN_ANGLE;\n                this.roadY -= this.sinTable[-(this.roadAngleY >> ANGLES_BITS)];  \n            }\n\n            // 3D coordinates\n            const x1_3d = Math.round(this.roadCenter - STRIPE_HALF_WIDTH_FP);\n            const x2_3d = Math.round(this.roadCenter + STRIPE_HALF_WIDTH_FP);\n            const y_3d = this.roadY;\n            // Swith to 2D\n            const roadLine2D = this.horizontalLine3Dto2D(x1_3d, x2_3d, y_3d, this.drawZ);\n            // Calculate line boundaries\n            const x1_borderL = roadLine2D[0];\n            const x2_borderR = roadLine2D[1];\n            const width = x2_borderR - x1_borderL;\n            const borderWidht = Math.idiv(width, 18);\n            const x1_road = x1_borderL + borderWidht;\n            const x2_road = x2_borderR - borderWidht;\n            const laneLineWidth = Math.idiv(borderWidht, 3);\n            const laneWidth = Math.idiv(width, 3);\n            const x1_lane1 = x1_borderL + laneWidth;\n            const x2_lane1 = x1_lane1 + laneLineWidth;\n            const x2_lane2 = x2_borderR - laneWidth;\n            const x1_lane2 = x2_lane2 - laneLineWidth;\n\n            // Draw obstacles\n            const leftObstacle = circuitSegment.leftObstacle;\n            const rightObstacle = circuitSegment.rightObstacle;\n            const topObstacle = circuitSegment.centerObstacle;\n            if (i == STRIPE_HALF_HEIGHT && roadLine2D[2] <= this.drawY) {\n                if (topObstacle != null) {\n                    this.drawSideObstacles(this.roadCenter, y_3d, this.drawZ, topObstacle, ObstacleDirection.Top);\n                }\n                if (leftObstacle != null) {\n                    this.drawSideObstacles(x1_3d, y_3d, this.drawZ, leftObstacle, ObstacleDirection.Left);\n                }\n                if (rightObstacle != null) {\n                    this.drawSideObstacles(x2_3d, y_3d, this.drawZ, rightObstacle, ObstacleDirection.Right);\n                }\n            }\n\n            // Draw steet\n            while (roadLine2D[2] < this.drawY) {\n                this.drawY--;\n                img.drawLine(0, this.drawY, x1_borderL, this.drawY, circuitSegment.leftSideColor);\n                img.drawLine(x2_borderR, this.drawY, SCREEN_WIDTH, this.drawY, circuitSegment.rightSideColor);\n                img.drawLine(x1_borderL, this.drawY, x1_road, this.drawY, borderColor);\n                img.drawLine(x1_road, this.drawY, x2_road, this.drawY, roadColor);\n                img.drawLine(x2_road, this.drawY, x2_borderR, this.drawY, borderColor);\n\n                // Central lane stripes\n                if (this.stripeToggle) {\n                    if (i > STRIPE_HALF_HEIGHT) {\n                        img.drawLine(x1_lane1, this.drawY, x2_lane1, this.drawY, laneColor);                    \n                        img.drawLine(x1_lane2, this.drawY, x2_lane2, this.drawY, laneColor);                    \n                    }\n                } else {\n                    if (i < STRIPE_HALF_HEIGHT) {\n                        img.drawLine(x1_lane1, this.drawY, x2_lane1, this.drawY, laneColor);                    \n                        img.drawLine(x1_lane2, this.drawY, x2_lane2, this.drawY, laneColor);                    \n                    }\n                }\n\n            }\n            this.drawZ += POS_FIXED_MATH_ONE;\n        }        \n    }\n\n    private horizontalLine3Dto2D(x1: number, x2: number, y: number, z: number): number[]  {\n        const denom = POS_FIXED_MATH_ONE + Math.idiv(z, Z_PERSPECTIVE_FACTOR);\n        return [\n            Math.idiv(x1, denom) + this.perspectiveHorizontalCenter, \n            Math.idiv(x2, denom) + this.perspectiveHorizontalCenter, \n            Math.idiv(y, denom) + PERSPECTIVE_VERTICAL_CENTER\n        ];\n    }\n\n    private drawSideObstacles(x: number, y: number, z: number, obstacle: Obstacle, direction: ObstacleDirection): void {\n        const obstacleToRender = new RenderObstacle();\n        const denom = POS_FIXED_MATH_ONE + Math.idiv(z, Z_PERSPECTIVE_FACTOR);\n\n        obstacleToRender.image = obstacle.image;\n        obstacleToRender.scale = denom;\n        obstacleToRender.mirror = direction == ObstacleDirection.Right && obstacle.reqMirror;\n        obstacleToRender.z3dFP = z;\n\n        const imageWidthFixed = Math.imul(obstacleToRender.image.width, POS_FIXED_MATH_ONE);\n        const imageHeightFixed = Math.imul(obstacleToRender.image.height, POS_FIXED_MATH_ONE);\n\n        if (direction == ObstacleDirection.Left) {\n            x += obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x - imageWidthFixed, denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        } else if (direction == ObstacleDirection.Right) {\n            x -= obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x, denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        } else if (direction == ObstacleDirection.Top) {\n            y -= obstacle.offset;\n            obstacleToRender.x3dFP = x;\n            obstacleToRender.y3dFP = y;\n\n            const x_2D = Math.idiv(x - Math.idiv(imageWidthFixed, 2), denom) + this.perspectiveHorizontalCenter;\n            const y_2D = Math.idiv(y - imageHeightFixed, denom) + PERSPECTIVE_VERTICAL_CENTER;\n\n            obstacleToRender.x2d = x_2D;\n            obstacleToRender.y2d = y_2D;\n        }\n\n        this.obstaclesToRenders.push(obstacleToRender);\n    }\n\n    private drawScaledH(sourceImg: Image, targetImg: Image, scale: number, mirror: boolean, dstX: number, dstY: number) {\n        const outputBuffer = image.create(sourceImg.width, Math.idiv(Math.imul(sourceImg.height, POS_FIXED_MATH_ONE), scale))\n        const blitRowScale = Math.idiv(Math.imul(sourceImg.width, POS_FIXED_MATH_ONE), scale);\n        const xEnd = Math.imul(sourceImg.width - 1, POS_FIXED_MATH_ONE);\n        if (mirror) {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(xEnd - x, scale), 0, sourceImg, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        } else {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(x, scale), 0, sourceImg, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        }\n        \n        targetImg.drawTransparentImage(outputBuffer, dstX, dstY)\n    }\n\n    private drawScaledV(sourceImg: Image, targetImg: Image, scale: number, mirror: boolean, dstX: number, dstY: number) {\n        const maxDimension = sourceImg.height;\n        const inputBuffer = image.create(maxDimension, maxDimension);\n        inputBuffer.drawImage(sourceImg, 0, 0);\n\n        const outputBuffer = image.create(\n            Math.idiv(Math.imul(inputBuffer.width, POS_FIXED_MATH_ONE), scale), \n            Math.idiv(Math.imul(inputBuffer.height, POS_FIXED_MATH_ONE), scale));\n        const blitRowScale = Math.idiv(Math.imul(maxDimension, POS_FIXED_MATH_ONE), scale);\n        const xEnd = Math.imul(sourceImg.width - 1, POS_FIXED_MATH_ONE);\n        if (mirror) {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(xEnd - x, scale), 0, inputBuffer, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        } else {\n            for (let x = 0; x <= xEnd; x += scale)\n                outputBuffer.blitRow(Math.idiv(x, scale), 0, inputBuffer, Math.idiv(x, POS_FIXED_MATH_ONE), blitRowScale);\n        }\n        \n        targetImg.drawTransparentImage(outputBuffer, dstX, dstY)\n    }\n\n    private createSinTableFP(): number[] {\n        const table = [];\n        for (let i = 0; i < 90; i++)\n            table.push(Math.round(Math.sin(Math.PI * i / 180) * 4 * POS_FIXED_MATH_ONE));\n\n        return table;\n    }\n}\n","carphysics.ts":"const CAR_MAX_SPEED = 293 * POS_FIXED_MATH_ONE;\nconst CAR_SPEED_TRAVEL_FACTOR = 2000;\nconst CAR_TURN_WEIGHT = 80 * POS_FIXED_MATH_ONE;\nconst CAR_CURVE_WEIGHT = 8;\n\nconst CAR_X_MOVE_RANGE = Math.round(STRIPE_WIDTH * 1.4) * POS_FIXED_MATH_ONE;\nconst CAR_X_MOVE_RANGE_P = Math.idiv(CAR_X_MOVE_RANGE, 2);\nconst CAR_X_MOVE_RANGE_M = -CAR_X_MOVE_RANGE_P;\n\nconst CAR_MAX_OFFROAD_SPEED = 80 * POS_FIXED_MATH_ONE;\n\nclass CarAccelerationPoint {\n    constructor(public speed: number, public acceleration: number) {        \n    }\n}\n\nconst CAR_ACCELERATION_CURVE: CarAccelerationPoint[] = [\n    new CarAccelerationPoint(0 * POS_FIXED_MATH_ONE, 35 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(50 * POS_FIXED_MATH_ONE, 32 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(100 * POS_FIXED_MATH_ONE, 27 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(150 * POS_FIXED_MATH_ONE, 22 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(200 * POS_FIXED_MATH_ONE, 15 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(250 * POS_FIXED_MATH_ONE, 10 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(270 * POS_FIXED_MATH_ONE, 5 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(280 * POS_FIXED_MATH_ONE, Math.round(3.5 * POS_FIXED_MATH_ONE)),\n    new CarAccelerationPoint(285 * POS_FIXED_MATH_ONE, Math.round(2.8 * POS_FIXED_MATH_ONE)),\n    new CarAccelerationPoint(290 * POS_FIXED_MATH_ONE, Math.round(1 * POS_FIXED_MATH_ONE)),\n];\n\nconst CAR_BRAKING_CURVE: CarAccelerationPoint[] = [\n    new CarAccelerationPoint(0 * POS_FIXED_MATH_ONE, -70 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(50 * POS_FIXED_MATH_ONE, -60 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(100 * POS_FIXED_MATH_ONE, -50 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(150 * POS_FIXED_MATH_ONE, -45 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(200 * POS_FIXED_MATH_ONE, -38 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(250 * POS_FIXED_MATH_ONE, -30 * POS_FIXED_MATH_ONE),\n    new CarAccelerationPoint(CAR_MAX_SPEED, -25 * POS_FIXED_MATH_ONE),\n];\n\nconst CAR_COASTING_ACCELERATION = -12 * POS_FIXED_MATH_ONE;\nconst CAR_HARD_STOP_ACCELERATION = -CAR_MAX_SPEED * 2 * POS_FIXED_MATH_ONE;\n\nclass CarPhysics {\n    private _speedFP: number;\n    private _traveledDistanceFP: number;\n    private _deltaTraveledDistanceFP: number;\n    private _lastRun: number;\n    private _carXPosFP: number;\n\n    constructor() {\n        this.clear();\n    }\n\n    public setSpeed(value: number) {\n        this._speedFP = Math.imul(value, POS_FIXED_MATH_ONE);\n    }\n\n    public speed(): number {\n        return Math.idiv(this._speedFP, POS_FIXED_MATH_ONE);\n    }\n\n    public traveledDistance(): number {\n        return Math.idiv(this._traveledDistanceFP, POS_FIXED_MATH_ONE)\n    }\n\n    public deltaTraveledDistance(): number {\n        return Math.idiv(this._deltaTraveledDistanceFP, POS_FIXED_MATH_ONE)\n    }\n\n    public setCarXPos(value: number): void {\n        this._carXPosFP = Math.imul(value, POS_FIXED_MATH_ONE);\n    }\n\n    public carXPos(): number {\n        return Math.idiv(this._carXPosFP, POS_FIXED_MATH_ONE);\n    }\n\n    public updateSpeed(accelerate: boolean, brake: boolean, turnLeft: boolean, turnRight: boolean, offRoad: boolean): void {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        if (offRoad && accelerate) {\n            if (this._speedFP > CAR_MAX_OFFROAD_SPEED) {\n                accelerate = false;\n                brake = true;\n            }\n        }\n\n        // Update the speed\n        if (brake) {\n            for (let i = CAR_BRAKING_CURVE.length - 1; i >= 0; i--) {\n                const point = CAR_BRAKING_CURVE[i];\n                if (this._speedFP >= point.speed) {\n                    this._speedFP += Math.idiv(Math.imul(point.acceleration, deltaT), 1000);\n                    break;\n                }\n            }        \n        } else if (accelerate) {\n            for (let i = CAR_ACCELERATION_CURVE.length - 1; i >= 0; i--) {\n                const point = CAR_ACCELERATION_CURVE[i];\n                if (this._speedFP >= point.speed) {\n                    this._speedFP += Math.idiv(Math.imul(point.acceleration, deltaT), 1000);\n                    break;\n                }\n            }        \n        } else {\n            this._speedFP += Math.idiv(Math.imul(CAR_COASTING_ACCELERATION, deltaT), 1000);\n        }\n\n        if (this._speedFP > CAR_MAX_SPEED) {\n            this._speedFP = CAR_MAX_SPEED;\n        } else if (this._speedFP < 0) {\n            this._speedFP = 0;\n        }\n\n        this.updateTravelDistance(deltaT);\n\n        // Update car X position when the car is running\n        let deltaX = 0;\n        if (this._speedFP > POS_FIXED_MATH_ONE) {\n            if (turnLeft && !turnRight)\n                deltaX = -CAR_TURN_WEIGHT;\n            else if (!turnLeft && turnRight)\n                deltaX = CAR_TURN_WEIGHT;\n        }\n\n        deltaX = Math.idiv(Math.imul(deltaX, deltaT), 1000);\n        this._carXPosFP = Math.constrain(this._carXPosFP + deltaX, CAR_X_MOVE_RANGE_M, CAR_X_MOVE_RANGE_P);\n    }\n\n    public applyRoadDeltaCurve(roadCurveDelta: number): void {\n        const curveDisplacement = Math.imul(roadCurveDelta, CAR_CURVE_WEIGHT);\n        this._carXPosFP = Math.constrain(this._carXPosFP - curveDisplacement, CAR_X_MOVE_RANGE_M, CAR_X_MOVE_RANGE_P);\n    }\n    \n    public hardStop(): void {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        this._speedFP += Math.idiv(Math.imul(CAR_HARD_STOP_ACCELERATION, deltaT), 1000);        \n        if (this._speedFP < 0)\n                this._speedFP = 0;\n\n        this.updateTravelDistance(deltaT);\n    }\n\n    public moveToXPos(xPos: number, speed: number) {\n        const now = game.runtime();\n        const deltaT = now - this._lastRun;\n        this._lastRun = now;\n\n        const xPosFP = Math.imul(xPos, POS_FIXED_MATH_ONE);\n        const distanceToXPos = xPosFP - this._carXPosFP;\n\n        let deltaXFP = Math.idiv(Math.imul(Math.imul(speed, POS_FIXED_MATH_ONE), deltaT), 1000);\n        if (deltaXFP > Math.abs(distanceToXPos))\n            deltaXFP = distanceToXPos;\n        else if (distanceToXPos < 0)\n            deltaXFP = -deltaXFP;\n\n        let pippo = this._carXPosFP;\n        this._carXPosFP += deltaXFP;\n    }\n\n    public clear(): void {\n        this._lastRun = game.runtime();\n        this._speedFP = 0;\n        this._traveledDistanceFP = 0;\n        this._deltaTraveledDistanceFP = 0;\n        this._carXPosFP = 0;\n    }\n\n    private updateTravelDistance(deltaTime: number): void {\n        // Update traveled distance and delta traveled distance\n        const oldTraveledDistanceFP = this._traveledDistanceFP;\n        this._traveledDistanceFP += Math.idiv(Math.imul(this._speedFP, deltaTime), CAR_SPEED_TRAVEL_FACTOR);\n        this._deltaTraveledDistanceFP = this._traveledDistanceFP - oldTraveledDistanceFP;\n    }\n}","playerCarAssets.ts":"const CAR_IMG_STRAIGHT = img`\n    ..........2222222222222222222..........\n    ........22999999999999999999922........\n    ...2dd.2999eeee99999995554599992.dd2...\n    ...2ee22999eeee999999455555499922ee2...\n    .....222ff444444fffff44444544ff222.....\n    ..22222eeeeeeeeeeeeeeeeeeeeeeeee22222..\n    222222effffffffff1ffffffffffffffe222222\n    2fffffffffffffff111fffffffffffffffffff2\n    2f4441dfbbbbbbbbbb11b1bbbbbbbbbfd1444f2\n    2f22222ffffffffff1f11fffffffffff22222f2\n    2fffffffbbbbbbbbbbbb1bbbbbbbbbbfffffff2\n    222222222222244444444444442222222222222\n    422222222222245555555555542222222222224\n    442222222222244444444444442222222222444\n    f4444444411222222222222222221144444444f\n    feeeffffdff1eeeeeeeeeeeeeeedff1ffffeeef\n    fffffffffddfffffffffffffffffddfffffffff\n    ffffffff.......................ffffffff\n    .ffffff.........................ffffff.\n`;\nconst CAR_IMG_LEFT = img`\n    .............22222222222222.................\n    ...........229999999999999922...............\n    ......2dd.2999eee9999555459992.dd...........\n    ......2ee22999eee99945555549922ee22.........\n    ....2222222ff44444ff44444544f222222222......\n    ..422e2222222eeeeeeeeeeeeeeeeeee222222222...\n    .242ef222222effffffffff1ffffffffe2222222222.\n    .22e4e2fffffffffffffff111ffffffffffffffff22.\n    .2e4ef2f4441dfbbbbbbbbbb11bbbbbbbbfd1444f22.\n    .22e422f22222ffffffffff1fffffffffff22222f22.\n    .fe4222fffffffbbbbbbbbbbbbbbbbbbbbfffffff22.\n    .ff2222222222222222444444444444222222222222.\n    .fff224222222222222455555555554222222222224.\n    ..ff2f4422222222222444444444444222222222444.\n    ...f2ff44444444412222222222222222144444444f.\n    ....2ffeeeffffedf1eeeeeeeeeeeeee1f1ffffeeef.\n    .....fffffffffffdffffffffffffffffdfffffffff.\n    ......ffffffff.....................ffffffff.\n    .......ffffff.......................ffffff..\n`;\nconst CAR_IMG_RIGHT = img`\n    .................22222222222222.............\n    ...............229999999999999922...........\n    ...........dd.29999eeee99955459992.dd2......\n    .........22ee229999eeee994555549922ee2......\n    ......222222222fff444444f444454ff2222222....\n    ...222222222eeeeeeeeeeeeeeeeeee2222222e224..\n    .2222222222efffffff1fffffffffffe222222fe242.\n    .22fffffffffffffff111ffffffffffffffff2e4e22.\n    .22f4441dfbbbbbbbbbb11bbbbbbbbfd1444f2fe4e2.\n    .22f22222ffffffffff1fffffffffff22222f224e22.\n    .22fffffffbbbbbbbbbbbbbbbbbbbbfffffff2224ef.\n    .2222222222224444444444442222222222222222ff.\n    .422222222222455555555554222222222222422fff.\n    .4442222222224444444444442222222222244f2ff..\n    .f44444444122222222222222221444444444ff2f...\n    .feeeffff1f1eeeeeeeeeeeeee1fdeffffeeeff2....\n    .fffffffffdffffffffffffffffdfffffffffff.....\n    .ffffffff.....................ffffffff......\n    ..ffffff.......................ffffff.......\n`;\nconst CAR_IMG_SIDE_L = img`\n    ............................f2.....eee55.........................\n    ...........................f2.....ffeee55........................\n    ..........................f2......fdddee45.......................\n    .........................f2........ddeee45.......................\n    ........................f2........886688a5.......................\n    .......................f2ff......dd88668a......eeeeeeeeee........\n    ..................222.f2ffff..dddddd8888a..222222222222222e2.....\n    .............22222222222222222222222222222222222222e2e2e2e2e2efff\n    .......2222222222222222222222222222eeee22fffff2222222222222222f44\n    ...222222222222222222222222eeeeeeee222222222222222222422422422f22\n    .222222222222222222222eeeee222eeeeeeeee2fffff22222222222222222fff\n    2222222222bbbbb222222eeeeeeeee2222222222222222222222bbbbb2222222.\n    522222222bbfffbb2222222222222eeeeeeeee2fffff2222222bbfffbb2222222\n    12e2e2e2bbfdddfbb222eeeeeeeee2222222222222222e2e2ebbfdddfbbe2e222\n    2e2e2e2ebfd1d1dfb222222222222222222222222222e2e2e2bfd1d1dfb2e422.\n    .fffffffbfddfddfbfffffffffffffffffffffffffffffffffbfddfddfbf44f..\n    ..ffffffbfd1d1dfbfff........ffffffffffffffffffffffbfd1d1dfbf.....\n    ..........fdddf.....................................fdddf........\n    ...........fff.......................................fff.........\n`;\nconst CAR_IMG_LEFT_2 = img`\n    .................22222222222222...........................\n    ...............22999999999999992..........................\n    ..............299ee9999555459992dd...........2222222......\n    .............299ffeee99d555499992ee......22222eeeeeeee222.\n    .........dd.2f99ddeee99d444449992222222222eeeeeeeeffffff22\n    .........ee2ff9ddd2222222222222422222eeeeeff1fffffbf144f22\n    ........2222222222222222222222422222effffff1111bbbff222f22\n    ....22222222222222222222222222422fffffffffbbb1ffffbfffff22\n    .2222222222222eeeeee2fff222222422f441fbbbbff1fbbbb22222222\n    22222222222eeee222222222222222422f222fffffbbbb444222222222\n    5222ff222222222eeeee2fff222222422fffffbbbb444455422222224.\n    122fddf2222eeeee22222222222222422222222222455544421444444.\n    22fd11df22222222eeee2fff22ff224422222222224444222211fffee.\n    .ffddddffffff222222222222fddf22442222222222222eeeefdfffff.\n    ..fd11dfffffffffffff2222fd11df2f4444444122eeeefffffffff...\n    ...fddfff....ffffffffffffddddf2feeffffed1effff...fffff....\n    ....fff.............fffffd11df2fffffffffdff...............\n    .........................fddffff..........................\n    ..........................ffff............................\n`;\n\n\nconst CAR_IMG_EXPLOSION_0 = img`\n    . . . . 1 1 1 1 . . . .\n    . . 1 1 1 1 1 1 1 1 . .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . 1 1 1 1 1 1 1 1 1 1 .\n    . . 1 1 1 1 1 1 1 1 . .\n    . . . . 1 1 1 1 . . . .\n`;\nconst CAR_IMG_EXPLOSION_1 = img`\n    ..........111111..........\n    .......111111111111.......\n    ......11111111111111......\n    ....111111111111111111....\n    ...11111111111111111111...\n    ...11111111111111111111...\n    ..1111111111111111111111..\n    .111111111111111111111111.\n    .111111111111111111111111.\n    .111111111111111111111111.\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    11111111111111111111111111\n    .111111111111111111111111.\n    .111111111111111111111111.\n    .111111111111111111111111.\n    ..1111111111111111111111..\n    ...11111111111111111111...\n    ...11111111111111111111...\n    ....111111111111111111....\n    ......11111111111111......\n    .......111111111111.......\n    ..........111111..........\n`;\nconst CAR_IMG_EXPLOSION_2 = img`\n    ........44444................\n    ......4444444444444444.......\n    .....4444444444444444444.....\n    ....444444444444444444444....\n    ....4444444444444444444444...\n    ...444444411441144441414444..\n    ..44444144111111144444144444.\n    ..44441441114441144444444444.\n    .4444414411111414144441414444\n    .4444444441114114144411441444\n    44444444444411411114444444444\n    44444444444144411111444444444\n    44444444441441141411144444444\n    44144444444411441411444444444\n    4111444444111141144444444444.\n    4114444444111111444144444444.\n    .11444444411411444114444444..\n    .44414444441441441144444144..\n    ..4111444444111111144444144..\n    ..441444444411144114444114...\n    ..444444444441444444444114...\n    ..444444444444444444444144...\n    ...44444444444444111444444...\n    ...44444444444444441444444...\n    ....444444444444441444444....\n    .....44444444444444444444....\n    .......44444444444444444.....\n    ..............444444444......\n    ................44444........\n`;\nconst CAR_IMG_EXPLOSION_3 = img`\n    ...............4444.............\n    ...........44444444444..........\n    .......444444444444444444.......\n    ......444444444444444444444.....\n    .....44444441144111114444444....\n    .....444444111444414444444444...\n    ....44444441114444444111144444..\n    ...444444444444444444111144444..\n    ...4444444444444444444444444444.\n    ..44444411444444444444444444444.\n    ..4444441144444444..444444444444\n    ..44444444444444.4..444444441444\n    ..4444414444444.....4.4444411144\n    .444444144444.44....4.4444411444\n    .444444144444..........444444444\n    .44444444444...........444444444\n    .44444114444.4......4.4444444444\n    .444441144444......4.44444414444\n    ..444444444444.4..44444444114444\n    ..44441144444444.444444441114444\n    ..4444114444444..444444441444444\n    ..444444444444444444444444444444\n    ..44444444444444444444444444444.\n    ..44444441444444444444444444444.\n    ..4444444444441111114444444444..\n    ...444444444111111114444444444..\n    ....4444444411114114444444444...\n    .....44444441144444444444444....\n    ......444444444444444444444.....\n    .......4444444444444444444......\n    .........44444444444444.........\n    .............4444444............\n`;\nconst CAR_IMG_EXPLOSION_4 = img`\n    ..44...........4144.....4.......\n    .4444.4....44444444444.4444444..\n    44444..444444444444444.44444414.\n    .444....4444.4444..444.444444444\n    ..44....444...444444444444.4444.\n    ..4....444....44444.44414...444.\n    .444..4444....44.....4444....44.\n    .4444444.44..44.......4444..44..\n    ..44444...44444.......4444...44.\n    ..4444....44444........444....4.\n    ..4441...444444........4444..444\n    ..4441....4441..........444...44\n    ..4444....4444..........4444..44\n    .4444....4411..........44414...4\n    .44444..44444.........4444444.44\n    .44444444444.........4444.444444\n    ...44444444.........44.4...44444\n    ..444..144.................44444\n    ..444.4444..........4.....44..44\n    ..44..44.44..........4....44.444\n    ..14.44...444.........4..444.414\n    ..4444.....44444........4444.144\n    ..444......444444........4.4.44.\n    ..444.......444444444...444.444.\n    ..44.........4444..444.4444.44..\n    .........4....44....444.444444..\n    4444.444444..44.....44...4444...\n    4414444444444444...4444.4444....\n    44444.444444114444444444444.....\n    ..444..4444444441444444444......\n    ...4.....44444444444444.........\n    .............4444444............\n`;\n\nconst CAR_EXPLOSION_FRAMES = [\n    CAR_IMG_EXPLOSION_0, CAR_IMG_EXPLOSION_1, CAR_IMG_EXPLOSION_2,\n    CAR_IMG_EXPLOSION_3, CAR_IMG_EXPLOSION_4\n];\n","explosionanimation.ts":"class ExplosionAnimation {\n    public singleExplosionDurationMs: number;\n    public numFires: number;\n    public minStartDelay: number;\n    public maxStartDelay: number;\n\n    private running: boolean;\n    private animationStartTime: number;\n    private animationEndTime: number;\n    private frameInterval: number;\n    private fireStartTime: number[];\n    private fireXOffset: number[];\n    private fireYOffset: number[];\n\n    constructor(public offsetWidth: number, public offsetHeight: number, public durationMs: number, public frames: Image[]) {\n        this.singleExplosionDurationMs = 400;\n        this.numFires = 4;\n        this.minStartDelay = 100;\n        this.maxStartDelay = 500;\n        this.running = false;\n        this.frames = frames;\n    }\n\n    public isDone(): boolean {\n        return !this.running;\n    }\n\n    public begin(): void {\n        this.fireStartTime = [];\n        // First fire always start immediately\n        this.fireStartTime.push(0);\n        // The other fires have little delays\n        for (let i = 1; i < this.numFires; i++) {\n            this.fireStartTime.push(randint(this.minStartDelay, this.maxStartDelay));\n        }\n        \n        const xOffsetPlus = this.offsetWidth >> 1;\n        const xOffsetMinus = -xOffsetPlus;\n        const yOffsetPlus = this.offsetHeight >> 1;\n        const yOffsetMinus = -yOffsetPlus;\n        this.fireXOffset = [];\n        this.fireYOffset = [];\n\n        for (let i = 0; i < this.numFires; i++) {\n            this.fireXOffset.push(randint(xOffsetMinus, xOffsetPlus));\n            this.fireYOffset.push(randint(yOffsetMinus, yOffsetPlus));\n        }\n\n        this.frameInterval = Math.idiv(this.singleExplosionDurationMs, this.frames.length);\n        this.animationStartTime = game.runtime();\n        this.animationEndTime = this.animationStartTime + this.durationMs;\n        this.running = true;\n    }\n\n    public draw(targetImg: Image, x: number, y: number): void {\n        if (!this.running)\n            return;\n\n        const now = game.runtime();\n        const deltaSinceStart = now - this.animationStartTime;\n\n        if (now >= this.animationEndTime) {\n            this.running = false;\n            return;\n        }\n\n        for (let i = 0; i < this.numFires; i++) {\n            const startTime = this.fireStartTime[i];\n            if (deltaSinceStart >= startTime) {\n                const frameIndex = Math.idiv(deltaSinceStart - startTime, this.frameInterval);\n                if (frameIndex < this.frames.length) {\n                    const frameImg = this.frames[frameIndex];\n                    const drawX = x - (frameImg.width >> 1) + this.fireXOffset[i];\n                    const drawY = y - (frameImg.height >> 1) + this.fireYOffset[i];\n                    targetImg.drawTransparentImage(frameImg, drawX, drawY);\n                } else {\n                    const xOffsetPlus = this.offsetWidth >> 1;\n                    const xOffsetMinus = -xOffsetPlus;\n                    const yOffsetPlus = this.offsetHeight >> 1;\n                    const yOffsetMinus = -yOffsetPlus;\n\n                    this.fireStartTime[i] = deltaSinceStart + randint(this.minStartDelay, this.maxStartDelay);\n                    this.fireXOffset[i] = randint(xOffsetMinus, xOffsetPlus);\n                    this.fireYOffset[i] = randint(yOffsetMinus, yOffsetPlus);\n                }\n            }\n        }\n    }\n}\n","main.py":"CAR_Y_POS = SCREEN_HEIGHT - (CAR_IMG_STRAIGHT.height >> 1) - 6\nBACKDROP_IMG = img(\"\"\"\n    ................................................................................................................................................................\n    .........................................................................6666b..................................................................................\n    ...............................................................6766....6677666b6................................................................................\n    .............................................................6676666..6777666b6b6...............................................................................\n    ...............776786.......................................b67676666677666966b6b...............................................................................\n    ............77777787886b...................................66767666667766696966b6b..............................................................................\n    ...........777776766b6b6b..................66b6b.........666b66666667769696969666666............................................................................\n    ..........77676766766b6b6b................6666b6b6.....666666666666666966696966666666...........................................................................\n    .........7667676769696b6b6b6.............6666b6b6b6b..66b666666666666966b66669666666666.........................................................................\n    .......767766b69696969666b6b6...........666666b6b6b6..6666666666669696966b6666969666666666..........................................................666b6b6.....\n    .....6667696b6b69696966666b6b6b......6666776666b6b6b66666666666969696966b6b66666696666e6e6b66......................................................76766b6b6b...\n    ...6666969666b6669696966666666666..666667767666666b6b66666666696969666666b6b66666696666e666b666666666..........................................7667676666b6b6b..\n    66666696966666b66666969666666666666666667666666666666b666b466969696666666666b666666666666666b6b6b6666666666666............666666666.........677767666e6666b6b6b6\n    666969666666666666666669666666666d666667666666666d6666b66466969666666666646666666666666666666b6b6b6b66666466666666.....6666666b4666666..66666666666646e666666b66\n    6666666666d666666666666666666666666646666666666666666666666666666666666666666666666666664666666666b666666666666646666666666b46666666b466666666666666666666666666\n    6d66666666666666646666666d666b6666b666b66b6b66b666b66666b66b6b6b66b6666b6666b66b6b6b6b6b6b66b666b6666b66b666b6b6b6b6b6b6b666666b6666666666b6b6b66b666b666b666b66\n    \"\"\")\nEXPLOSION_MELODY_1 = music.Melody(\"~11 !60,150 !100,50 !80,100 !60,150 !100,50 !80,100 !60,150 !100,250 !80,150 !60,350 !100,150 !80,150 @0,0,255,200 !60,150\")\nEXPLOSION_MELODY_2 = music.Melody(\"~13 !80,50 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 !80,150 !60,150 !100,150 @0,0,255,200 !80,100\")\nEXPLOSION_MELODY_3 = music.Melody(\"~5 !80,2000\")\ninfo.set_score(0)\ninfo.show_score(False)\ncountdown = Countdown()\ncountdown.load(60)\nrunning = False\nisOver = False\nendReached = False\ncrashed = False\nshowCar = False\ntimeExtended = False\nworldRender = WorldRender()\ncarPhysics = CarPhysics()\nexplosionAnimation = ExplosionAnimation(40, 10, 2000, CAR_EXPLOSION_FRAMES)\nmelodyPlayer1 = music.MelodyPlayer(EXPLOSION_MELODY_1)\nmelodyPlayer2 = music.MelodyPlayer(EXPLOSION_MELODY_2)\nmelodyPlayer3 = music.MelodyPlayer(EXPLOSION_MELODY_3)\ndoubledFont = image.scaled_font(image.font8, 2)\nspeedTextLabel = TextRender(\"SPEED\", 1, 3)\nspeedTextValue = TextRender(str(carPhysics.speed()), 1, 3, doubledFont)\ncountDownLabel = TextRender(\"TIME\", 1, 3)\ncountDownValue = TextRender(str(countdown.remaining_time()), 1, 3, doubledFont)\nscoreTextLabel = TextRender(\"SCORE\", 1, 3)\nscoreTextValue = TextRender(str(info.score()), 1, 3, doubledFont)\n\ndef on_on_paint():\n    global crashed, endReached, timeExtended, CAR_VIEWPORT\n    if isOver or endReached:\n        return\n    if running:\n        if crashed:\n            # Quickly stop the car after a crash\n            if not explosionAnimation.is_done():\n                carPhysics.hard_stop()\n            else:\n                # Move the car back on road center\n                # when the explosion animation is done\n                carPhysics.move_to_xpos(0, 40)\n                pippo = carPhysics.car_xpos()\n                if carPhysics.car_xpos() == 0:\n                    crashed = False\n        else:\n            offRoad = abs(Math.imul(carPhysics.car_xpos(), POS_FIXED_MATH_ONE)) > STRIPE_HALF_WIDTH_FP\n            carPhysics.update_speed(controller.A.is_pressed(),\n                controller.B.is_pressed(),\n                controller.left.is_pressed(),\n                controller.right.is_pressed(),\n                offRoad)\n            deltaDistance = carPhysics.delta_traveled_distance()\n            oldDistance = carPhysics.traveled_distance() - deltaDistance\n            roadCurveDelta = worldRender.calc_road_curve_in_segment(oldDistance, deltaDistance)\n            carPhysics.apply_road_delta_curve(roadCurveDelta)\n    else:\n        carPhysics.clear()\n    # Get player car horizontal position and set camera center\n    carXPos = carPhysics.car_xpos()\n    if carXPos >= 0:\n        if carXPos > CAR_VIEWPORT:\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT - carXPos\n            carXPos2D = SCREEN_HALF_WIDTH_PLUS_CAR_VIEWPORT\n        else:\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH\n            carXPos2D = SCREEN_HALF_WIDTH + carXPos\n    else:\n        if carXPos < (-CAR_VIEWPORT):\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT - carXPos\n            carXPos2D = SCREEN_HALF_WIDTH_MINUS_CAR_VIEWPORT\n        else:\n            perspectiveHorizontalCenter = SCREEN_HALF_WIDTH\n            carXPos2D = SCREEN_HALF_WIDTH + carXPos\n    # Draw the world\n    backgroundImg = scene.background_image()\n    traveledDistance = carPhysics.traveled_distance()\n    endReached = worldRender.draw(backgroundImg, traveledDistance, perspectiveHorizontalCenter)\n    if endReached:\n        carPhysics.set_speed(0)\n    # Draw the car\n    if carPhysics.speed() > 1:\n        # Car turn animation    \n        if controller.left.is_pressed():\n            carFrame = CAR_IMG_LEFT\n        elif controller.right.is_pressed():\n            carFrame = CAR_IMG_RIGHT\n        else:\n            carFrame = CAR_IMG_STRAIGHT\n    else:\n        carFrame = CAR_IMG_STRAIGHT\n    carDrawX = carXPos2D - (carFrame.width >> 1)\n    carDrawY = CAR_Y_POS - (carFrame.height >> 1)\n    if showCar:\n        backgroundImg.draw_transparent_image(carFrame, carDrawX, carDrawY)\n    # Draw car explosion animation\n    if not explosionAnimation.is_done():\n        explosionAnimation.draw(backgroundImg, carXPos2D, CAR_Y_POS)\n    # Draw HUD\n    speedTextValue.set_text(str(carPhysics.speed()))\n    countDownValue.set_text(str(countdown.remaining_time()))\n    scoreTextValue.set_text(str(info.score()))\n    speedTextLabel.draw(backgroundImg, 1, 1)\n    speedTextValue.draw(backgroundImg, 0, speedTextLabel.height() + 2)\n    countDownLabel.draw(backgroundImg, SCREEN_HALF_WIDTH, 1, TextAlignment.CENTER)\n    countDownValue.draw(backgroundImg,\n        SCREEN_HALF_WIDTH,\n        countDownLabel.height() + 2,\n        TextAlignment.CENTER)\n    scoreTextLabel.draw(backgroundImg, SCREEN_WIDTH - 2, 1, TextAlignment.RIGHT)\n    scoreTextValue.draw(backgroundImg,\n        SCREEN_WIDTH - 1,\n        scoreTextLabel.height() + 2,\n        TextAlignment.RIGHT)\n    if not crashed and showCar:\n        # Check if car is outside the road\n        if Math.imul(abs(carXPos) + (carFrame.width >> 1), POS_FIXED_MATH_ONE) > STRIPE_HALF_WIDTH_FP:\n            # Check for crash against obstacles\n            colX1 = carXPos - (carFrame.width >> 1)\n            colX2 = colX1 + carFrame.width\n            colY2 = Math.idiv(ROAD_INIT_Y, POS_FIXED_MATH_ONE) - (SCREEN_HEIGHT - CAR_Y_POS + (carFrame.height >> 1))\n            colY1 = colY2 - carFrame.height\n            if worldRender.check_collision(colX1, colY1, colX2, colY2, STRIPE_HEIGHT >> 1):\n                crashed = True\n                \n                def on_run_in_parallel():\n                    melodyPlayer1.play(170)\n                control.run_in_parallel(on_run_in_parallel)\n                \n                \n                def on_run_in_parallel2():\n                    melodyPlayer2.play(170)\n                control.run_in_parallel(on_run_in_parallel2)\n                \n                \n                def on_run_in_parallel3():\n                    melodyPlayer3.play(90)\n                control.run_in_parallel(on_run_in_parallel3)\n                \n                explosionAnimation.begin()\n    # Extend time on check sign\n    if not timeExtended and worldRender.on_check_sign(traveledDistance):\n        timeExtended = True\n        countdown.add(30)\n        \n        def on_run_in_parallel4():\n            music.play_melody(\"B5:2 R:1 B5:2 R:1 B5:2\", 160)\n        control.run_in_parallel(on_run_in_parallel4)\n        \ngame.on_paint(on_on_paint)\n\ndef beginSequence():\n    global showCar\n    # Show car entering the scene\n    carSprite = sprites.create(CAR_IMG_SIDE_L)\n    carSprite.x = 200\n    carSprite.y = CAR_Y_POS\n    carSprite.vx = -100\n    while carSprite.x > SCREEN_HALF_WIDTH:\n        pause(10)\n    carSprite.vx = 0\n    carSprite.x = SCREEN_HALF_WIDTH\n    carSprite.set_image(CAR_IMG_LEFT_2)\n    carSprite.x = SCREEN_HALF_WIDTH\n    pause(100)\n    carSprite.set_image(CAR_IMG_LEFT)\n    carSprite.x = SCREEN_HALF_WIDTH\n    pause(100)\n    carSprite.set_image(CAR_IMG_STRAIGHT)\n    carSprite.x = SCREEN_HALF_WIDTH\n    showCar = True\n    pause(100)\n    carSprite.destroy()\n    # Start countdown\n    music.set_volume(255)\n    music.set_tempo(60)\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_1\n    music.play_melody(\"C5:1 R:4\", 60)\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_RED_2\n    music.play_melody(\"C5:1 R:4\", 60)\n    OBST_SEMAPHORE_SIGN.image = OBST_IMG_SEMAPHORE_GREEN\n    \n    def on_run_in_parallel5():\n        music.play_melody(\"A5:4\", 60)\n    control.run_in_parallel(on_run_in_parallel5)\n    \nbeginSequence()\ncountdown.start()\nrunning = True\n\ndef on_update_interval():\n    global isOver\n    if not isOver:\n        info.change_score_by(Math.idiv(carPhysics.speed(), 20))\n        info.show_score(False)\n        # Time over game end\n        if countdown.is_expired():\n            isOver = True\n            game.over()\n        # Circuit end reached. Game won\n        if endReached:\n            isOver = True\n            game.over(True, effects.confetti)\ngame.on_update_interval(200, on_update_interval)\n","pxt.json":"{\n    \"name\": \"Outrun\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"mathconst.ts\",\n        \"obstacles.ts\",\n        \"circuit.ts\",\n        \"textrender.ts\",\n        \"countdown.ts\",\n        \"worldrender.ts\",\n        \"carphysics.ts\",\n        \"playerCarAssets.ts\",\n        \"explosionanimation.ts\",\n        \"main.py\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v1.2.6\",\n        \"tag\": \"v1.2.6\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/7f343e1ba30a4c31de6b7b14d288d34b2741b2f4\",\n        \"target\": \"1.2.16\",\n        \"pxt\": \"6.2.21\",\n        \"targetId\": \"arcade\"\n    },\n    \"supportedTargets\": [\n        \"arcade\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}}],"shares":[],"lastSaveTime":1744741796096}